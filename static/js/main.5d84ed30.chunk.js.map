{"version":3,"sources":["utils/numHelpers.js","utils/KryptoTable.jsx","utils/WordAndSolution.jsx","utils/line-for-letter/LineForLetter.jsx","cezar/SolutionPerChar.jsx","cezar/Cezar.jsx","vigener/SolutionPerChar.jsx","vigener/Vigener.jsx","afiniczny/SolutionPerChar.jsx","afiniczny/AfinicznyKluczLiczenie.jsx","afiniczny/Afiniczny.jsx","hill/SolutionPerChar.jsx","hill/Matrix.jsx","hill/useMatrixState.js","hill/hillCipher.js","hill/Hill.jsx","diffie-hellman/DisplayFormula.jsx","diffie-hellman/useNumberInput.js","diffie-hellman/getFastPowerMod.js","diffie-hellman/FastPowerTable.jsx","diffie-hellman/BinaryExplanator.jsx","diffie-hellman/DiffieHellman.jsx","odwrotnosc/Odwrotnosc.jsx","App.jsx","index.js"],"names":["mod","n","m","modInverse","a","x","getCode","letter","toLowerCase","charCodeAt","getLetter","code","String","fromCharCode","dec2bin","dec","toString","KryptoTable","startStr","endStr","middleNumbersArr","isEncryption","startRow","TableRow","TableCell","component","scope","split","map","v","i","align","startNumbers","endNumbers","endRow","middleRow","TableContainer","props","Paper","variant","Table","TableBody","WordAndSolution","boxCenterProps","display","justifyContent","alignItems","Card","Box","p","flex","Typography","LineForLetter","resultLetter","children","fontSize","SolutionPerChar","key","keyValue","isEncr","letterCode","letterAndCode","afterMod","Cezar","useState","word","setWord","setKey","isEncrypt","setIsEncrypt","result","crypted","newKey","parseInt","c","cezarEncrypt","my","elevation","Grid","container","item","xs","TextField","label","onChange","event","target","value","FormControl","InputLabel","Select","MenuItem","type","Number","keyCode","letterAndKey","Vigener","length","k","vigenerEncrypt","middleTableRow","useMemo","arr","forEach","push","calculationJsx","b","invertedA","NaN","AfinicznyKluczLiczenie","num","results","getStepsForInverseKey","step","Afiniczny","keys","setKeys","replace","undefined","isEncode","affine","e","placeholder","tdCss","css","centeredInputCss","Matrix","rows","changeValue","error","helperText","handleChangeField","row","column","onlyNumbers","useInput","flexDirection","alignContent","justifyItems","field","j","className","size","FormHelperText","defaultMatrix","Array","fill","useMatrixState","initSize","setRows","setValue","rowNum","columnNum","resize","newWidth","newWidthNumber","clamp","require","modMatrix","matrix","newMatrix","data","getInvertedMatrix","keyMatrix","detModuloed","determinant","inverse","adjugate","scale","matrixFromString","matrixWidth","matrixHeight","Math","ceil","width","height","subArray","getZeroesMatrix","letters","floor","col","getArrayFromMatrix","from","Hill","wordMatrix","isKeyMatrixOk","isKeyMatrixInvertable","numRows","numColumns","multiply","invertedKey","resultMatrixBeforeMod","JSON","parse","stringify","resultMatrix","hillEncrypt","join","matrixArrayToString","showResultAfterMod","setShowResultAfterMod","FormControlLabel","control","Switch","checked","onClick","color","DisplayFormula","g","power","textAlign","useNumberInput","initialValue","val","setVal","numberValue","isNaN","getFastPowerMod","reversedBinaryArray","reverse","steps","t","helperTextA","helperTextX","prevT","prevA","prevX","answerCss","calculationNumbersCss","TableCellHoverable","withStyles","root","backgroundColor","FastPowerTable","stepsObj","hoveringXRow","setHoveringXRow","onStartHover","TableHead","isLast","shouldBeHighlighted","xCss","aCss","Tooltip","title","onMouseEnter","onMouseLeave","BinaryExplanator","binary","DiffieHellman","setP","setG","setA","setB","pIsPrime","isPrime","solutionPowA","solutionPowB","solutionPowAMaster","solutionPowBMaster","pb","Odwrotnosc","setN","methods","App","method","setMetod","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d84ed30.chunk.js","sourcesContent":["export function mod(n, m = 26) {\r\n\treturn ((n % m) + m) % m;\r\n}\r\n\r\n// odwrotnosc modularna\r\nexport const modInverse = (a, m = 26) => {\r\n\tfor (let x = 1; x < m; x++) if (((a % m) * (x % m)) % m == 1) return x;\r\n};\r\n\r\nexport const getCode = (letter) => letter.toLowerCase().charCodeAt(0) - 97;\r\nexport const getLetter = (code) => String.fromCharCode(mod(code, 26) + 97);\r\n\r\nexport function dec2bin(dec) {\r\n\treturn (dec >>> 0).toString(2);\r\n}\r\n\r\nexport function isPrime(num) {\r\n\tfor (var i = 2; i < num; i++) if (num % i === 0) return false;\r\n\treturn num > 1;\r\n}\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction KryptoTable({ startStr = '', endStr = '', middleNumbersArr, isEncryption = true }) {\r\n\tconst startRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'PT' : 'CT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst startNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'x' : 'y'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'y' : 'x'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'CT' : 'PT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst middleRow = middleNumbersArr && (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\tk\r\n\t\t\t</TableCell>\r\n\t\t\t{middleNumbersArr.map((v, i) => (\r\n\t\t\t\t<TableCell key={v + '-' + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{startRow}\r\n\t\t\t\t\t{startNumbers}\r\n\t\t\t\t\t{middleRow}\r\n\t\t\t\t\t{endNumbers}\r\n\t\t\t\t\t{endRow}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nexport default KryptoTable;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tCard,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction WordAndSolution({ startStr = '', endStr = '' }) {\r\n\tconst boxCenterProps = { display: 'flex', justifyContent: 'space-around', alignItems: 'center' };\r\n\treturn (\r\n\t\t<Card variant='outlined'>\r\n\t\t\t<Box p={2} {...boxCenterProps}>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{startStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={1} {...boxCenterProps}>\r\n\t\t\t\t\t<ArrowForwardIcon />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{endStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default WordAndSolution;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction LineForLetter({ letter, resultLetter, children }) {\r\n\treturn (\r\n\t\t<Box display='flex' alignItems='center'>\r\n\t\t\t<Box m={2}>{letter}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{children}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{resultLetter}</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default LineForLetter;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Cezar() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState(0);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst cezarEncrypt = () => {\r\n\t\tlet crypted = '';\r\n\t\tlet newKey = parseInt(key * (isEncrypt ? 1 : -1)) || 0;\r\n\t\tfor (let c of word) {\r\n\t\t  crypted += getLetter(getCode(c) + newKey);\r\n\t\t}\r\n\t\treturn crypted;\r\n\t}\r\n\r\n\tlet result = cezarEncrypt();\r\n\t\r\n\tconst changeKey = (event) => setKey(Number(event.target.value));\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='key' type='number' onChange={changeKey} value={key} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Cezar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst keyCode = getCode(keyValue);\r\n\r\n\tconst letterAndKey = isEncr ? letterCode + keyCode : letterCode - keyCode;\r\n\r\n\tconst afterMod = mod(letterAndKey, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>({keyValue})</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {keyCode}) mod 26 ={' '}\r\n\t\t\t{letterAndKey} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState, useMemo } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Vigener() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst vigenerEncrypt = () => {\r\n\t\tconst length = key?.length || 0;\r\n\t\tif (length) {\r\n\t\t\tlet crypted = '';\r\n\t\t\tfor (let i in word) {\r\n\t\t\t\tconst c = word[i];\r\n\t\t\t\tconst k = key[i % length];\r\n\t\t\t\tcrypted += getLetter(mod(getCode(c) + getCode(k) * (isEncrypt ? 1 : -1)));\r\n\t\t\t}\r\n\t\t\treturn crypted;\r\n\t\t} else return word;\r\n\t};\r\n\r\n\tlet result = vigenerEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\tconst middleTableRow = useMemo(() => {\r\n\t\tif (word && key) {\r\n\t\t\tconst arr = [];\r\n\t\t\tword.split('').forEach((v, i) => arr.push(key[i % key.length]));\r\n\t\t\treturn arr.map((v) => getCode(v));\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, [word, key]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='key' type='text' onChange={changeKey} value={key} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable\r\n\t\t\t\t\t\t\tstartStr={word}\r\n\t\t\t\t\t\t\tendStr={result}\r\n\t\t\t\t\t\t\tmiddleNumbersArr={middleTableRow}\r\n\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{key && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t\t<SolutionPerChar\r\n\t\t\t\t\t\t\t\t\tkey={c + i}\r\n\t\t\t\t\t\t\t\t\tletter={c}\r\n\t\t\t\t\t\t\t\t\tkeyValue={key[i % key.length]}\r\n\t\t\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Vigener;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, a, b, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\r\n\tlet code;\r\n\tlet invertedA = NaN;\r\n\tlet calculationJsx;\r\n\tif (!isEncr) {\r\n\t\tinvertedA = modInverse(a, 26);\r\n\t\tcode = invertedA * (letterCode - b);\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{invertedA} * ({letterCode} - {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tcode = letterCode * a + b;\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{a} * ({letterCode} + {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tconst afterMod = mod(code, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>\r\n\t\t\t\t({a},{b})\r\n\t\t\t</sub>\r\n\t\t\t({letterCode}) = ({calculationJsx}) mod 26 = {code} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nconst getStepsForInverseKey = (num, n = 26) => {\r\n\tconst results = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tresults.push(`${num} * ${i} mod ${n} = ${mod(num * i, n)}`);\r\n\t\tif ((num * i) % n === 1) {\r\n\t\t\tresults.push('Found inverted key = ' + i);\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nfunction AfinicznyKluczLiczenie({ a, n }) {\r\n\tconst steps = getStepsForInverseKey(a, n);\r\n\treturn steps.map((step) => (\r\n\t\t<Box key={step}>\r\n\t\t\t<Typography>{step}</Typography>\r\n\t\t</Box>\r\n\t));\r\n}\r\n\r\nexport default AfinicznyKluczLiczenie;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport AfinicznyKluczLiczenie from './AfinicznyKluczLiczenie';\r\n\r\nconst affine = (word, [a, b], isEncode = true) => {\r\n\tlet result = '';\r\n\tlet code = null;\r\n\r\n\tfor (let c of word) {\r\n\t\tif (!isEncode) {\r\n\t\t\tconst newA = modInverse(a, 26);\r\n\t\t\tcode = newA * (getCode(c) - b);\r\n\t\t} else code = getCode(c) * a + b;\r\n\r\n\t\tresult += getLetter(mod(code, 26));\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nfunction Afiniczny() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [keys, setKeys] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst [a = 0, b = 0] = keys.replace(/\\s/, '').split(',').map(Number);\r\n\r\n\tconst result = word && a !== undefined && b !== undefined ? affine(word, [a, b], isEncrypt) : '';\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeKey = (event) => setKeys(event.target.value);\r\n\tconst changeIsEncryption = (e, v) => setIsEncrypt(e.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='keys'\r\n\t\t\t\t\t\t\tplaceholder={'3,7'}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tonChange={changeKey}\r\n\t\t\t\t\t\t\tvalue={keys}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Klucz odwrócony:</Typography>\r\n\t\t\t\t\t\t\t<AfinicznyKluczLiczenie a={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} a={a} b={b} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Afiniczny;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport { css } from '@emotion/css';\r\n\r\nconst tdCss = css`\r\n\theight: 42px;\r\n\twidth: 4rem;\r\n`;\r\n\r\nconst centeredInputCss = css`\r\n\t* {\r\n\t\ttext-align: center; !important\r\n\t}\r\n`;\r\n\r\nfunction Matrix({ rows, changeValue, error, helperText }) {\r\n\tconst handleChangeField = (row, column) => (e) => {\r\n\t\tif (changeValue) {\r\n\t\t\tconst onlyNumbers = Number(e.target.value.replace(/\\D/g, ''));\r\n\t\t\tchangeValue(onlyNumbers, row, column);\r\n\t\t}\r\n\t};\r\n\r\n\tconst useInput = !!changeValue;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box\r\n\t\t\t\tmy={2}\r\n\t\t\t\tflexDirection='column'\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\talignContent='center'\r\n\t\t\t\tjustifyItems='center'\r\n\t\t\t\tjustifyContent='center'\r\n\t\t\t>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{rows.map((row, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t{row.map((field, j) => (\r\n\t\t\t\t\t\t\t\t\t<td className={tdCss} key={j}>\r\n\t\t\t\t\t\t\t\t\t\t{useInput ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={field}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={centeredInputCss}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeField(i, j)}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography align='center'>{field}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<FormHelperText error={!!helperText}>{helperText}</FormHelperText>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Matrix;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nconst defaultMatrix = (size) => Array(size).fill(Array(size).fill(0));\r\n\r\nconst useMatrixState = (initSize = 2) => {\r\n\tconst [rows, setRows] = useState(defaultMatrix(initSize));\r\n\tconst size = rows.length;\r\n\r\n\tconst setValue = (value, rowNum, columnNum) =>\r\n\t\tsetRows(\r\n\t\t\trows.map((row, i) => row.map((field, j) => (i === rowNum && columnNum === j ? value : field)))\r\n\t\t);\r\n\r\n\tconst resize = (newWidth) => {\r\n\t\t// W teorii 1 powinno działać, ale dekrypcja buguje się jak jest 1x1 klucz\r\n\t\tconst newWidthNumber = clamp(Number(newWidth), 2, 14);\r\n\t\tsetRows(defaultMatrix(newWidthNumber));\r\n\t};\r\n\r\n\treturn { rows, setValue, size, resize };\r\n};\r\n\r\nexport default useMatrixState;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\nvar Matrix = require('node-matrices');\r\n\r\nexport const getZeroesMatrix = (width, height) => {\r\n\tconst arr = [];\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tlet subArray = [];\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tsubArray.push(0);\r\n\t\t}\r\n\t\tarr.push(subArray);\r\n\t}\r\n\treturn new Matrix(arr);\r\n};\r\n\r\nexport const modMatrix = (matrix) => {\r\n\tconst newMatrix = new Matrix(matrix.data);\r\n\tfor (let i = 0; i < matrix.data.length; i++) {\r\n\t\tfor (let j = 0; j < matrix.data[i].length; j++) {\r\n\t\t\tmatrix.data[i][j] = mod(matrix.data[i][j], 26);\r\n\t\t}\r\n\t}\r\n\treturn newMatrix;\r\n};\r\n\r\nexport const isKeyMatrixInvertable = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\treturn !!inverse;\r\n};\r\n\r\nexport const getInvertedMatrix = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\tconst adjugate = keyMatrix.adjugate();\r\n\r\n\tfor (let i = 0; i < adjugate.data.length; i++) {\r\n\t\tfor (let j = 0; j < adjugate.data[i].length; j++) {\r\n\t\t\tif (adjugate.data[i][j] < 0) {\r\n\t\t\t\tadjugate.data[i][j] += 26;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst result = modMatrix(adjugate.scale(inverse));\r\n\r\n\treturn result;\r\n};\r\n","import { useState, useMemo } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tSwitch,\r\n\tFormControlLabel,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport MatrixInput from './Matrix';\r\nimport useMatrixState from 'hill/useMatrixState';\r\n\r\nimport { getInvertedMatrix, modMatrix, getZeroesMatrix, isKeyMatrixInvertable } from './hillCipher';\r\nvar Matrix = require('node-matrices');\r\n\r\nconst hillEncrypt = (wordMatrix, keyMatrix, isEncrypt) => {\r\n\tif (\r\n\t\t!wordMatrix.numRows() ||\r\n\t\t!wordMatrix.numColumns() ||\r\n\t\t!keyMatrix.numRows() ||\r\n\t\t!keyMatrix.numColumns()\r\n\t) {\r\n\t\treturn wordMatrix;\r\n\t}\r\n\r\n\tlet result;\r\n\tif (isEncrypt) {\r\n\t\tresult = wordMatrix.multiply(keyMatrix);\r\n\t} else {\r\n\t\tconst invertedKey = getInvertedMatrix(keyMatrix);\r\n\t\tresult = wordMatrix.multiply(invertedKey);\r\n\t}\r\n\treturn {\r\n\t\tresultMatrixBeforeMod: JSON.parse(JSON.stringify(result)),\r\n\t\tresultMatrix: modMatrix(result, 26),\r\n\t};\r\n};\r\n\r\nconst matrixFromString = (word, matrixWidth) => {\r\n\tconst matrixHeight = Math.ceil(word.length / matrixWidth);\r\n\r\n\tlet newMatrix = getZeroesMatrix(matrixWidth, matrixHeight);\r\n\tconst letters = word.split('');\r\n\tif (letters) {\r\n\t\tletters.forEach((c, i) => {\r\n\t\t\tconst row = Math.floor(i / matrixWidth);\r\n\t\t\tconst col = i % matrixWidth;\r\n\t\t\tnewMatrix = newMatrix.replace(row, col, getCode(c));\r\n\t\t});\r\n\t\treturn newMatrix;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nconst getArrayFromMatrix = (matrix) => matrix.data.map((row) => Array.from(row));\r\n\r\nconst matrixArrayToString = (rows) =>\r\n\trows.map((row) => row.map((v) => getLetter(v)).join('')).join('');\r\n\r\nfunction Hill() {\r\n\tconst [word, setWord] = useState('telewizor');\r\n\tconst { rows, setValue, size, resize } = useMatrixState(3);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst wordMatrix = useMemo(() => matrixFromString(word, size), [word, size]);\r\n\tconst keyMatrix = useMemo(() => new Matrix(rows), [rows]);\r\n\r\n\tconst isKeyMatrixOk = isKeyMatrixInvertable(keyMatrix);\r\n\r\n\tconst { resultMatrix, resultMatrixBeforeMod } = useMemo(\r\n\t\t() => hillEncrypt(wordMatrix, keyMatrix, isEncrypt),\r\n\t\t[wordMatrix, keyMatrix, isEncrypt]\r\n\t);\r\n\tconst result = matrixArrayToString(getArrayFromMatrix(resultMatrix));\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst handleResize = (e) => resize(e.target.value);\r\n\r\n\tconst [showResultAfterMod, setShowResultAfterMod] = useState(true);\r\n\tconst toggleShowResultAfterMod = () => setShowResultAfterMod((v) => !v);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='Size of key matrix'\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tvalue={size}\r\n\t\t\t\t\t\t\t\t\tonChange={handleResize}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Word:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(wordMatrix)} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Key:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\t\t\t\tchangeValue={setValue}\r\n\t\t\t\t\t\t\t\t\terror={!isKeyMatrixOk}\r\n\t\t\t\t\t\t\t\t\thelperText={!isKeyMatrixOk ? 'This key matrix can not be inverted' : ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4'>Inverted Key:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(getInvertedMatrix(keyMatrix))} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Multiplication result:</Typography>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={showResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleShowResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel='After modulo'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={getArrayFromMatrix(\r\n\t\t\t\t\t\t\t\t\t\tshowResultAfterMod ? resultMatrix : resultMatrixBeforeMod\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{/* <Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))} \r\n\t\t\t\t\t</Box> */}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Hill;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nfunction DisplayFormula({ p, g, power }) {\r\n\treturn (\r\n\t\t<Box textAlign='center'>\r\n\t\t\t<Typography>\r\n\t\t\t\t({g}^{power}) mod {p}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DisplayFormula;\r\n","import { useState } from 'react';\r\n\r\nconst useNumberInput = (initialValue) => {\r\n\tconst [val, setVal] = useState(initialValue || 0);\r\n\r\n\tconst setValueWithEvent = (e) => {\r\n\t\tconst numberValue = Number(e.target.value);\r\n\t\tif (isNaN(numberValue)) {\r\n\t\t\t// do nothing\r\n\t\t} else {\r\n\t\t\tsetVal(numberValue);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [val, setValueWithEvent];\r\n};\r\n\r\nexport default useNumberInput;\r\n","import { mod } from 'utils/numHelpers';\r\nimport { dec2bin } from 'utils/numHelpers';\r\n\r\nconst getFastPowerMod = (p, g, power) => {\r\n\t// np 011011101\r\n\tconst binaryString = dec2bin(power);\r\n\tconst reversedBinaryArray = binaryString.split('').reverse();\r\n\r\n\tif (!reversedBinaryArray.length) {\r\n\t\treturn 'rip, nie chce mi sie pisac error handlingu';\r\n\t}\r\n\r\n\tconst steps = [];\r\n\tsteps.push({\r\n\t\ti: 0,\r\n\t\tx: 1,\r\n\t\ta: g,\r\n\t\tt: Number(reversedBinaryArray[0]),\r\n\t\thelperTextA: 'initial value is g = ' + g,\r\n\t\thelperTextX: 'initial value is always 1 ',\r\n\t});\r\n\r\n\tfor (let i = 1; i < reversedBinaryArray.length + 1; i++) {\r\n\t\tconst t = Number(reversedBinaryArray[i]);\r\n\t\tconst prevT = steps[i - 1].t;\r\n\t\tconst prevA = steps[i - 1].a;\r\n\t\tconst prevX = steps[i - 1].x;\r\n\r\n\t\tlet helperTextX = '';\r\n\r\n\t\tlet a = mod(prevA * prevA, p);\r\n\t\tif (i === reversedBinaryArray.length) {\r\n\t\t\ta = '';\r\n\t\t}\r\n\t\tlet helperTextA = `${prevA} * ${prevA} mod ${p} =  ${a}`;\r\n\r\n\t\tlet x;\r\n\t\tif (prevT) {\r\n\t\t\tx = mod(prevX * prevA, p);\r\n\t\t\thelperTextX = `${prevX} * ${prevA} mod ${p} =  ${x}`;\r\n\t\t} else {\r\n\t\t\tx = prevX;\r\n\t\t\thelperTextX = `unchanged because previous t is 0 = ${x}`;\r\n\t\t}\r\n\t\tsteps.push({ i, x, a, t, helperTextA, helperTextX });\r\n\t}\r\n\r\n\tconst result = steps[steps.length - 1].x;\r\n\treturn {\r\n\t\tresult,\r\n\t\tsteps,\r\n\t};\r\n};\r\n\r\nexport default getFastPowerMod;\r\n","import { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst answerCss = css`\r\n\tbackground: #97ffa7;\r\n\ttext-decoration: underline;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst calculationNumbersCss = css`\r\n\tbackground: #ffd0ce;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst TableCellHoverable = withStyles({\r\n\troot: {\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'rgb(0 ,0, 0, 0.1)',\r\n\t\t},\r\n\t},\r\n})(TableCell);\r\n\r\nfunction FastPowerTable({ stepsObj }) {\r\n\tconst [hoveringXRow, setHoveringXRow] = useState(null);\r\n\tconst onStartHover = (i) => () => {\r\n\t\tsetHoveringXRow(i);\r\n\t};\r\n\tconst onEndHover = (i) => () => {\r\n\t\tsetHoveringXRow(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\tx<sub>i</sub>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\tt<sub>i</sub>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{stepsObj.steps.map(({ i, x, a, t, helperTextA, helperTextX }) => {\r\n\t\t\t\t\t\tconst isLast = i === stepsObj.steps.length - 1;\r\n\r\n\t\t\t\t\t\tconst shouldBeHighlighted = hoveringXRow === i + 1;\r\n\t\t\t\t\t\tconst xCss = isLast ? answerCss : shouldBeHighlighted ? calculationNumbersCss : '';\r\n\t\t\t\t\t\tconst aCss = shouldBeHighlighted && !!t ? calculationNumbersCss : '';\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableRow key={i}>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>{i}</TableCell>\r\n\t\t\t\t\t\t\t\t<Tooltip title={helperTextX}>\r\n\t\t\t\t\t\t\t\t\t<TableCellHoverable\r\n\t\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\t\tclassName={xCss}\r\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={onStartHover(i)}\r\n\t\t\t\t\t\t\t\t\t\tonMouseLeave={onEndHover(i)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div>{x}</div>\r\n\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{!isLast && (\r\n\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextA}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCellHoverable align='center' className={aCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{a}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{!isLast && <TableCell align='center'>{t}</TableCell>}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nexport default FastPowerTable;\r\n","import { dec2bin } from 'utils/numHelpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BinaryExplanator({ num }) {\r\n\tconst binary = dec2bin(num);\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t{num} to binary is {binary}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>in reverse it's [{binary.split('').reverse().join(',')}] = t</Box>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default BinaryExplanator;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DisplayFormula from './DisplayFormula';\r\nimport useNumberInput from './useNumberInput';\r\nimport getFastPowerMod from './getFastPowerMod';\r\nimport FastPowerTable from './FastPowerTable';\r\nimport BinaryExplanator from './BinaryExplanator';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nfunction DiffieHellman() {\r\n\tconst [p, setP] = useNumberInput(1019);\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [a, setA] = useNumberInput(638);\r\n\tconst [b, setB] = useNumberInput(719);\r\n\r\n\tconst pIsPrime = useMemo(() => isPrime(p), [p]);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(p, g, a), [p, g, a]);\r\n\tconst solutionPowB = useMemo(() => getFastPowerMod(p, g, b), [p, g, b]);\r\n\r\n\tconst solutionPowAMaster = useMemo(() => getFastPowerMod(p, solutionPowA.result, b), [\r\n\t\tp,\r\n\t\tsolutionPowA.result,\r\n\t\tb,\r\n\t]);\r\n\tconst solutionPowBMaster = useMemo(() => getFastPowerMod(p, solutionPowB.result, a), [\r\n\t\tp,\r\n\t\tsolutionPowB.result,\r\n\t\tb,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' helperText='public' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText={pIsPrime ? 'public' : 'p has to be prime'}\r\n\t\t\t\t\t\t\t\t\terror={!pIsPrime}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='a'\r\n\t\t\t\t\t\t\t\t\tonChange={setA}\r\n\t\t\t\t\t\t\t\t\tvalue={a}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='private for person 1'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='b'\r\n\t\t\t\t\t\t\t\t\tonChange={setB}\r\n\t\t\t\t\t\t\t\t\tvalue={b}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='private for person 2'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t\t<Typography variant='h3'>Calculating Public keys:</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\tPerson 1 generates random private key a, Person 2 generates random private key b.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\tThen they calculate public keys they can give eachother in a NOT secure way.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula p={p} g={g} power={a} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula p={p} g={g} power={b} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t\t<Typography variant='h4'>Fast modulo power method (!):</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<BinaryExplanator num={a} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<BinaryExplanator num={b} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowB} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t\t<Typography variant='h3'>Calculating Master (private) key:</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\tAfter Person 1 received Person 2 Public key, and vice versa, they can both calculate\r\n\t\t\t\t\t\t\tthe same private key.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\tThen they can use this key to encrypt their communication, without ever sending this\r\n\t\t\t\t\t\t\tprivate key.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula p={p} g={solutionPowB.result} power={a} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula p={p} g={solutionPowA.result} power={b} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<BinaryExplanator num={a} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowBMaster} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<BinaryExplanator num={b} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowAMaster} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DiffieHellman;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport AfinicznyKluczLiczenie from 'afiniczny/AfinicznyKluczLiczenie';\r\n\r\nfunction Odwrotnosc() {\r\n\tconst [a, setA] = useState(12);\r\n\tconst [n, setN] = useState(26);\r\n\r\n\tconst changeA = (event) => setA(Number(event.target.value));\r\n\tconst changeN = (event) => setN(Number(event.target.value));\r\n\r\n\tconst odwrotnosc = modInverse(a, n);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Liczba' type='number' onChange={changeA} value={a} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='modulo' placeholder={26} type='number' onChange={changeN} value={n} />\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Odwrotność modularna:</Typography>\r\n\t\t\t\t\t\t<AfinicznyKluczLiczenie a={a} n={n} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Odwrotnosc;\r\n","import { useState } from 'react';\r\nimport './App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport Cezar from './cezar/Cezar';\r\nimport Vigener from './vigener/Vigener';\r\nimport Afiniczny from './afiniczny/Afiniczny';\r\nimport Hill from './hill/Hill';\r\nimport DiffieHellman from './diffie-hellman/DiffieHellman';\r\nimport Odwrotnosc from './odwrotnosc/Odwrotnosc';\r\n\r\nexport const methods = {\r\n\tcezar: 'c',\r\n\tafiniczny: 'a',\r\n\tvigenera: 'v',\r\n\thila: 'h',\r\n\tdiffieHellman: 'dh',\r\n\todwrotnosc: 'odw',\r\n};\r\n\r\nfunction App() {\r\n\tconst [method, setMetod] = useState(methods.diffieHellman);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetMetod(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='md'>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Typography variant='h2'>Kryptobreaker:</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tp={2}\r\n\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\talignContent='center'\r\n\t\t\t\t\tjustifyItems='center'\r\n\t\t\t\t\tjustifyContent='center'\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<InputLabel>Metoda</InputLabel>\r\n\t\t\t\t\t\t<Select value={method} onChange={handleChange}>\r\n\t\t\t\t\t\t\t<MenuItem value={methods.cezar}>Cezara</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={methods.afiniczny}>Afiniczny</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={methods.vigenera}>Vigenera</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={methods.hila}>Hila</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={methods.diffieHellman}>Diffie Hellman</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value={methods.odwrotnosc}>Odwrotność modularna</MenuItem>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</Paper>\r\n\t\t\t<Box m={4} display='flex' alignContent='center' justifyItems='center' justifyContent='center'>\r\n\t\t\t\t<ArrowDownwardIcon />\r\n\t\t\t</Box>\r\n\t\t\t<Box my={4}>{method === methods.cezar && <Cezar />}</Box>\r\n\t\t\t<Box my={4}>{method === methods.afiniczny && <Afiniczny />}</Box>\r\n\t\t\t<Box my={4}>{method === methods.vigenera && <Vigener />}</Box>\r\n\t\t\t<Box my={4}>{method === methods.hila && <Hill />}</Box>\r\n\t\t\t<Box my={4}>{method === methods.diffieHellman && <DiffieHellman />}</Box>\r\n\t\t\t<Box my={4}>{method === methods.odwrotnosc && <Odwrotnosc />}</Box>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}