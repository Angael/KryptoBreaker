{"version":3,"sources":["utils/useLocalStorage.js","utils/line-for-letter/LineForLetter.jsx","pages/cezar/SolutionPerChar.jsx","pages/cezar/Cezar.jsx","pages/vigener/SolutionPerChar.jsx","pages/vigener/Vigener.jsx","pages/afiniczny/SolutionPerChar.jsx","pages/afiniczny/AfinicznyKluczLiczenie.jsx","utils/useNumberInput.js","pages/afiniczny/Afiniczny.jsx","pages/diffie-hellman/DisplayFormula.jsx","utils/fast-power-table/getFastPowerMod.js","utils/fast-power-table/BinaryExplanator.jsx","utils/fast-power-table/FastPowerTable.jsx","pages/diffie-hellman/DiffieHellman.jsx","pages/odwrotnosc/OdwrotnoscTable.jsx","pages/odwrotnosc/Odwrotnosc.jsx","pages/potega-mod/PotegaMod.jsx","pages/rsa/KluczeDisplay.jsx","pages/rsa/RSAKlucze.jsx","pages/rsa/RSAKeyInputs.jsx","utils/BigText.jsx","pages/rsa/RSASzyfrowanie.jsx","pages/rsa/RSADeszyfrowanie.jsx","pages/rsa/RSAPodpis.jsx","pages/rsa/RSAPodpisWeryfikacja.jsx","pages/elgamal/KluczeDisplay.jsx","pages/elgamal/ElGamal.jsx","pages/mod/Mod.jsx","pages/elgamal/ElGamalKeyInputs.jsx","pages/elgamal/ElGamalSzyfrowanie.jsx","pages/elgamal/ElGamalDeszyfrowanie.jsx","pages/elgamal/ElGamalPodpis.jsx","pages/elgamal/ElGamalPodpisWeryfikacja.jsx","pages/cheat-sheet/CheatSheet.jsx","componentList.js","nav/PersistentDrawer.jsx","nav/key-explanation/KeyExplanation.jsx","nav/search/Search.jsx","nav/NavigationBar.jsx","App.jsx","index.js","utils/KryptoTable.jsx","utils/WordAndSolution.jsx","styled/PaperTitle.jsx","utils/numHelpers.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","LineForLetter","letter","resultLetter","children","Box","display","alignItems","m","fontSize","SolutionPerChar","keyValue","isEncr","isEncryption","letterCode","getCode","letterAndCode","afterMod","mod","getLetter","Cezar","word","setWord","setKey","isEncrypt","setIsEncrypt","result","crypted","newKey","parseInt","c","cezarEncrypt","PaperTitle","title","Grid","container","xs","sm","md","p","FormControl","fullWidth","Select","variant","onChange","event","target","MenuItem","TextField","label","helperText","type","Number","WordAndSolution","startStr","endStr","KryptoTable","split","map","i","keyCode","letterAndKey","Vigener","defaultKey","Math","random","length","k","vigenerEncrypt","middleTableRow","useMemo","arr","forEach","v","push","middleNumbersArr","code","calculationJsx","a","b","isNaN","invertedA","NaN","modInverse","AfinicznyKluczLiczenie","num","n","results","getStepsForInverseKey","step","Typography","useNumberInput","val","setVal","e","numberValue","round","affineNumber","number","isEncode","Afiniczny","setNumber","setP","keys","setKeys","isWord","setIsWord","replace","keyErr","undefined","str","character","affineString","placeholder","DisplayFormula","power","modulo","component","getFastPowerMod","reversedBinaryArray","dec2bin","reverse","steps","x","t","helperTextA","helperTextX","prevT","prevA","prevX","BinaryExplanator","binary","join","answerCss","css","calculationNumbersCss","TableCellHoverable","withStyles","root","backgroundColor","TableCell","TableRowColored","theme","palette","action","hover","TableRow","TableRowHeader","primary","light","color","contrastText","FastPowerTable","stepsObj","hoveringXRow","setHoveringXRow","onStartHover","TableContainer","props","Paper","Table","TableHead","align","TableBody","isLast","shouldBeHighlighted","xCss","aCss","Tooltip","className","onMouseEnter","onMouseLeave","DiffieHellman","g","setG","setA","setB","pIsPrime","isPrime","solutionPowA","solutionPowB","solutionPowAMaster","solutionPowBMaster","aErr","bErr","gutterBottom","cellCss","noSelect","useStyles","makeStyles","maxWidth","OdwrotnoscTable","modInverseAlgorithm","values","resultBeforeMod","useTheme","isPhone","useMediaQuery","breakpoints","down","classes","my","el","index","u","uprim","vprim","q","r","py","Odwrotnosc","setN","textAlign","PotegaMod","pow","setPow","setModulo","justify","pb","KluczeDisplay","d","showPaper","content","style","fontWeight","RSAKlucze","setQ","setE","phi","useRsaKeysInputs","setD","RsaKeyInputs","BigText","smallVariant","bigVariant","boxProps","React","memo","RSASzyfrowanie","message","setMessage","rsaInputs","solutionPow","RSADeszyfrowanie","y","setY","RSAPodpis","setX","RSAPodpisWeryfikacja","s","setS","pt","alpha","beta","ElGamal","setT","alignContent","justifyContent","Mod","setNum","useElgamalKeysInputs","setAlpha","ElGamalKeyInputs","disabled","ElGamalSzyfrowanie","setR","solutionPowY1","solutionPowY2","y1","y2","ElGamalDeszyfrowanie","setY1","setY2","solutionPowX","ElGamalPodpis","h","setH","inverted","ElGamalPodpisWeryfikacja","setU","solutionPowF","solutionPowLeft","solutionPowRight","f","CheatSheet","letters","Array","fill","_","Hill","lazy","encrDecr","skrot","rsaKeys","elGamalKeys","componentList","categoryName","methods","name","keywords","componentListFuzzySearchHayStack","category","modules","method","j","indexes","drawer","position","width","flexShrink","zIndex","drawerPaper","drawerHeader","padding","spacing","mixins","toolbar","PersistentDrawer","isOpen","onClose","onMethodSelect","selectedMethod","ClickAwayListener","onClickAway","params","Drawer","anchor","open","paper","IconButton","onClick","Fragment","List","ListItem","button","onMethodClick","selected","ListItemText","Divider","href","ListItemIcon","secondary","KeyExplanation","Dialog","PaperComponent","aria-labelledby","fullScreen","DialogTitle","DialogContent","DialogContentText","mb","DialogActions","Button","autoFocus","search","borderRadius","shape","common","white","marginRight","marginLeft","up","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","background","resultsContainer","top","left","minWidth","maxHeight","backdropFilter","hide","opacity","btn","outline","useAutoCompleteStyles","popper","fuse","Fuse","includeScore","Search","setIndexes","acClasses","setValue","trim","filter","score","onInputFocus","setSelectionRange","Autocomplete","freeSolo","filterOptions","options","getOptionLabel","renderOption","onInputChange","renderInput","ref","InputProps","InputBase","input","inputProps","onFocus","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","rightButton","flex","NavigationBar","drawerOpen","openDrawer","explanationOpen","setExplanationOpen","AppBar","clsx","Toolbar","aria-label","edge","Hidden","xsDown","noWrap","flexGrow","paddingTop","contentShift","App","setDrawerOpen","selectedCategory","methodVariant","stopPropagation","categoryIndex","componentIndex","Container","Breadcrumbs","fallback","ReactDOM","render","document","getElementById","startRow","scope","startNumbers","endNumbers","endRow","middleRow","flexDirection","arrow","transform","boxCenterProps","elevation","given_a","given_b","prevRow","floor","shift","toLowerCase","charCodeAt","String","fromCharCode","dec","toString"],"mappings":"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","file":"static/js/main.6a7d9eb8.chunk.js","sourcesContent":["// Hook\r\nimport { useState } from 'react';\r\nfunction useLocalStorage(key, initialValue) {\r\n\t// State to store our value\r\n\t// Pass initial state function to useState so logic is only executed once\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\t// Get from local storage by key\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t// Parse stored json or if none return initialValue\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\t// If error also return initialValue\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\t// Return a wrapped version of useState's setter function that ...\r\n\t// ... persists the new value to localStorage.\r\n\tconst setValue = (value) => {\r\n\t\ttry {\r\n\t\t\t// Allow value to be a function so we have same API as useState\r\n\t\t\tconst valueToStore = value instanceof Function ? value(storedValue) : value;\r\n\t\t\t// Save state\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t// Save to local storage\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\t// A more advanced implementation would handle the error case\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction LineForLetter({ letter, resultLetter, children }) {\r\n    return (\r\n        <Box display='flex' alignItems='center'>\r\n            <Box m={2}>{letter}</Box>\r\n            <ArrowForwardIcon fontSize='small' />\r\n            <Box m={2}>{children}</Box>\r\n            {resultLetter && <ArrowForwardIcon fontSize='small' />}\r\n            <Box m={2}>{resultLetter}</Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LineForLetter;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Paper,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport PaperTitle from 'styled/PaperTitle';\r\n\r\nfunction Cezar() {\r\n    const [word, setWord] = useState('kryptografia');\r\n    const [key, setKey] = useState(0);\r\n    const [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n    const cezarEncrypt = () => {\r\n        let crypted = '';\r\n        let newKey = parseInt(key * (isEncrypt ? 1 : -1)) || 0;\r\n        for (let c of word) {\r\n            crypted += getLetter(getCode(c) + newKey);\r\n        }\r\n        return crypted;\r\n    };\r\n\r\n    let result = cezarEncrypt();\r\n\r\n    const changeKey = (event) => setKey(Number(event.target.value));\r\n    const changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n    const changeWord = (event) => setWord(event.target.value);\r\n\r\n    return (\r\n        <>\r\n            <PaperTitle title='Inputs'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <FormControl fullWidth>\r\n                                <Select\r\n                                    variant='outlined'\r\n                                    value={isEncrypt}\r\n                                    onChange={changeIsEncryption}\r\n                                    fullWidth\r\n                                >\r\n                                    <MenuItem value={true}>Encrypt</MenuItem>\r\n                                    <MenuItem value={false}>Decrypt</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                label='Word'\r\n                                onChange={changeWord}\r\n                                value={word}\r\n                                helperText={'Text to be encrypted'}\r\n                                fullWidth\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                label='Key'\r\n                                helperText='Value that will be added to every character'\r\n                                type='number'\r\n                                onChange={changeKey}\r\n                                value={key}\r\n                                fullWidth\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Solution'>\r\n                <WordAndSolution startStr={word} endStr={result || ''} />\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Table'>\r\n                <KryptoTable\r\n                    startStr={word}\r\n                    endStr={result}\r\n                    isEncryption={isEncrypt}\r\n                />\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Calculations'>\r\n                {word.split('').map((c, i) => (\r\n                    <SolutionPerChar\r\n                        key={c + i}\r\n                        letter={c}\r\n                        keyValue={key}\r\n                        isEncryption={isEncrypt}\r\n                    />\r\n                ))}\r\n            </PaperTitle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cezar;\r\n","import { getCode, getLetter, mod } from \"utils/numHelpers\";\r\nimport LineForLetter from \"utils/line-for-letter/LineForLetter\";\r\n\r\nfunction SolutionPerChar({ letter, keyValue, isEncryption: isEncr }) {\r\n    const letterCode = getCode(letter);\r\n    const keyCode = getCode(keyValue);\r\n\r\n    const letterAndKey = isEncr ? letterCode + keyCode : letterCode - keyCode;\r\n\r\n    const afterMod = mod(letterAndKey, 26);\r\n\r\n    return (\r\n        <LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n            {isEncr ? \"y\" : \"x\"} = {isEncr ? \"e\" : \"d\"}\r\n            <sub>({keyValue})</sub>({letterCode}) = ({letterCode}{\" \"}\r\n            {isEncr ? \"+\" : \"-\"} {keyCode}) mod 26 = {letterAndKey} mod 26 ={\" \"}\r\n            {afterMod}\r\n        </LineForLetter>\r\n    );\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState, useMemo } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport PaperTitle from 'styled/PaperTitle';\r\n\r\nfunction Vigener() {\r\n    const [word, setWord] = useState('kryptografia');\r\n\r\n    const defaultKey = Math.random() < 0.01 ? 'mrvrhkshytqy' : 'wakacje';\r\n    const [key, setKey] = useState(defaultKey);\r\n    const [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n    const vigenerEncrypt = () => {\r\n        const length = key?.length || 0;\r\n        if (length) {\r\n            let crypted = '';\r\n            for (let i in word) {\r\n                const c = word[i];\r\n                const k = key[i % length];\r\n                crypted += getLetter(\r\n                    mod(getCode(c) + getCode(k) * (isEncrypt ? 1 : -1))\r\n                );\r\n            }\r\n            return crypted;\r\n        } else return word;\r\n    };\r\n\r\n    let result = vigenerEncrypt();\r\n\r\n    const changeKey = (event) => setKey(event.target.value);\r\n    const changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n    const changeWord = (event) => setWord(event.target.value);\r\n\r\n    const middleTableRow = useMemo(() => {\r\n        if (word && key) {\r\n            const arr = [];\r\n            word.split('').forEach((v, i) => arr.push(key[i % key.length]));\r\n            return arr.map((v) => getCode(v));\r\n        } else {\r\n            return null;\r\n        }\r\n    }, [word, key]);\r\n\r\n    return (\r\n        <>\r\n            <PaperTitle title='Inputs'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <FormControl fullWidth>\r\n                                <Select\r\n                                    variant='outlined'\r\n                                    value={isEncrypt}\r\n                                    onChange={changeIsEncryption}\r\n                                >\r\n                                    <MenuItem value={true}>Encrypt</MenuItem>\r\n                                    <MenuItem value={false}>Decrypt</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='word'\r\n                                onChange={changeWord}\r\n                                value={word}\r\n                                helperText='Text to be encrypted'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='key'\r\n                                type='text'\r\n                                onChange={changeKey}\r\n                                value={key}\r\n                                helperText='Text used as key'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n            <PaperTitle title='Solution'>\r\n                <WordAndSolution startStr={word} endStr={result || ''} />\r\n            </PaperTitle>\r\n            <PaperTitle title='Table'>\r\n                <KryptoTable\r\n                    startStr={word}\r\n                    endStr={result}\r\n                    middleNumbersArr={middleTableRow}\r\n                    isEncryption={isEncrypt}\r\n                />\r\n            </PaperTitle>\r\n            {key ? (\r\n                <PaperTitle title='Calculation'>\r\n                    {word.split('').map((c, i) => (\r\n                        <SolutionPerChar\r\n                            key={c + i}\r\n                            letter={c}\r\n                            keyValue={key[i % key.length]}\r\n                            isEncryption={isEncrypt}\r\n                        />\r\n                    ))}\r\n                </PaperTitle>\r\n            ) : (\r\n                <PaperTitle title='Calculation' p={2}>\r\n                    Enter key to see calculations...\r\n                </PaperTitle>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Vigener;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, a, b, isEncryption: isEncr, p = 26 }) {\r\n\tconst letterCode = isNaN(letter) ? getCode(letter) : letter;\r\n\r\n\tlet code;\r\n\tlet invertedA = NaN;\r\n\tlet calculationJsx;\r\n\tif (!isEncr) {\r\n\t\tinvertedA = modInverse(a, p);\r\n\t\tcode = invertedA * (letterCode - b);\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{invertedA} * ({letterCode} - {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tcode = letterCode * a + b;\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{a} * ({letterCode} + {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tconst afterMod = mod(code, p);\r\n\r\n\tconst resultLetter = isNaN(letter) ? getLetter(afterMod) : null;\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={resultLetter}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>\r\n\t\t\t\t({a},{b})\r\n\t\t\t</sub>\r\n\t\t\t({letterCode}) = ({calculationJsx}) mod {p} = {code} mod {p} = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nconst getStepsForInverseKey = (num, n = 26) => {\r\n\tconst results = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tresults.push(`${num} * ${i} mod ${n} = ${mod(num * i, n)}`);\r\n\t\tif ((num * i) % n === 1) {\r\n\t\t\tresults.push('Found inverted key = ' + i);\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nfunction AfinicznyKluczLiczenie({ a, n }) {\r\n\tconst steps = getStepsForInverseKey(a, n);\r\n\treturn steps.map((step) => (\r\n\t\t<Box key={step}>\r\n\t\t\t<Typography>{step}</Typography>\r\n\t\t</Box>\r\n\t));\r\n}\r\n\r\nexport default AfinicznyKluczLiczenie;\r\n","import { useState } from 'react';\r\n\r\nconst useNumberInput = (initialValue) => {\r\n    const [val, setVal] = useState(initialValue || 0);\r\n\r\n    const setValueWithEvent = (e) => {\r\n        const numberValue = Number(e.target.value);\r\n        if (isNaN(numberValue)) {\r\n            // do nothing\r\n        } else {\r\n            setVal(Math.round(numberValue));\r\n        }\r\n    };\r\n\r\n    return [val, setValueWithEvent];\r\n};\r\n\r\nexport default useNumberInput;\r\n","import { useState } from 'react';\r\n\r\nimport {\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport AfinicznyKluczLiczenie from './AfinicznyKluczLiczenie';\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport PaperTitle from '../../styled/PaperTitle';\r\n\r\nconst affineNumber = (number, [a, b], isEncode, p) => {\r\n    let result;\r\n    if (!isEncode) {\r\n        const newA = modInverse(a, p);\r\n        result = newA * (number - b);\r\n    } else {\r\n        result = number * a + b;\r\n    }\r\n\r\n    return mod(result, p);\r\n};\r\n\r\nconst affineString = (str, [a, b], isEncode, p = 26) => {\r\n    let result = '';\r\n    for (let character of str) {\r\n        const code = affineNumber(getCode(character), [a, b], isEncode, p);\r\n\r\n        result += getLetter(mod(code, 26));\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nfunction Afiniczny() {\r\n    const [word, setWord] = useState('kryptografia');\r\n    const [number, setNumber] = useNumberInput(25);\r\n    const [p, setP] = useNumberInput(31);\r\n    const [keys, setKeys] = useState('3,7');\r\n    const [isEncrypt, setIsEncrypt] = useState(true);\r\n    const [isWord, setIsWord] = useState(true);\r\n\r\n    const [a = NaN, b = NaN] = keys.replace(/\\s/, '').split(',').map(Number);\r\n    const keyErr = isNaN(a) || isNaN(b) ? 'Enter keys! Format: x,y' : '';\r\n\r\n    let result;\r\n    if (isWord) {\r\n        result =\r\n            word && a !== undefined && b !== undefined\r\n                ? affineString(word, [a, b], isEncrypt)\r\n                : '';\r\n    } else {\r\n        result = affineNumber(number, [a, b], isEncrypt, p);\r\n    }\r\n\r\n    const changeWord = (event) => setWord(event.target.value);\r\n    const changeKey = (event) => setKeys(event.target.value);\r\n    const changeIsEncryption = (e, v) => setIsEncrypt(e.target.value);\r\n    const changeIsWord = (e, v) => setIsWord(e.target.value);\r\n\r\n    return (\r\n        <>\r\n            <PaperTitle title='Inputs'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <FormControl fullWidth>\r\n                                <Select\r\n                                    variant='outlined'\r\n                                    value={isEncrypt}\r\n                                    onChange={changeIsEncryption}\r\n                                >\r\n                                    <MenuItem value={true}>Encrypt</MenuItem>\r\n                                    <MenuItem value={false}>Decrypt</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={0} sm={6} md={8}></Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            {isWord ? (\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant='outlined'\r\n                                    label='Word'\r\n                                    onChange={changeWord}\r\n                                    value={word}\r\n                                    helperText='Text to be encrypted'\r\n                                />\r\n                            ) : (\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant='outlined'\r\n                                    label='Number'\r\n                                    helperText='Number to be encrypted'\r\n                                    onChange={setNumber}\r\n                                    value={number}\r\n                                    type='number'\r\n                                />\r\n                            )}\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <FormControl>\r\n                                <Select\r\n                                    variant='outlined'\r\n                                    value={isWord}\r\n                                    onChange={changeIsWord}\r\n                                >\r\n                                    <MenuItem value={true}>Word</MenuItem>\r\n                                    <MenuItem value={false}>Number</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={0} sm={0} md={4}></Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='Keys'\r\n                                placeholder={'3,7'}\r\n                                type='text'\r\n                                onChange={changeKey}\r\n                                value={keys}\r\n                                error={!!keyErr}\r\n                                helperText={keyErr || `Format x,y = ${a},${b}`}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    {!isWord && (\r\n                        <Grid item xs={12} sm={6} md={4}>\r\n                            <Box p={2}>\r\n                                <TextField\r\n                                    variant='outlined'\r\n                                    label='p'\r\n                                    helperText={\r\n                                        <>\r\n                                            Z<sub>p</sub> = Z<sub>{p}</sub>\r\n                                        </>\r\n                                    }\r\n                                    onChange={setP}\r\n                                    value={p}\r\n                                    type='number'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            {isWord ? (\r\n                <PaperTitle title='Solution'>\r\n                    <WordAndSolution startStr={word} endStr={result} />\r\n                </PaperTitle>\r\n            ) : (\r\n                <PaperTitle title='Solution'>\r\n                    <WordAndSolution startStr={number} endStr={result} />\r\n                </PaperTitle>\r\n            )}\r\n\r\n            {isWord && (\r\n                <PaperTitle title='Table'>\r\n                    <KryptoTable\r\n                        startStr={word}\r\n                        endStr={result}\r\n                        isEncryption={isEncrypt}\r\n                    />\r\n                </PaperTitle>\r\n            )}\r\n            {!isEncrypt && (\r\n                <PaperTitle title='Inverted Key' p={2}>\r\n                    <AfinicznyKluczLiczenie a={a} n={isWord ? 26 : p} />\r\n                </PaperTitle>\r\n            )}\r\n\r\n            {isWord ? (\r\n                <PaperTitle title='Calculation'>\r\n                    {word.split('').map((c, i) => (\r\n                        <SolutionPerChar\r\n                            key={c + i}\r\n                            letter={c}\r\n                            a={a}\r\n                            b={b}\r\n                            isEncryption={isEncrypt}\r\n                        />\r\n                    ))}\r\n                </PaperTitle>\r\n            ) : (\r\n                <PaperTitle title='Calculation'>\r\n                    <SolutionPerChar\r\n                        letter={number}\r\n                        a={a}\r\n                        b={b}\r\n                        isEncryption={isEncrypt}\r\n                        p={p}\r\n                    />\r\n                </PaperTitle>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Afiniczny;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nfunction DisplayFormula({ number, power, modulo, variant = 'body1' }) {\r\n    return (\r\n        <Box display='inline'>\r\n            <Typography variant={variant} component='span'>\r\n                {number} <sup>{power}</sup> mod {modulo}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default DisplayFormula;\r\n","import { mod } from 'utils/numHelpers';\r\nimport { dec2bin } from 'utils/numHelpers';\r\n\r\n/**\r\n *\r\n * @param {number} number - Liczba podnoszona do potęgi, ta po lewej\r\n * @param {number} power - potęga\r\n * @param {number} modulo - Modulo\r\n */\r\nconst getFastPowerMod = (number, power, modulo) => {\r\n    // np 011011101\r\n    const binaryString = dec2bin(power);\r\n    const reversedBinaryArray = binaryString.split('').reverse();\r\n\r\n    if (!reversedBinaryArray.length) {\r\n        return 'rip, nie chce mi sie pisac error handlingu';\r\n    }\r\n\r\n    const steps = [];\r\n    steps.push({\r\n        i: 0,\r\n        x: 1,\r\n        a: number,\r\n        t: Number(reversedBinaryArray[0]),\r\n        helperTextA: 'initial value is g = ' + number,\r\n        helperTextX: 'initial value is always 1 ',\r\n    });\r\n\r\n    for (let i = 1; i < reversedBinaryArray.length + 1; i++) {\r\n        const t = Number(reversedBinaryArray[i]);\r\n        const prevT = steps[i - 1].t;\r\n        const prevA = steps[i - 1].a;\r\n        const prevX = steps[i - 1].x;\r\n\r\n        let helperTextX = '';\r\n\r\n        let a = mod(prevA * prevA, modulo);\r\n        if (i === reversedBinaryArray.length) {\r\n            a = '';\r\n        }\r\n        let helperTextA = `${prevA} * ${prevA} mod ${modulo} =  ${a}`;\r\n\r\n        let x;\r\n        if (prevT) {\r\n            x = mod(prevX * prevA, modulo);\r\n            helperTextX = `${prevX} * ${prevA} mod ${modulo} =  ${x}`;\r\n        } else {\r\n            x = prevX;\r\n            helperTextX = `unchanged because previous t is 0 = ${x}`;\r\n        }\r\n        steps.push({ i, x, a, t, helperTextA, helperTextX });\r\n    }\r\n\r\n    const result = steps[steps.length - 1].x;\r\n    return {\r\n        result,\r\n        steps,\r\n        power,\r\n    };\r\n};\r\n\r\nexport default getFastPowerMod;\r\n","import { dec2bin } from 'utils/numHelpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BinaryExplanator({ num }) {\r\n    const binary = dec2bin(num);\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Box>\r\n                    {num} to binary is {binary}\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box>\r\n                    Reverse it to get t = [\r\n                    {binary.split('').reverse().join(',')}]\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default BinaryExplanator;\r\n","import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BinaryExplanator from 'utils/fast-power-table/BinaryExplanator';\r\n\r\nconst answerCss = css`\r\n    background: #97ffa7;\r\n    text-decoration: underline;\r\n    border-radius: 5px;\r\n    transition: 0.3s;\r\n`;\r\n\r\nconst calculationNumbersCss = css`\r\n    background: #ffd0ce;\r\n    border-radius: 5px;\r\n    transition: 0.3s;\r\n`;\r\n\r\nconst TableCellHoverable = withStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(0 ,0, 0, 0.1)',\r\n        },\r\n    },\r\n})(TableCell);\r\n\r\nconst TableRowColored = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst TableRowHeader = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& th': {\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction FastPowerTable({ stepsObj }) {\r\n    const [hoveringXRow, setHoveringXRow] = useState(null);\r\n    const onStartHover = (i) => () => {\r\n        setHoveringXRow(i);\r\n    };\r\n    const onEndHover = (i) => () => {\r\n        setHoveringXRow(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BinaryExplanator num={stepsObj.power} />\r\n            <TableContainer\r\n                component={(props) => <Paper variant='outlined' {...props} />}\r\n            >\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRowHeader>\r\n                            <TableCell align='center'>i</TableCell>\r\n                            <TableCell align='center'>\r\n                                x<sub>i</sub>\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                                a<sub>i</sub>\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                                t<sub>i</sub>\r\n                            </TableCell>\r\n                        </TableRowHeader>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {stepsObj.steps.map(\r\n                            ({ i, x, a, t, helperTextA, helperTextX }) => {\r\n                                const isLast = i === stepsObj.steps.length - 1;\r\n\r\n                                const shouldBeHighlighted =\r\n                                    hoveringXRow === i + 1;\r\n                                const xCss = isLast\r\n                                    ? answerCss\r\n                                    : shouldBeHighlighted\r\n                                    ? calculationNumbersCss\r\n                                    : '';\r\n                                const aCss =\r\n                                    shouldBeHighlighted && !!t\r\n                                        ? calculationNumbersCss\r\n                                        : '';\r\n                                return (\r\n                                    <TableRowColored key={i}>\r\n                                        <TableCell align='center'>\r\n                                            {i}\r\n                                        </TableCell>\r\n                                        <Tooltip title={helperTextX}>\r\n                                            <TableCellHoverable\r\n                                                align='center'\r\n                                                className={xCss}\r\n                                                onMouseEnter={onStartHover(i)}\r\n                                                onMouseLeave={onEndHover(i)}\r\n                                            >\r\n                                                <div>{x}</div>\r\n                                            </TableCellHoverable>\r\n                                        </Tooltip>\r\n                                        {!isLast && (\r\n                                            <Tooltip title={helperTextA}>\r\n                                                <TableCellHoverable\r\n                                                    align='center'\r\n                                                    className={aCss}\r\n                                                >\r\n                                                    <div>{a}</div>\r\n                                                </TableCellHoverable>\r\n                                            </Tooltip>\r\n                                        )}\r\n                                        {!isLast && (\r\n                                            <TableCell align='center'>\r\n                                                {t}\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRowColored>\r\n                                );\r\n                            }\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FastPowerTable;\r\n","import { useMemo } from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport DisplayFormula from './DisplayFormula';\nimport useNumberInput from 'utils/useNumberInput';\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\nimport { isPrime } from 'utils/numHelpers';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction DiffieHellman() {\n    const [p, setP] = useNumberInput(1019);\n    const [g, setG] = useNumberInput(2);\n    const [a, setA] = useNumberInput(638);\n    const [b, setB] = useNumberInput(719);\n\n    const pIsPrime = useMemo(() => isPrime(p), [p]);\n\n    const solutionPowA = useMemo(() => getFastPowerMod(g, a, p), [p, g, a]);\n    const solutionPowB = useMemo(() => getFastPowerMod(g, b, p), [p, g, b]);\n\n    const solutionPowAMaster = useMemo(\n        () => getFastPowerMod(solutionPowA.result, b, p),\n        [p, solutionPowA.result, b]\n    );\n    const solutionPowBMaster = useMemo(\n        () => getFastPowerMod(solutionPowB.result, a, p),\n        [p, solutionPowB.result, a]\n    );\n\n    const aErr = a >= p - 1 || a <= 1 ? `Allowed values <2 ; ${p - 2}> ` : '';\n    const bErr = b >= p - 1 || b <= 1 ? `Allowed values <2 ; ${p - 2}> ` : '';\n\n    return (\n        <>\n            <PaperTitle title='Explanation' p={2}>\n                <Typography variant='body1' gutterBottom>\n                    Diffie–Hellman key exchange allows for secure exchange of\n                    keys over a public channel. Both parties can calculate the\n                    same master private key without exchanging it once.\n                </Typography>\n                <Typography variant='body1' gutterBottom>\n                    Person 1 generates random private key a\n                </Typography>\n                <Typography variant='body1' gutterBottom>\n                    Person 2 generates random private key b\n                </Typography>\n                <Typography variant='body1' gutterBottom>\n                    Then they calculate public keys they can give eachother in a\n                    NOT secure way.\n                </Typography>\n                <Typography variant='body1' gutterBottom>\n                    They exchange those public keys, and calculate the same\n                    master private key\n                </Typography>\n            </PaperTitle>\n            <PaperTitle title='Inputs'>\n                <Grid container>\n                    <Grid item xs={6} sm={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='g'\n                                onChange={setG}\n                                value={g}\n                                type='number'\n                                helperText='Public generator'\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='p'\n                                onChange={setP}\n                                value={p}\n                                type='number'\n                                helperText={\n                                    pIsPrime\n                                        ? 'Public modulo'\n                                        : 'p has to be prime'\n                                }\n                                error={!pIsPrime}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='a'\n                                onChange={setA}\n                                value={a}\n                                type='number'\n                                helperText={aErr || 'Person 1 private key'}\n                                error={aErr}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='b'\n                                onChange={setB}\n                                value={b}\n                                type='number'\n                                helperText={bErr || 'Person 2 private key'}\n                                error={bErr}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title='Calculate public keys'>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Box p={2}>\n                            <Typography variant='h5'>\n                                Person 1 calculates:\n                            </Typography>\n                            <DisplayFormula number={g} modulo={p} power={a} />\n                            <FastPowerTable stepsObj={solutionPowA} />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Box p={2}>\n                            <Typography variant='h5'>\n                                Person 2 calculates:\n                            </Typography>\n                            <DisplayFormula number={g} modulo={p} power={b} />\n                            <FastPowerTable stepsObj={solutionPowB} />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n            <PaperTitle title='Calculate private master key'>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Box p={2}>\n                            <Typography variant='h5'>\n                                Person 1 calculates:\n                            </Typography>\n                            <DisplayFormula\n                                number={solutionPowB.result}\n                                modulo={p}\n                                power={a}\n                            />\n                            <FastPowerTable stepsObj={solutionPowBMaster} />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Box p={2}>\n                            <Typography variant='h5'>\n                                Person 2 calculates:\n                            </Typography>\n                            <DisplayFormula\n                                number={solutionPowA.result}\n                                modulo={p}\n                                power={b}\n                            />{' '}\n                            <FastPowerTable stepsObj={solutionPowAMaster} />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Solution'}>\n                <Box align={'center'} p={2}>\n                    <Typography variant={'h5'}>\n                        {solutionPowAMaster.result === solutionPowBMaster.result\n                            ? `Both parties calculated private master key = ${solutionPowBMaster.result}`\n                            : 'Something went wrong, master keys are different'}\n                    </Typography>\n                </Box>\n            </PaperTitle>\n        </>\n    );\n}\n\nexport default DiffieHellman;\n","import { useState, useMemo } from 'react';\nimport { Paper, Box, Typography, useMediaQuery } from '@material-ui/core';\nimport { css } from '@emotion/css';\nimport {\n    TableContainer,\n    Table,\n    TableHead,\n    TableCell,\n    TableBody,\n    TableRow,\n    Tooltip,\n} from '@material-ui/core';\n\nimport { mod, modInverseAlgorithm } from '../../utils/numHelpers';\nimport { useTheme, makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst cellCss = css`\n    background: #f0e98b;\n`;\n\nconst noSelect = css`\n    user-select: none;\n`;\n\nconst TableRowHeader = withStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        '& th': {\n            color: theme.palette.primary.contrastText,\n        },\n    },\n}))(TableRow);\n\nconst TableRowColored = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 'calc(100vw - 66px)',\n    },\n}));\n\nfunction OdwrotnoscTable({ a, b }) {\n    // TODO: It would be nice if this was given by props, so its not calculated 2 times\n    const {\n        steps: values,\n        result,\n        resultBeforeMod,\n    } = modInverseAlgorithm(a, b);\n\n    const theme = useTheme();\n    const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(isPhone);\n\n    return (\n        b != 0 && (\n            <>\n                <Box my={2}>\n                    <Typography variant='h5'>\n                        {a}\n                        <sup>-1</sup> mod {b}\n                    </Typography>\n                </Box>\n\n                <TableContainer\n                    classes={classes}\n                    component={(props) => (\n                        <Paper variant='outlined' {...props} />\n                    )}\n                >\n                    <Table>\n                        <TableHead>\n                            <TableRowHeader>\n                                <TableCell align='center'>i</TableCell>\n                                <TableCell align='center'>\n                                    u<sub>i</sub>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    u<sub>i</sub>'\n                                </TableCell>\n                                <TableCell align='center'>\n                                    v<sub>i</sub>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    v<sub>i</sub>'\n                                </TableCell>\n                                <TableCell align='center'>\n                                    n<sub>i</sub>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    a<sub>i</sub>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    q<sub>i</sub>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    r<sub>i</sub>\n                                </TableCell>\n                            </TableRowHeader>\n                        </TableHead>\n                        <TableBody>\n                            {values.map((el, index) => {\n                                const { u, uprim, v, vprim, a, b, q, r } = el;\n                                const isLast = values.length - 1 === index;\n\n                                return (\n                                    <TableRowColored>\n                                        <TableCell align='center'>\n                                            {index}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {v}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {vprim}\n                                        </TableCell>\n                                        <TableCell\n                                            align='center'\n                                            className={isLast && cellCss}\n                                        >\n                                            {u}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {uprim}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {a}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {b}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {q}\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            {r}\n                                        </TableCell>\n                                    </TableRowColored>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Box py={1}>\n                    <Typography variant='body1'>\n                        {a}\n                        <sup>-1</sup> mod {b} = {resultBeforeMod} mod {b} ={' '}\n                        {result}\n                    </Typography>\n                    <Typography variant='h5'>\n                        {a}\n                        <sup>-1</sup> mod {b} = {result}\n                    </Typography>\n                </Box>\n                <Box>\n                    <Typography variant='caption'>\n                        <span className={noSelect}>\n                            Double checking result of modular inversion:{' '}\n                        </span>\n                        {a} * {result} mod {b} = {mod(a * result, b)}\n                    </Typography>\n                </Box>\n            </>\n        )\n    );\n}\n\nexport default OdwrotnoscTable;\n","import { Box, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nimport useNumberInput from 'utils/useNumberInput';\nimport OdwrotnoscTable from './OdwrotnoscTable';\nimport PaperTitle from 'styled/PaperTitle';\nimport { modInverseAlgorithm } from 'utils/numHelpers';\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\n\nfunction Odwrotnosc() {\n    const [a, setA] = useNumberInput(215);\n    const [n, setN] = useNumberInput(25);\n\n    const { steps, result, resultBeforeMod } = modInverseAlgorithm(a, n);\n\n    return (\n        <>\n            <PaperTitle title={'Inputs'}>\n                <Grid container>\n                    <Grid item xs={6} sm={4}>\n                        <Box p={2}>\n                            <TextField\n                                variant={'outlined'}\n                                fullWidth\n                                label='Number'\n                                type='number'\n                                onChange={setA}\n                                value={a}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} sm={4}>\n                        <Box p={2}>\n                            <TextField\n                                variant={'outlined'}\n                                fullWidth\n                                label='Modulo'\n                                placeholder={26}\n                                type='number'\n                                onChange={setN}\n                                value={n}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Solution'}>\n                <Box textAlign={'center'} p={2}>\n                    <Typography variant={'h5'}>\n                        <DisplayFormula\n                            number={a}\n                            modulo={n}\n                            power={-1}\n                            variant={'h5'}\n                        />{' '}\n                        = {result}\n                    </Typography>\n                </Box>\n            </PaperTitle>\n\n            <PaperTitle title={'Calculation'} p={2}>\n                <OdwrotnoscTable a={a} b={n} />\n            </PaperTitle>\n        </>\n    );\n}\n\nexport default Odwrotnosc;\n","import { useMemo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nimport useNumberInput from 'utils/useNumberInput';\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction PotegaMod() {\n    const [g, setG] = useNumberInput(2);\n    const [pow, setPow] = useNumberInput(638);\n    const [modulo, setModulo] = useNumberInput(1019);\n\n    const solutionPowA = useMemo(\n        () => getFastPowerMod(g, pow, modulo),\n        [modulo, g, pow]\n    );\n\n    return (\n        <>\n            <PaperTitle title={'Inputs'}>\n                <Grid container>\n                    <Grid item xs={6} sm={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant={'outlined'}\n                                label='Number'\n                                onChange={setG}\n                                value={g}\n                                type='number'\n                            />\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={4} sm={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant={'outlined'}\n                                label='Power'\n                                onChange={setPow}\n                                value={pow}\n                                type='number'\n                            />\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={4} sm={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant={'outlined'}\n                                label='Modulo'\n                                onChange={setModulo}\n                                value={modulo}\n                                type='number'\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Solution'}>\n                <Box textAlign={'center'} p={2}>\n                    <Typography variant={'h5'}>\n                        <DisplayFormula\n                            number={g}\n                            power={pow}\n                            modulo={modulo}\n                            variant={'h5'}\n                        />{' '}\n                        = {solutionPowA.result}\n                    </Typography>\n                </Box>\n            </PaperTitle>\n\n            <PaperTitle title={'Calculation'}>\n                <Grid container justify='center'>\n                    <Grid item xs={12} sm={8} md={6}>\n                        <Box p={2} pb={2} textAlign='center'>\n                            <DisplayFormula\n                                number={g}\n                                power={pow}\n                                modulo={modulo}\n                                variant={'h5'}\n                            />{' '}\n                            <FastPowerTable stepsObj={solutionPowA} />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n        </>\n    );\n}\n\nexport default PotegaMod;\n","import Typography from '@material-ui/core/Typography';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nconst KluczeDisplay = ({ e, d, n, showPaper = false }) => {\r\n    const theme = useTheme();\r\n    const smallerText = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const variant = smallerText ? 'body1' : 'h4';\r\n\r\n    const content = (\r\n        <>\r\n            <Typography variant={variant} style={{ fontWeight: 300 }}>\r\n                k<sub>1</sub> = (e, n) = ({e}, {n}) - Public\r\n            </Typography>\r\n            <Typography variant={variant} style={{ fontWeight: 300 }}>\r\n                k<sub>2</sub> = (d, n) = ({d}, {n}) - Private\r\n            </Typography>\r\n        </>\r\n    );\r\n\r\n    if (showPaper) {\r\n        return (\r\n            <PaperTitle title='Keys' p={2}>\r\n                {content}\r\n            </PaperTitle>\r\n        );\r\n    } else {\r\n        return content;\r\n    }\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'pages/odwrotnosc/OdwrotnoscTable';\r\nimport PaperTitle from 'styled/PaperTitle';\r\n\r\nfunction RSAKlucze() {\r\n    const [p, setP] = useNumberInput(37);\r\n    const [q, setQ] = useNumberInput(47);\r\n    const [e, setE] = useNumberInput(1001);\r\n\r\n    const n = p * q;\r\n    const phi = (p - 1) * (q - 1);\r\n    const d = modInverse(e, phi);\r\n\r\n    return (\r\n        <>\r\n            <PaperTitle title='Inputs'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='p'\r\n                                onChange={setP}\r\n                                value={p}\r\n                                type='number'\r\n                                helperText='First random number'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='q'\r\n                                onChange={setQ}\r\n                                value={q}\r\n                                type='number'\r\n                                helperText='Second random number'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='e'\r\n                                onChange={setE}\r\n                                value={e}\r\n                                type='number'\r\n                                helperText='Random number from 1 to Φ'\r\n                                error={e > phi || e <= 1 || e % 1 !== 0}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Calculation'>\r\n                <Box p={2}>\r\n                    n = {p} * {q} = {n}\r\n                </Box>\r\n                <Box p={2}>\r\n                    phi = Φ = ({p} - 1) * ({q}- 1)= {phi}\r\n                </Box>\r\n                <Box p={2}>\r\n                    d ={' '}\r\n                    <DisplayFormula\r\n                        number={e}\r\n                        power={-1}\r\n                        modulo={phi}\r\n                        variant={'body1'}\r\n                    />{' '}\r\n                    = {d}\r\n                    <OdwrotnoscTable a={e} b={phi} />\r\n                </Box>\r\n            </PaperTitle>\r\n\r\n            <KluczeDisplay e={e} n={n} d={d} showPaper />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RSAKlucze;\r\n","import React from 'react';\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport KluczeDisplay from 'pages/rsa/KluczeDisplay';\r\n\r\nexport const useRsaKeysInputs = () => {\r\n    const [e, setE] = useNumberInput(1001);\r\n    const [d, setD] = useNumberInput(761);\r\n    const [n, setN] = useNumberInput(1739);\r\n\r\n    return { e, setE, d, setD, n, setN };\r\n};\r\n\r\nfunction RsaKeyInputs({ e, setE, d, setD, n, setN }) {\r\n    return (\r\n        <PaperTitle title='Enter keys'>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='e'\r\n                            onChange={setE}\r\n                            value={e}\r\n                            type='number'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='n'\r\n                            onChange={setN}\r\n                            value={n}\r\n                            type='number'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='d'\r\n                            onChange={setD}\r\n                            value={d}\r\n                            type='number'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} justify={'center'}>\r\n                    <Box p={2} textAlign={'center'}>\r\n                        <KluczeDisplay e={e} n={n} d={d} />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </PaperTitle>\r\n    );\r\n}\r\n\r\nexport default RsaKeyInputs;\r\n","import React from 'react';\r\nimport { Box, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nfunction BigText({\r\n    children,\r\n    smallVariant = 'h5',\r\n    bigVariant = 'h4',\r\n    ...boxProps\r\n}) {\r\n    const theme = useTheme();\r\n    const smallerText = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const variant = smallerText ? 'h5' : bigVariant;\r\n\r\n    return (\r\n        <Box {...boxProps}>\r\n            <Typography variant={variant}>{children}</Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default React.memo(BigText);\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport RsaKeyInputs, { useRsaKeysInputs } from 'pages/rsa/RSAKeyInputs';\r\nimport BigText from 'utils/BigText';\r\n\r\nfunction RSASzyfrowanie() {\r\n    //Wiadomość x\r\n    const [message, setMessage] = useNumberInput(20);\r\n\r\n    const rsaInputs = useRsaKeysInputs();\r\n    const { e, d, n } = rsaInputs;\r\n\r\n    // x^n mod e\r\n    const solutionPow = useMemo(\r\n        () => getFastPowerMod(message, e, n),\r\n        [n, message, e]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <RsaKeyInputs {...rsaInputs} />\r\n            <PaperTitle title='Message' p={2}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='x'\r\n                            onChange={setMessage}\r\n                            value={message}\r\n                            type='number'\r\n                            helperText='Message to be encrypted'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Equation'>\r\n                <Box p={2} align='center'>\r\n                    y = c =\r\n                    <DisplayFormula\r\n                        number={'x'}\r\n                        power={'e'}\r\n                        modulo={'n'}\r\n                        variant={'body1'}\r\n                    />{' '}\r\n                    ={' '}\r\n                    <DisplayFormula\r\n                        number={message}\r\n                        power={e}\r\n                        modulo={n}\r\n                        variant={'body1'}\r\n                    />\r\n                </Box>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Calculation' p={2}>\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <FastPowerTable stepsObj={solutionPow} />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Solution' p={2}>\r\n                <BigText>Cryptogram y = {solutionPow.result}</BigText>\r\n            </PaperTitle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RSASzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport RsaKeyInputs, { useRsaKeysInputs } from 'pages/rsa/RSAKeyInputs';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport BigText from 'utils/BigText';\r\n\r\nfunction RSADeszyfrowanie() {\r\n    //Zaszyfrowana wiadomosc x, szyfrogram y\r\n    const [y, setY] = useNumberInput(1327);\r\n\r\n    const rsaInputs = useRsaKeysInputs();\r\n    const { e, d, n } = rsaInputs;\r\n\r\n    // y^d mod n\r\n    const solutionPow = useMemo(() => getFastPowerMod(y, d, n), [n, y, d]);\r\n\r\n    return (\r\n        <>\r\n            <RsaKeyInputs {...rsaInputs} />\r\n\r\n            <PaperTitle title='Encrypted message' p={2}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='y'\r\n                            onChange={setY}\r\n                            value={y}\r\n                            type='number'\r\n                            helperText='Message to be decrypted'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Equation'>\r\n                <Box p={2} align='center'>\r\n                    x ={' '}\r\n                    <DisplayFormula\r\n                        number={'y'}\r\n                        power={'d'}\r\n                        modulo={'n'}\r\n                        variant={'body1'}\r\n                    />{' '}\r\n                    ={' '}\r\n                    <DisplayFormula\r\n                        number={y}\r\n                        power={d}\r\n                        modulo={n}\r\n                        variant={'body1'}\r\n                    />\r\n                </Box>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Calculation' p={2}>\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <FastPowerTable stepsObj={solutionPow} />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Solution' p={2}>\r\n                <BigText>Message x = {solutionPow.result}</BigText>\r\n            </PaperTitle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RSADeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport RsaKeyInputs, { useRsaKeysInputs } from 'pages/rsa/RSAKeyInputs';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport BigText from 'utils/BigText';\r\n\r\nfunction RSAPodpis() {\r\n    //Wiadomość x\r\n    const [x, setX] = useNumberInput(357);\r\n\r\n    const rsaInputs = useRsaKeysInputs();\r\n    const { e, d, n } = rsaInputs;\r\n\r\n    // x^n mod e\r\n    const solutionPow = useMemo(() => getFastPowerMod(x, d, n), [n, x, d]);\r\n\r\n    return (\r\n        <>\r\n            <RsaKeyInputs {...rsaInputs} />\r\n\r\n            <PaperTitle title='Message' p={2}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='x or h'\r\n                            onChange={setX}\r\n                            value={x}\r\n                            type='number'\r\n                            helperText='Message'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Equation'>\r\n                <Box p={2} align='center'>\r\n                    Signature s ={' '}\r\n                    <DisplayFormula\r\n                        number={'h'}\r\n                        power={'d'}\r\n                        modulo={'n'}\r\n                        variant={'body1'}\r\n                    />{' '}\r\n                    ={' '}\r\n                    <DisplayFormula\r\n                        number={x}\r\n                        power={d}\r\n                        number={n}\r\n                        variant={'body1'}\r\n                    />\r\n                </Box>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Calculation' p={2}>\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <FastPowerTable stepsObj={solutionPow} />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Solution' p={2}>\r\n                <BigText>Signature s = {solutionPow.result}</BigText>\r\n            </PaperTitle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RSAPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport RsaKeyInputs, { useRsaKeysInputs } from 'pages/rsa/RSAKeyInputs';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport BigText from 'utils/BigText';\r\n\r\nfunction RSAPodpisWeryfikacja() {\r\n    //Wiadomość x\r\n    const [x, setX] = useNumberInput(357);\r\n    const [s, setS] = useNumberInput(1630);\r\n\r\n    const rsaInputs = useRsaKeysInputs();\r\n    const { e, d, n } = rsaInputs;\r\n\r\n    // x^n mod e\r\n    const solutionPow = useMemo(() => getFastPowerMod(s, e, n), [n, s, e]);\r\n\r\n    return (\r\n        <>\r\n            <RsaKeyInputs {...rsaInputs} />\r\n\r\n            <PaperTitle title='Message'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='x or h'\r\n                                onChange={setX}\r\n                                value={x}\r\n                                type='number'\r\n                                helperText='Message'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='s'\r\n                                onChange={setS}\r\n                                value={s}\r\n                                type='number'\r\n                                helperText='Signature sent with the message'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Equation'>\r\n                <Box p={2} align='center'>\r\n                    This equation should return message if the signature is\r\n                    correct. <br />\r\n                    If it doesn't then message has been altered.\r\n                </Box>\r\n                <Box pt={2} align='center'>\r\n                    Testing if:\r\n                </Box>\r\n                <Box pb={2} align='center'>\r\n                    <DisplayFormula\r\n                        number={'s'}\r\n                        power={'e'}\r\n                        modulo={'n'}\r\n                        variant={'body1'}\r\n                    />{' '}\r\n                    ={' '}\r\n                    <DisplayFormula\r\n                        number={s}\r\n                        power={e}\r\n                        modulo={n}\r\n                        variant={'body1'}\r\n                    />{' '}\r\n                    = h ?\r\n                </Box>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Calculation' p={2}>\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <FastPowerTable stepsObj={solutionPow} />\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title='Solution' p={2}>\r\n                <Box p={2} align='center'>\r\n                    Comparision: {solutionPow.result} (Result) = {x} (Message h)\r\n                </Box>\r\n                <Box p={2} pb={3} align='center'>\r\n                    {x === solutionPow.result\r\n                        ? 'Signature matches the message.'\r\n                        : \"Signature doesn't match the message.\"}\r\n                </Box>\r\n            </PaperTitle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RSAPodpisWeryfikacja;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\nimport PaperTitle from 'styled/PaperTitle';\r\n\r\nconst KluczeDisplay = ({ p, alpha, beta, t, showPaper = false }) => {\r\n    const theme = useTheme();\r\n    const smallerText = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const variant = smallerText ? 'body1' : 'h4';\r\n\r\n    const content = (\r\n        <>\r\n            <Typography variant={variant} style={{ fontWeight: 300 }}>\r\n                k<sub>1</sub> = (p, α, β) = ({p}, {alpha}, {beta}) - Public\r\n            </Typography>\r\n            <Typography variant={variant} style={{ fontWeight: 300 }}>\r\n                k<sub>2</sub> = (p, t) = ({p}, {t}) - Private\r\n            </Typography>\r\n        </>\r\n    );\r\n\r\n    if (showPaper) {\r\n        return (\r\n            <PaperTitle title='Keys' p={2}>\r\n                {content}\r\n            </PaperTitle>\r\n        );\r\n    } else {\r\n        return content;\r\n    }\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport PaperTitle from 'styled/PaperTitle';\r\n\r\nfunction ElGamal() {\r\n    const [g, setG] = useNumberInput(2);\r\n    const [p, setP] = useNumberInput(1619);\r\n    const [t, setT] = useNumberInput(937);\r\n\r\n    const solutionPowA = useMemo(() => getFastPowerMod(g, t, p), [p, g, t]);\r\n\r\n    return (\r\n        <>\r\n            <PaperTitle title='Inputs'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='g or α'\r\n                                onChange={setG}\r\n                                value={g}\r\n                                type='number'\r\n                                helperText='Generator'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='p'\r\n                                onChange={setP}\r\n                                value={p}\r\n                                type='number'\r\n                                helperText='Modulo number'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label='t'\r\n                                onChange={setT}\r\n                                value={t}\r\n                                type='number'\r\n                                helperText='Random private variable'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n            <PaperTitle title='Equation' p={2}>\r\n                <Box\r\n                    display='flex'\r\n                    alignContent='center'\r\n                    justifyContent='center'\r\n                >\r\n                    <Typography variant={'h4'}>\r\n                        {'β = '}\r\n                        <DisplayFormula\r\n                            number={'α'}\r\n                            modulo={'p'}\r\n                            power={'t'}\r\n                            variant={'h4'}\r\n                        />\r\n                        {' = '}\r\n                        <DisplayFormula\r\n                            number={g}\r\n                            modulo={p}\r\n                            power={t}\r\n                            variant={'h4'}\r\n                        />\r\n                    </Typography>\r\n                </Box>\r\n            </PaperTitle>\r\n            <PaperTitle title='Calculation'>\r\n                <Grid container justify='center'>\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <Box p={2}>\r\n                            <FastPowerTable stepsObj={solutionPowA} />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <KluczeDisplay\r\n                p={p}\r\n                alpha={g}\r\n                beta={solutionPowA.result}\r\n                t={t}\r\n                showPaper\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ElGamal;\r\n","import { Typography, Box } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { mod } from 'utils/numHelpers';\n\nimport useNumberInput from 'utils/useNumberInput';\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction Mod() {\n    const [num, setNum] = useNumberInput(2);\n    const [modulo, setModulo] = useNumberInput(1019);\n\n    const result = mod(num, modulo);\n\n    return (\n        <>\n            <PaperTitle title={'Inputs'}>\n                <Grid container>\n                    <Grid item xs={6} sm={4}>\n                        <Box p={2}>\n                            {' '}\n                            <TextField\n                                fullWidth\n                                variant={'outlined'}\n                                label='Number'\n                                onChange={setNum}\n                                value={num}\n                                type='number'\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} sm={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant={'outlined'}\n                                label='Modulo'\n                                onChange={setModulo}\n                                value={modulo}\n                                type='number'\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Solution'}>\n                <Box textAlign={'center'} p={2}>\n                    <Typography variant={'h5'}>\n                        <DisplayFormula\n                            number={num}\n                            power={''}\n                            modulo={modulo}\n                            variant={'h5'}\n                        />{' '}\n                        = {result}\n                    </Typography>\n                </Box>\n            </PaperTitle>\n        </>\n    );\n}\n\nexport default Mod;\n","import React, { useMemo } from 'react';\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PaperTitle from 'styled/PaperTitle';\r\nimport KluczeDisplay from 'pages/elgamal/KluczeDisplay';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\n\r\nexport const useElgamalKeysInputs = () => {\r\n    const [p, setP] = useNumberInput(1619);\r\n    const [alpha, setAlpha] = useNumberInput(2);\r\n    const [t, setT] = useNumberInput(937);\r\n\r\n    const solutionPowA = useMemo(\r\n        () => getFastPowerMod(alpha, t, p),\r\n        [p, alpha, t]\r\n    );\r\n\r\n    const beta = solutionPowA.result;\r\n\r\n    return { p, setP, alpha, setAlpha, t, setT, beta };\r\n};\r\n\r\nfunction ElGamalKeyInputs({ p, setP, alpha, setAlpha, t, setT, beta }) {\r\n    return (\r\n        <PaperTitle title='Enter keys'>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='p'\r\n                            onChange={setP}\r\n                            value={p}\r\n                            helperText='Modulo'\r\n                            type='number'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='α'\r\n                            onChange={setAlpha}\r\n                            value={alpha}\r\n                            type='number'\r\n                            helperText='Generator'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='β'\r\n                            value={beta}\r\n                            disabled\r\n                            type='number'\r\n                            helperText='Calculated number'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            label='t'\r\n                            onChange={setT}\r\n                            value={t}\r\n                            type='number'\r\n                            helperText='Random private variable'\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} justify={'center'}>\r\n                    <Box p={2} textAlign={'center'}>\r\n                        <KluczeDisplay p={p} alpha={alpha} beta={beta} t={t} />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </PaperTitle>\r\n    );\r\n}\r\n\r\nexport default ElGamalKeyInputs;\r\n","import { useMemo } from 'react';\nimport { Box, Typography, useMediaQuery } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nimport useNumberInput from 'utils/useNumberInput';\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\nimport { mod } from 'utils/numHelpers';\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\nimport { useTheme } from '@material-ui/core/styles';\nimport ElGamalKeyInputs, {\n    useElgamalKeysInputs,\n} from 'pages/elgamal/ElGamalKeyInputs';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction ElGamalSzyfrowanie() {\n    const rsaInputs = useElgamalKeysInputs();\n    const { p, alpha, t } = rsaInputs;\n\n    const [x, setX] = useNumberInput(20);\n    const [r, setR] = useNumberInput(320);\n\n    const solutionPowA = useMemo(\n        () => getFastPowerMod(alpha, t, p),\n        [p, alpha, t]\n    );\n\n    const beta = solutionPowA.result;\n\n    const solutionPowY1 = useMemo(\n        () => getFastPowerMod(alpha, r, p),\n        [p, alpha, r]\n    );\n    const solutionPowY2 = useMemo(\n        () => getFastPowerMod(beta, r, p),\n        [p, beta, r]\n    );\n    const y1 = solutionPowY1.result;\n    const y2 = mod(x * solutionPowY2.result, p);\n\n    const theme = useTheme();\n    const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <>\n            <ElGamalKeyInputs {...rsaInputs} />\n\n            <PaperTitle title='Inputs'>\n                <Grid container>\n                    <Grid item xs={12} sm={6} md={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='x'\n                                onChange={setX}\n                                value={x}\n                                type='number'\n                                helperText='Message'\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='r'\n                                onChange={setR}\n                                value={r}\n                                type='number'\n                                helperText='Randomizer'\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Equation'}>\n                <Box m={2}>\n                    <Typography\n                        variant={isPhone ? 'body1' : 'h4'}\n                        align='center'\n                    >\n                        C = (y<sub>1</sub>, y<sub>2</sub>) = E\n                        <sub>\n                            k<sub>1</sub>\n                        </sub>\n                        (r,x) = (α<sup>r</sup> mod p, x * β<sup>r</sup> mod p)\n                    </Typography>\n                </Box>\n            </PaperTitle>\n\n            <PaperTitle title={'Calculation'}>\n                <Grid container>\n                    <Grid item xs={12} sm={6}>\n                        <Box p={2} align='center'>\n                            <Typography variant='h4' gutterBottom>\n                                y<sub>1</sub>\n                            </Typography>\n                            <DisplayFormula\n                                number={alpha}\n                                power={r}\n                                modulo={p}\n                            />\n                            <FastPowerTable stepsObj={solutionPowY1} />{' '}\n                            <Box p={2}>\n                                y<sub>1</sub>= {y1}\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Box p={2} align='center'>\n                            <Typography variant='h4' gutterBottom>\n                                y<sub>2</sub>\n                            </Typography>\n                            {x} *{' '}\n                            <DisplayFormula\n                                number={beta}\n                                power={r}\n                                modulo={p}\n                            />\n                            <FastPowerTable stepsObj={solutionPowY2} />\n                            <Box p={2}>\n                                y<sub>2</sub> = {x} * {solutionPowY2.result} mod{' '}\n                                {p} = {y2}\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Solution'}>\n                <Box p={2}>\n                    <Typography variant='h4' align='center'>\n                        (y<sub>1</sub>, y<sub>2</sub>) = ({y1}, {y2})\n                    </Typography>\n                </Box>\n            </PaperTitle>\n        </>\n    );\n}\n\nexport default ElGamalSzyfrowanie;\n","import { useMemo } from 'react';\r\nimport { Typography, Box, useMediaQuery } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'utils/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ElGamalKeyInputs, {\r\n    useElgamalKeysInputs,\r\n} from 'pages/elgamal/ElGamalKeyInputs';\r\nimport PaperTitle from 'styled/PaperTitle';\r\n\r\nfunction ElGamalDeszyfrowanie() {\r\n    const rsaInputs = useElgamalKeysInputs();\r\n    const { p, alpha, t } = rsaInputs;\r\n\r\n    const [y1, setY1] = useNumberInput(130);\r\n    const [y2, setY2] = useNumberInput(414);\r\n\r\n    const solutionPowA = useMemo(\r\n        () => getFastPowerMod(alpha, t, p),\r\n        [p, alpha, t]\r\n    );\r\n\r\n    const beta = solutionPowA.result;\r\n\r\n    const power = p - 1 - t;\r\n    const error = power <= 0 || power % 1 !== 0;\r\n    const solutionPowX = useMemo(\r\n        () => getFastPowerMod(y1, power, p),\r\n        [p, y1, power]\r\n    );\r\n\r\n    const x = mod(y2 * solutionPowX.result, p);\r\n\r\n    const theme = useTheme();\r\n    const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <>\r\n            <ElGamalKeyInputs {...rsaInputs} />\r\n\r\n            <PaperTitle title='Inputs'>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label={\r\n                                    <>\r\n                                        y<sub>1</sub>\r\n                                    </>\r\n                                }\r\n                                onChange={setY1}\r\n                                value={y1}\r\n                                type='number'\r\n                                helperText='Encrypted message'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                label={\r\n                                    <>\r\n                                        y<sub>2</sub>\r\n                                    </>\r\n                                }\r\n                                onChange={setY2}\r\n                                value={y2}\r\n                                type='number'\r\n                                helperText='Encrypted message'\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title={'Equation'}>\r\n                <Box m={2}>\r\n                    <Typography\r\n                        variant={isPhone ? 'body1' : 'h4'}\r\n                        align='center'\r\n                    >\r\n                        X = P = y<sub>2</sub>* y<sub>1</sub>\r\n                        <sup>p - 1 - t</sup> mod p\r\n                    </Typography>\r\n                </Box>\r\n                <Box m={2}>\r\n                    <Typography\r\n                        variant={isPhone ? 'body1' : 'h4'}\r\n                        align='center'\r\n                    >\r\n                        X = P = {y2} * {y1}\r\n                        <sup>{p - 1 - t}</sup> mod {p}\r\n                    </Typography>\r\n                </Box>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title={'Calculation'}>\r\n                <Grid container justify={'center'}>\r\n                    <Grid item xs={12} sm={8} md={6} align='center'>\r\n                        <Box py={2} align='center'>\r\n                            {y2} *{' '}\r\n                            <DisplayFormula\r\n                                number={y1}\r\n                                modulo={p}\r\n                                power={power}\r\n                            />\r\n                            <FastPowerTable stepsObj={solutionPowX} />{' '}\r\n                            <Box p={2}>\r\n                                x = {y2} * {solutionPowX.result} mod {p} = {x}\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaperTitle>\r\n\r\n            <PaperTitle title={'Solution'} p={2}>\r\n                <Typography variant='h4' align='center'>\r\n                    X = {x}\r\n                </Typography>\r\n            </PaperTitle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ElGamalDeszyfrowanie;\r\n","import { useMemo } from 'react';\nimport { Typography, Box, Paper } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { mod, modInverse } from 'utils/numHelpers';\n\nimport useNumberInput from 'utils/useNumberInput';\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\nimport KluczeDisplay from './KluczeDisplay';\nimport OdwrotnoscTable from 'pages/odwrotnosc/OdwrotnoscTable';\nimport ElGamalKeyInputs, {\n    useElgamalKeysInputs,\n} from 'pages/elgamal/ElGamalKeyInputs';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction ElGamalPodpis() {\n    const rsaInputs = useElgamalKeysInputs();\n    const { p, alpha, t } = rsaInputs;\n\n    const [h, setH] = useNumberInput(357);\n    const [r, setR] = useNumberInput(515);\n\n    const inverted = modInverse(r, p - 1);\n    const solutionPowA = useMemo(\n        () => getFastPowerMod(alpha, r, p),\n        [p, alpha, r]\n    );\n\n    const u = solutionPowA.result;\n    const s = mod(inverted * (h - t * u), p - 1);\n\n    return (\n        <>\n            <ElGamalKeyInputs {...rsaInputs} />\n            <PaperTitle title='Inputs'>\n                <Grid container>\n                    <Grid item xs={12} sm={6} md={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='h'\n                                onChange={setH}\n                                value={h}\n                                type='number'\n                                helperText='Message hash'\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label='r'\n                                onChange={setR}\n                                value={r}\n                                type='number'\n                                helperText='Randomizer'\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n            {/*<Box p={2}>*/}\n            {/*    Alicja chce wysłać do Boba wiadomość, której*/}\n            {/*    skrót wynosi h={h}. Wygenerować przez Alicję*/}\n            {/*    podpis cyfrowy ElGamala dla tej wiadomości,*/}\n            {/*    wiedząc, że Alicja użyła randomizera r={r}.*/}\n            {/*</Box>*/}{' '}\n            <PaperTitle title={'Equation'}>\n                <Grid container justify={'center'}>\n                    <Grid item xs={12} align='center'>\n                        <Box p={2} pb={2} textAlign='center'>\n                            <Typography variant={'h4'}>\n                                Signature = (u, s)\n                            </Typography>\n                            <Typography variant='h4'>\n                                u ={' '}\n                                <DisplayFormula\n                                    number={'α'}\n                                    modulo={'p'}\n                                    power={'r'}\n                                    variant={'h4'}\n                                />\n                            </Typography>\n                            <Typography variant={'h4'}>\n                                s = r<sup>-1</sup> * (h - t * u) mod (p -1)\n                            </Typography>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n            <PaperTitle title={'Calculate \"u\"'}>\n                <Grid container justify={'center'}>\n                    <Grid item xs={12} sm={8} md={6} align='center'>\n                        <Box p={2} pb={2} textAlign='center'>\n                            <DisplayFormula\n                                number={alpha}\n                                modulo={p}\n                                power={r}\n                                variant={'h4'}\n                            />\n                        </Box>\n                        <FastPowerTable stepsObj={solutionPowA} />\n                        <Box p={2} textAlign='center'>\n                            u = {solutionPowA.result}\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n            <PaperTitle title={'Calculate \"s\"'}>\n                <Box py={2} align='center'>\n                    <OdwrotnoscTable a={r} b={p - 1} />\n                    <Box p={2}>\n                        <Typography>\n                            s = ({inverted} * ({h} - {t} * {solutionPowA.result}\n                            )) mod {p - 1} = {s}\n                        </Typography>\n                        <Typography>s = {s}</Typography>\n                    </Box>\n                </Box>\n            </PaperTitle>\n            <PaperTitle title={'Solution'}>\n                <Box p={2} align='center'>\n                    <Typography variant='body1' component='p'>\n                        Signature (u, s) = ({u}, {s})\n                    </Typography>\n                </Box>\n            </PaperTitle>\n        </>\n    );\n}\nexport default ElGamalPodpis;\n","import { useMemo } from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { mod } from 'utils/numHelpers';\n\nimport useNumberInput from 'utils/useNumberInput';\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\nimport DisplayFormula from 'pages/diffie-hellman/DisplayFormula';\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\nimport KluczeDisplay from './KluczeDisplay';\nimport ElGamalKeyInputs, {\n    useElgamalKeysInputs,\n} from 'pages/elgamal/ElGamalKeyInputs';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction ElGamalPodpisWeryfikacja() {\n    const rsaInputs = useElgamalKeysInputs();\n    const { p, alpha, beta, t } = rsaInputs;\n\n    const [h, setH] = useNumberInput(357);\n\n    const [u, setU] = useNumberInput(1310);\n    const [s, setS] = useNumberInput(1579);\n\n    const solutionPowF = useMemo(\n        () => getFastPowerMod(alpha, h, p),\n        [p, alpha, h]\n    );\n    const solutionPowLeft = useMemo(\n        () => getFastPowerMod(beta, u, p),\n        [p, beta, u]\n    );\n    const solutionPowRight = useMemo(() => getFastPowerMod(u, s, p), [p, u, s]);\n\n    const f = solutionPowF.result;\n    const g = mod(solutionPowLeft.result * solutionPowRight.result, p);\n\n    return (\n        <>\n            <ElGamalKeyInputs {...rsaInputs} />\n\n            <PaperTitle title='Inputs'>\n                <Grid container>\n                    {/*<Grid item xs={12}>*/}\n                    {/*    <Box p={2}>*/}\n                    {/*        Bob otrzymał od Alicji wiadomość, której skrót*/}\n                    {/*        wynosi h={h}, oraz podpis cyfrowy ELGamala (u, s) =*/}\n                    {/*        ({u}, {s}). Zweryfikuj przez Boba otrzymany od*/}\n                    {/*        Alicji podpis cyfrowy.*/}\n                    {/*    </Box>*/}\n                    {/*</Grid>*/}\n                    <Grid item xs={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label=\"h'\"\n                                onChange={setH}\n                                value={h}\n                                type='number'\n                                helperText='Message hash'\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label=\"u'\"\n                                onChange={setU}\n                                value={u}\n                                type='number'\n                                helperText={`First signature's value`}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Box p={2}>\n                            <TextField\n                                fullWidth\n                                variant='outlined'\n                                label=\"s'\"\n                                onChange={setS}\n                                value={s}\n                                type='number'\n                                helperText={`Second signature's value`}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Equations'} p={2}>\n                <Typography variant='h4' align='center'>\n                    f ={' '}\n                    <DisplayFormula\n                        number={'α'}\n                        power={'h'}\n                        modulo={'p'}\n                        variant={'h4'}\n                    />\n                </Typography>\n                <Typography variant='h4' align='center' gutterBottom>\n                    g = β<sup>u'</sup> * u'<sup>s'</sup> mod p ={' '}\n                    <DisplayFormula\n                        number={'β'}\n                        power={\"u'\"}\n                        modulo={'p'}\n                        variant={'h4'}\n                    />{' '}\n                    {'* '}\n                    <DisplayFormula\n                        number={\"u'\"}\n                        power={\"s'\"}\n                        modulo={'p'}\n                        variant={'h4'}\n                    />\n                </Typography>\n                <Typography variant='h4' align='center'>\n                    If signature is correct then f = g\n                </Typography>\n            </PaperTitle>\n\n            <PaperTitle title={'Calculate \"f\"'}>\n                <Grid container justify={'center'}>\n                    <Grid item xs={12} sm={8} md={6} align='center'>\n                        <Box p={2} pb={2} textAlign='center'>\n                            <DisplayFormula\n                                number={alpha}\n                                power={h}\n                                modulo={p}\n                                variant={'h5'}\n                            />\n                            <FastPowerTable stepsObj={solutionPowF} />\n                            <Box p={2} textAlign='center'>\n                                f = {solutionPowF.result}\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PaperTitle>\n\n            <PaperTitle title={'Calculate \"g\"'}>\n                <Grid container>\n                    <Grid item xs={12} sm={6}>\n                        <Box p={2} align='center'>\n                            <Typography gutterBottom>\n                                <DisplayFormula\n                                    number={'β'}\n                                    power={\"u'\"}\n                                    modulo={'p'}\n                                    variant={'h5'}\n                                />\n                            </Typography>\n                            <Typography gutterBottom>\n                                <DisplayFormula\n                                    number={beta}\n                                    power={u}\n                                    modulo={p}\n                                    variant={'h5'}\n                                />\n                            </Typography>\n                            <FastPowerTable stepsObj={solutionPowLeft} />\n                            <Box p={2}>{solutionPowLeft.result}</Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Box p={2} align='center'>\n                            <Typography gutterBottom>\n                                <DisplayFormula\n                                    number={\"u'\"}\n                                    power={\"s'\"}\n                                    modulo={'p'}\n                                    variant={'h5'}\n                                />\n                            </Typography>\n                            <Typography gutterBottom>\n                                <DisplayFormula\n                                    number={u}\n                                    power={s}\n                                    modulo={p}\n                                    variant={'h5'}\n                                />\n                            </Typography>\n                            <FastPowerTable stepsObj={solutionPowRight} />\n                            <Box p={2}>{solutionPowRight.result}</Box>\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Box p={2} align='center'>\n                    <Typography gutterBottom>\n                        g = ({solutionPowLeft.result} *{' '}\n                        {solutionPowRight.result}) mod {p} ={' '}\n                        {solutionPowLeft.result * solutionPowRight.result} mod{' '}\n                        {p}\n                    </Typography>\n                    <Typography gutterBottom>g = {g}</Typography>\n                </Box>\n            </PaperTitle>\n\n            <PaperTitle title={'Solution'}>\n                <Box align={'center'} p={2}>\n                    <Typography variant='body1' component='p'>\n                        f {f == g ? '=' : '≠'} g\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                        {g} {f == g ? '=' : '≠'} {f}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                        <b>Signature {f == g ? 'is' : \"isn't\"} correct</b>\n                    </Typography>\n                </Box>\n            </PaperTitle>\n        </>\n    );\n}\nexport default ElGamalPodpisWeryfikacja;\n","import { Typography, Box } from '@material-ui/core';\nimport { getLetter } from 'utils/numHelpers';\nimport PaperTitle from 'styled/PaperTitle';\n\nfunction CheatSheet() {\n    const letters = new Array(26).fill(0).map((_, i) => {\n        const index = i;\n        const letter = getLetter(index);\n        return {\n            index,\n            letter,\n        };\n    });\n\n    return (\n        <PaperTitle title='Cheatsheet'>\n            <Box p={2} align='center'>\n                {letters.map(({ index, letter }) => (\n                    <Typography variant='h5'>\n                        {index} = {letter}\n                    </Typography>\n                ))}\n            </Box>\n        </PaperTitle>\n    );\n}\n\nexport default CheatSheet;\n","import React from 'react';\n\nimport Cezar from './pages/cezar/Cezar';\nimport Vigener from './pages/vigener/Vigener';\nimport Afiniczny from './pages/afiniczny/Afiniczny';\nimport DiffieHellman from './pages/diffie-hellman/DiffieHellman';\nimport Odwrotnosc from './pages/odwrotnosc/Odwrotnosc';\nimport PotegaMod from './pages/potega-mod/PotegaMod';\nimport RSAKlucze from './pages/rsa/RSAKlucze';\nimport RSASzyfrowanie from 'pages/rsa/RSASzyfrowanie';\nimport RSADeszyfrowanie from 'pages/rsa/RSADeszyfrowanie';\nimport RSAPodpis from './pages/rsa/RSAPodpis';\nimport RSAPodpisWeryfikacja from './pages/rsa/RSAPodpisWeryfikacja';\nimport ElGamal from './pages/elgamal/ElGamal';\nimport Mod from './pages/mod/Mod';\n\nimport ElGamalSzyfrowanie from './pages/elgamal/ElGamalSzyfrowanie';\nimport ElGamalDeszyfrowanie from './pages/elgamal/ElGamalDeszyfrowanie';\nimport ElGamalPodpis from './pages/elgamal/ElGamalPodpis';\nimport ElGamalPodpisWeryfikacja from './pages/elgamal/ElGamalPodpisWeryfikacja';\nimport CheatSheet from './pages/cheat-sheet/CheatSheet';\nconst Hill = React.lazy(() => import('./pages/hill/Hill'));\n\nconst g = ['g', 'generator'];\nconst p = ['p', 'grupa multiplikatywna'];\nconst word = ['słowo', 'wiadomość'];\nconst encrDecr = [\n    ['enkrypcja', 'dekrypcja'],\n    ['szyfrowanie', 'deszyfrowanie'],\n];\nconst wiadomość = ['x', 'wiadomość'];\nconst skrot = ['x', 'h', 'wiadomość', 'skrót'];\nconst podpis = ['s', 'podpis'];\n\nconst alfa = [g, 'α', 'alpha', 'alfa'];\nconst beta = ['b', 'β', 'beta'];\nconst rsaKeys = ['n', 'e', 'd'];\nconst elGamalKeys = [alfa, p, beta, 't'];\n\nconst componentList = [\n    {\n        categoryName: 'Helpers',\n        methods: [\n            {\n                component: <Odwrotnosc />,\n                name: 'Modular inverse',\n                keywords: ['modulo'],\n            },\n            {\n                component: <PotegaMod />,\n                name: 'Modular exponentiation',\n                keywords: [g, 'potęga', 'power'],\n            },\n            { component: <Mod />, name: 'Modulo', keywords: ['modulo'] },\n            {\n                component: <CheatSheet />,\n                name: 'Letters to numbers',\n                keywords: [],\n            },\n        ],\n    },\n    {\n        categoryName: 'Ciphers',\n        methods: [\n            {\n                component: <Cezar />,\n                name: 'Cesar',\n                keywords: [word, 'klucz', encrDecr],\n            },\n            {\n                component: <Afiniczny />,\n                name: 'Affine',\n                keywords: [word, 'klucz', encrDecr],\n            },\n            {\n                component: <Vigener />,\n                name: 'Vigenère',\n                keywords: [word, 'klucz', encrDecr],\n            },\n            {\n                component: <Hill />,\n                name: 'Hill',\n                keywords: [word, 'klucz - macierz', encrDecr],\n            },\n        ],\n    },\n    {\n        categoryName: 'Key exchange',\n        methods: [\n            {\n                component: <DiffieHellman />,\n                name: 'Diffie Hellman',\n                keywords: [g, p, 'a', 'b'],\n            },\n        ],\n    },\n    {\n        categoryName: 'RSA',\n        methods: [\n            {\n                component: <RSAKlucze />,\n                name: 'Keys generation',\n                keywords: [p, 'q', 'e'],\n            },\n            {\n                component: <RSASzyfrowanie />,\n                name: 'Encryption',\n                keywords: [rsaKeys, wiadomość],\n            },\n            {\n                component: <RSADeszyfrowanie />,\n                name: 'Decryption',\n                keywords: [rsaKeys, 'y - szyfrogram'],\n            },\n            {\n                component: <RSAPodpis />,\n                name: 'Signature',\n                keywords: ['n', 'e', 'd', skrot],\n            },\n            {\n                component: <RSAPodpisWeryfikacja />,\n                name: 'Signature verification',\n                keywords: [rsaKeys, skrot, podpis],\n            },\n        ],\n    },\n    {\n        categoryName: 'El Gamal',\n        methods: [\n            {\n                component: <ElGamal />,\n                name: 'Keys generation',\n                keywords: [[g, 'α', 'alpha', 'alfa'], p, 't'],\n            },\n            {\n                component: <ElGamalSzyfrowanie />,\n                name: 'Encryption',\n                keywords: [elGamalKeys, skrot, ['r', 'randomizer']],\n            },\n            {\n                component: <ElGamalDeszyfrowanie />,\n                name: 'Decryption',\n                keywords: [elGamalKeys, ['y1', 'y'], ['y2', 'y']],\n            },\n            {\n                component: <ElGamalPodpis />,\n                name: 'Signature',\n                keywords: [elGamalKeys, skrot, ['r', 'randomizer']],\n            },\n            {\n                component: <ElGamalPodpisWeryfikacja />,\n                name: 'Signature verification',\n                keywords: [elGamalKeys, skrot, ['u', \"u'\"], ['s', \"s'\"]],\n            },\n        ],\n    },\n];\n\nexport let componentListFuzzySearchHayStack = [];\n\ncomponentList.forEach((category, i) => {\n    const modules = category.methods.map((method, j) => {\n        return { ...method, category: category.categoryName, indexes: [i, j] };\n    });\n    componentListFuzzySearchHayStack.push(...modules);\n});\n\nexport default componentList;\n\nwindow.componentList = componentList;\nwindow.componentListFuzzySearchHayStack = componentListFuzzySearchHayStack;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport componentList from 'componentList';\n\nimport Box from '@material-ui/core/Box';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { useMediaQuery, ClickAwayListener } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        position: (isPhone) => (isPhone ? 'fixed' : 'initial'),\n        width: drawerWidth,\n        flexShrink: 0,\n        zIndex: (isPhone) => (isPhone ? 1200 : 0),\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n}));\n\nexport const PersistentDrawer = ({\n    isOpen,\n    onClose,\n    onMethodSelect,\n    selectedMethod,\n}) => {\n    const theme = useTheme();\n    const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles(isPhone);\n\n    const onMethodClick = (...params) => {\n        if (isPhone) {\n            onClose();\n        }\n        onMethodSelect(...params);\n    };\n\n    const handleClickAway = (params) => {\n        if (isPhone) {\n            onClose();\n        }\n    };\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <Drawer\n                className={classes.drawer}\n                variant='persistent'\n                anchor='left'\n                open={isOpen}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={onClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                {componentList.map((category, i) => (\n                    <React.Fragment key={i}>\n                        <List>\n                            <ListItem disabled>\n                                <Box\n                                    display='flex'\n                                    align='center'\n                                    alignItems='center'\n                                    justifyContent='center'\n                                    width={'100%'}\n                                >\n                                    <Typography variant='button'>\n                                        {category.categoryName}\n                                    </Typography>\n                                </Box>\n                            </ListItem>\n\n                            {category.methods.map((c, j) => (\n                                <ListItem\n                                    button\n                                    key={j}\n                                    onClick={() => onMethodClick(i, j)}\n                                    selected={\n                                        i == selectedMethod[0] &&\n                                        j == selectedMethod[1]\n                                    }\n                                >\n                                    <ListItemText primary={c.name} />\n                                </ListItem>\n                            ))}\n                        </List>\n                        <Divider />\n                    </React.Fragment>\n                ))}\n                <List>\n                    <ListItem\n                        component='a'\n                        href='https://www.paypal.me/krzysztofwidacki'\n                        target='_blank'\n                    >\n                        <ListItemIcon>\n                            <LocalCafeIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary='Buy me a coffee'\n                            secondary='PayPal '\n                        />\n                    </ListItem>\n\n                    <ListItem\n                        component='a'\n                        href='https://github.com/Angael/KryptoBreaker'\n                        target='_blank'\n                    >\n                        <ListItemIcon>\n                            <GitHubIcon />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary='Source code'\n                            secondary='Github'\n                        />\n                    </ListItem>\n                </List>\n            </Drawer>\n        </ClickAwayListener>\n    );\n};\n","import React, { useState } from 'react';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    Paper,\n    Typography,\n    Box,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction KeyExplanation({ isOpen, onClose }) {\n    const theme = useTheme();\n    const isPhone = useMediaQuery(theme.breakpoints.down('xs'));\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                onClose={onClose}\n                PaperComponent={Paper}\n                aria-labelledby='draggable-dialog-title'\n                maxWidth={false}\n                fullScreen={isPhone}\n            >\n                <DialogTitle>When to use which key?</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Box mb={8}>\n                            <Typography variant='h4'>\n                                Encrypting a message:\n                            </Typography>\n                            <Typography variant='body1' gutterBottom>\n                                1. <u>Sender</u> encrypts a message using{' '}\n                                <u>receiver's public key</u>\n                            </Typography>\n                            <Typography variant='body1'>\n                                2. <u>Receiver</u> decrypts a message using{' '}\n                                <u>his own private key</u>\n                            </Typography>\n                        </Box>\n                        <Box mb={2}>\n                            <Typography variant='h4'>\n                                Signing a message:\n                            </Typography>\n                            <Typography variant='body1' gutterBottom>\n                                1. <u>Sender</u> signs a message using{' '}\n                                <u>his own private key</u>\n                            </Typography>\n                            <Typography variant='body1'>\n                                2. <u>Receiver</u> verifies message and\n                                signature using <u>sender's public key</u>\n                            </Typography>\n                        </Box>\n                    </DialogContentText>\n                </DialogContent>\n                {/*<DialogTitle>Kiedy używa się jakiego klucza?</DialogTitle>*/}\n                {/*<DialogContent>*/}\n                {/*\t<DialogContentText>*/}\n                {/*\t\t<Box mb={8}>*/}\n                {/*\t\t\t<Typography variant='h4'>Szyfrowanie wiadomości</Typography>*/}\n                {/*\t\t\t<Typography variant='body1' gutterBottom>*/}\n                {/*\t\t\t\t1. <u>Nadawca</u> do zaszyfrowania informacji używa{' '}*/}\n                {/*\t\t\t\t<u>klucza publicznego odbiorcy</u>*/}\n                {/*\t\t\t</Typography>*/}\n                {/*\t\t\t<Typography variant='body1'>*/}\n                {/*\t\t\t\t2. <u>Odbiorca</u> do odszyfrowania informacji użyje{' '}*/}\n                {/*\t\t\t\t<u>swojego klucza prywatnego</u>*/}\n                {/*\t\t\t</Typography>*/}\n                {/*\t\t</Box>*/}\n                {/*\t\t<Box mb={2}>*/}\n                {/*\t\t\t<Typography variant='h4'>Podpis Cyfrowy Wiadomości</Typography>*/}\n                {/*\t\t\t<Typography variant='body1' gutterBottom>*/}\n                {/*\t\t\t\t1. <u>Nadawca</u> informacji aby podpisać wiadomość użyje{' '}*/}\n                {/*\t\t\t\t<u>swojego klucza prywatnego</u>*/}\n                {/*\t\t\t</Typography>*/}\n                {/*\t\t\t<Typography variant='body1'>*/}\n                {/*\t\t\t\t2. <u>Odbiorca</u> zweryfikuje wiadomość za pomocą{' '}*/}\n                {/*\t\t\t\t<u>klucza publicznego nadawacy</u>*/}\n                {/*\t\t\t</Typography>*/}\n                {/*\t\t</Box>*/}\n                {/*\t</DialogContentText>*/}\n                {/*</DialogContent>*/}\n                <DialogActions>\n                    <Button autoFocus onClick={onClose} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default KeyExplanation;\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { componentListFuzzySearchHayStack } from 'componentList';\nimport Fuse from 'fuse.js';\n\nimport { cx } from '@emotion/css';\nimport {\n    Box,\n    ClickAwayListener,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport clsx from 'clsx';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles((theme) => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.3),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n        overflow: 'visible',\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n        '&::selection': {\n            color: alpha('#fff', 1),\n            background: alpha('#fff', 0.25),\n        },\n    },\n    resultsContainer: {\n        display: 'block',\n        position: 'absolute',\n        top: 'calc(100% + 2px)',\n        left: 0,\n        minWidth: '100%',\n        width: '400px',\n        maxHeight: '50vh',\n        background: alpha('#000', 0.5),\n        backdropFilter: 'blur(8px)',\n        borderRadius: 4,\n        [theme.breakpoints.down('xs')]: {\n            position: 'fixed',\n            top: 56,\n            left: 0,\n            width: '95vh',\n        },\n        opacity: 1,\n        height: '222px',\n        transition: '0.2s',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        '&::-webkit-scrollbar': {\n            width: '7px',\n        },\n\n        /* Track */\n        '&::-webkit-scrollbar-track': {\n            background: 'transparent',\n        },\n\n        /* Handle */\n        '&::-webkit-scrollbar-thumb': {\n            background: alpha('#fff', 0.4),\n        },\n\n        /* Handle on hover */\n        '&::-webkit-scrollbar-thumb:hover': {\n            background: alpha('#fff', 0.7),\n        },\n    },\n    hide: {\n        opacity: '0 !important',\n        height: '0px !important',\n        transition: '0.2s',\n        width: '100% !important',\n        background: 'transparent',\n        // display: 'none !important',\n    },\n    btn: {\n        width: '100%',\n        justifyContent: 'flex-start',\n        textAlign: 'left',\n        background: 'transparent',\n        transition: '0.2s',\n        '&:focus': {\n            background: alpha('#fff', 0.15),\n            outline: '1px white solid',\n        },\n        '&:hover': {\n            background: alpha('#fff', 0.3),\n        },\n    },\n}));\n\nconst useAutoCompleteStyles = makeStyles((theme) => ({\n    popper: {\n        backdropFilter: 'blur(12px)',\n    },\n    paper: {\n        backgroundColor: 'rgba(255,255,255,0.6)',\n    },\n}));\n\nconst options = {\n    includeScore: true,\n    keys: ['category', 'name', 'keywords'],\n};\nconst fuse = new Fuse(componentListFuzzySearchHayStack, options);\n\nconst Search = ({ setIndexes }) => {\n    const classes = useStyles();\n    const acClasses = useAutoCompleteStyles();\n\n    const [value, setValue] = useState('');\n    const onChangeVal = (e, v) => {\n        setValue(v);\n    };\n\n    const results = value.trim()\n        ? fuse.search(value.trim()).filter((result) => {\n              return result.score < 0.3;\n          })\n        : [];\n\n    const onInputFocus = (e) => {\n        e.target.setSelectionRange(0, value.length);\n    };\n\n    const onSearchOptionClick = (e, v) => {\n        if (v) {\n            setIndexes(v.item.indexes);\n            setValue('');\n        } else {\n            setValue('');\n        }\n    };\n\n    console.log(results);\n\n    return (\n        <Autocomplete\n            classes={acClasses}\n            freeSolo\n            filterOptions={(x) => x}\n            options={results}\n            getOptionLabel={(x) => ''}\n            renderOption={(x) => (\n                <div className={'opcja'}>\n                    {x.item.category} \\ {x.item.name}\n                </div>\n            )}\n            onInputChange={onChangeVal}\n            onChange={onSearchOptionClick}\n            renderInput={(params) => (\n                <div className={classes.search} ref={params.InputProps.ref}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon />\n                    </div>\n                    <InputBase\n                        {...params}\n                        placeholder='Search…'\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{\n                            ...params.inputProps,\n                            onFocus: onInputFocus,\n                        }}\n                    />\n                </div>\n            )}\n        />\n    );\n};\nexport default Search;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Button, Tooltip, Hidden } from '@material-ui/core';\nimport KeyExplanation from './key-explanation/KeyExplanation';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nimport Search from './search/Search';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    rightButton: {\n        marginRight: theme.spacing(2),\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    hide: {\n        display: 'none',\n    },\n}));\n\nexport const NavigationBar = ({ drawerOpen, openDrawer, setIndexes }) => {\n    const classes = useStyles();\n\n    const [explanationOpen, setExplanationOpen] = useState(false);\n\n    return (\n        <AppBar\n            position='fixed'\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: drawerOpen,\n            })}\n        >\n            <Toolbar>\n                <IconButton\n                    color='inherit'\n                    aria-label='open drawer'\n                    onClick={openDrawer}\n                    edge='start'\n                    className={clsx(\n                        classes.menuButton,\n                        drawerOpen && classes.hide\n                    )}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Hidden xsDown>\n                    <Typography variant='h6' noWrap>\n                        KryptoBreaker\n                    </Typography>\n                </Hidden>\n\n                <Search setIndexes={setIndexes} />\n                <div className={classes.rightButton}>\n                    <Tooltip title='When to use which key'>\n                        <IconButton\n                            color='inherit'\n                            aria-label='open drawer'\n                            onClick={() => setExplanationOpen(true)}\n                            edge='end'\n                        >\n                            <VpnKeyIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <KeyExplanation\n                        isOpen={explanationOpen}\n                        onClose={() => setExplanationOpen(false)}\n                    />\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import React, { Suspense } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    useMediaQuery,\r\n    Breadcrumbs,\r\n    Paper,\r\n} from '@material-ui/core';\r\n\r\nimport useLocalStorage from 'utils/useLocalStorage';\r\n\r\nimport componentList from './componentList';\r\n\r\nimport { PersistentDrawer } from 'nav/PersistentDrawer';\r\nimport { NavigationBar } from './nav/NavigationBar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: '5rem',\r\n        padding: theme.spacing(0),\r\n        marginLeft: (isPhone) => (isPhone ? 0 : -drawerWidth),\r\n    },\r\n    contentShift: {\r\n        marginLeft: () => 0, // If this isnt a function, then marginLeft in content:{} wins in priority lol\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n    // Category and component indexes in componentList.js\r\n    const [indexes, setIndexes] = useLocalStorage('indexes', [0, 0]);\r\n    const [drawerOpen, setDrawerOpen] = useLocalStorage('drawerOpen', true);\r\n\r\n    const selectedCategory = componentList[indexes[0]];\r\n    const selectedMethod = selectedCategory.methods[indexes[1]] || {};\r\n\r\n    const openDrawer = (e) => {\r\n        e.stopPropagation();\r\n        setDrawerOpen(true);\r\n    };\r\n\r\n    const onMethodSelect = (categoryIndex, componentIndex) => {\r\n        setIndexes([categoryIndex, componentIndex]);\r\n    };\r\n\r\n    const theme = useTheme();\r\n    const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const classes = useStyles(isPhone);\r\n\r\n    const methodVariant = isPhone ? 'h5' : 'h4';\r\n\r\n    // console.log(\"<App/>\", \"app rerender\");\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <NavigationBar\r\n                drawerOpen={drawerOpen}\r\n                openDrawer={openDrawer}\r\n                setIndexes={setIndexes}\r\n            />\r\n            <PersistentDrawer\r\n                isOpen={drawerOpen}\r\n                onClose={() => setDrawerOpen(false)}\r\n                onMethodSelect={onMethodSelect}\r\n                selectedMethod={indexes}\r\n            />\r\n\r\n            <div\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: drawerOpen,\r\n                })}\r\n            >\r\n                <Container maxWidth='md'>\r\n                    <Box mb={4}>\r\n                        <Breadcrumbs aria-label='breadcrumb'>\r\n                            <Typography\r\n                                variant={methodVariant}\r\n                                color='textSecondary'\r\n                            >\r\n                                {selectedCategory.categoryName}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant={methodVariant}\r\n                                color='textPrimary'\r\n                            >\r\n                                {selectedMethod.name}\r\n                            </Typography>\r\n                        </Breadcrumbs>\r\n                    </Box>\r\n\r\n                    <Box my={4}>\r\n                        <Suspense fallback={<Box p={4}>Loading...</Box>}>\r\n                            {selectedMethod.component}\r\n                        </Suspense>\r\n                    </Box>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","import { useState } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    useMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 'calc(100vw - 66px)',\r\n    },\r\n}));\r\n\r\nfunction KryptoTable({\r\n    startStr = '',\r\n    endStr = '',\r\n    middleNumbersArr,\r\n    isEncryption = true,\r\n}) {\r\n    const theme = useTheme();\r\n    const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const classes = useStyles(isPhone);\r\n\r\n    const startRow = (\r\n        <TableRow>\r\n            <TableCell component='th' scope='row'>\r\n                {isEncryption ? 'PT' : 'CT'}\r\n            </TableCell>\r\n            {startStr.split('').map((v, i) => (\r\n                <TableCell key={v + i} align='center'>\r\n                    {v}\r\n                </TableCell>\r\n            ))}\r\n        </TableRow>\r\n    );\r\n\r\n    const startNumbers = (\r\n        <TableRow>\r\n            <TableCell component='th' scope='row'>\r\n                {isEncryption ? 'x' : 'y'}\r\n            </TableCell>\r\n            {startStr.split('').map((v, i) => (\r\n                <TableCell key={v + i} align='center'>\r\n                    {getCode(v)}\r\n                </TableCell>\r\n            ))}\r\n        </TableRow>\r\n    );\r\n\r\n    const endNumbers = (\r\n        <TableRow>\r\n            <TableCell component='th' scope='row'>\r\n                {isEncryption ? 'y' : 'x'}\r\n            </TableCell>\r\n            {endStr.split('').map((v, i) => (\r\n                <TableCell key={v + i} align='center'>\r\n                    {getCode(v)}\r\n                </TableCell>\r\n            ))}\r\n        </TableRow>\r\n    );\r\n\r\n    const endRow = (\r\n        <TableRow>\r\n            <TableCell component='th' scope='row'>\r\n                {isEncryption ? 'CT' : 'PT'}\r\n            </TableCell>\r\n            {endStr.split('').map((v, i) => (\r\n                <TableCell key={v + i} align='center'>\r\n                    {v}\r\n                </TableCell>\r\n            ))}\r\n        </TableRow>\r\n    );\r\n\r\n    const middleRow = middleNumbersArr && (\r\n        <TableRow>\r\n            <TableCell component='th' scope='row'>\r\n                k\r\n            </TableCell>\r\n            {middleNumbersArr.map((v, i) => (\r\n                <TableCell key={v + '-' + i} align='center'>\r\n                    {v}\r\n                </TableCell>\r\n            ))}\r\n        </TableRow>\r\n    );\r\n\r\n    return (\r\n        <TableContainer classes={classes}>\r\n            <Table>\r\n                <TableBody>\r\n                    {startRow}\r\n                    {startNumbers}\r\n                    {middleRow}\r\n                    {endNumbers}\r\n                    {endRow}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default KryptoTable;\r\n","import { useState } from \"react\";\r\nimport {\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Card,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { getLetter, getCode } from \"utils/numHelpers\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexDirection: (isPhone) => (isPhone ? \"column\" : \"row\"),\r\n    },\r\n    arrow: {\r\n        transform: (isPhone) => (isPhone ? \"rotate(90deg)\" : \"inherit\"),\r\n    },\r\n}));\r\n\r\nfunction WordAndSolution({ startStr = \"\", endStr = \"\" }) {\r\n    const theme = useTheme();\r\n    const isPhone = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const classes = useStyles(isPhone);\r\n\r\n    const boxCenterProps = {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n    };\r\n    return (\r\n        <Box p={2} {...boxCenterProps} className={classes.root}>\r\n            <Box flex={9} {...boxCenterProps}>\r\n                <Typography variant=\"h5\">{startStr}</Typography>\r\n            </Box>\r\n            <Box flex={1} {...boxCenterProps} className={classes.arrow}>\r\n                <ArrowForwardIcon />\r\n            </Box>\r\n            <Box flex={9} {...boxCenterProps}>\r\n                <Typography variant=\"h5\">{endStr}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default WordAndSolution;\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Typography,\r\n    useMediaQuery,\r\n    useTheme,\r\n} from '@material-ui/core';\r\n\r\nfunction PaperTitle({ title, children, elevation = 2, p = 0 }) {\r\n    const theme = useTheme();\r\n    const smallerText = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const variant = smallerText ? 'h4' : 'h2';\r\n\r\n    return (\r\n        <Box my={5} component='section'>\r\n            <header>\r\n                <Typography variant={variant}>{title}</Typography>\r\n            </header>\r\n            <Paper elevation={elevation} variant='outlined'>\r\n                <Box p={p}>{children}</Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default PaperTitle;\r\n","export function mod(n, m = 26) {\n    return ((n % m) + m) % m;\n}\n\nexport const modInverseAlgorithm = (given_a, given_b) => {\n    const steps = [];\n\n    let i = 0;\n    let r, b, u, v;\n    while (r != 0) {\n        const prevRow = i === 0 ? null : steps[i - 1];\n        const a = prevRow ? prevRow['b'] : given_a;\n        b = prevRow ? prevRow['r'] : given_b;\n        u = prevRow ? prevRow['uprim'] - prevRow['q'] * prevRow['u'] : 0;\n        const uprim = prevRow ? prevRow['u'] : 1;\n        v = prevRow ? prevRow['vprim'] - prevRow['q'] * prevRow['v'] : 1;\n        const vprim = prevRow ? prevRow['v'] : 0;\n        const q = Math.floor(a / b);\n        r = mod(a, b);\n\n        steps.push({ u, uprim, v, vprim, a, b, q, r });\n\n        i++;\n        if (isNaN(r)) {\n            break;\n        }\n    }\n\n    steps.shift();\n    const result = mod(u, given_b);\n    return { steps, result, resultBeforeMod: u };\n};\n\n// odwrotnosc modularna PROSTY SPOSOB, CZASAMI NIE DZIALA np. dla a=215 n=25\nexport const modInverse = (a, m = 26) => {\n    return modInverseAlgorithm(a, m).result;\n};\n\n// OLD BAD PROSTY SPOSOB, CZASAMI NIE DZIALA np. dla a=215 n=25\n// export const modInverse = (a, m = 26) => {\n//     for (let x = 1; x < m; x++) if (((a % m) * (x % m)) % m == 1) return x;\n// };\n\nexport const getCode = (letter) => {\n    let code = letter.toLowerCase().charCodeAt(0) - 97;\n\n    if (code < 0 || code > 25) {\n        return NaN;\n    }\n\n    return code;\n};\nexport const getLetter = (code) => String.fromCharCode(mod(code, 26) + 97);\n\nexport function dec2bin(dec) {\n    return (dec >>> 0).toString(2);\n}\n\nexport function isPrime(num) {\n    for (var i = 2; i < num; i++) if (num % i === 0) return false;\n    return num > 1;\n}\n\nwindow.mod = mod;\nwindow.modInverse = modInverse;\nwindow.getCode = getCode;\nwindow.getLetter = getLetter;\nwindow.dec2bin = dec2bin;\nwindow.isPrime = isPrime;\n"],"sourceRoot":""}