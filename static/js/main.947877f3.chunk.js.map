{"version":3,"sources":["utils/useLocalStorage.js","utils/numHelpers.js","utils/KryptoTable.jsx","utils/WordAndSolution.jsx","utils/line-for-letter/LineForLetter.jsx","cezar/SolutionPerChar.jsx","cezar/Cezar.jsx","vigener/SolutionPerChar.jsx","vigener/Vigener.jsx","afiniczny/SolutionPerChar.jsx","afiniczny/AfinicznyKluczLiczenie.jsx","afiniczny/Afiniczny.jsx","hill/SolutionPerChar.jsx","hill/Matrix.jsx","hill/useMatrixState.js","hill/hillCipher.js","hill/Hill.jsx","diffie-hellman/DisplayFormula.jsx","diffie-hellman/useNumberInput.js","utils/fast-power-table/getFastPowerMod.js","utils/fast-power-table/BinaryExplanator.jsx","utils/fast-power-table/FastPowerTable.jsx","diffie-hellman/DiffieHellman.jsx","odwrotnosc/OdwrotnoscTable.jsx","odwrotnosc/Odwrotnosc.jsx","potega-mod/PotegaMod.jsx","rsa/KluczeDisplay.jsx","rsa/RSAKlucze.jsx","rsa/RSASzyfrowanie.jsx","rsa/RSADeszyfrowanie.jsx","rsa/RSAPodpis.jsx","rsa/RSAPodpisWeryfikacja.jsx","elgamal/KluczeDisplay.jsx","elgamal/ElGamal.jsx","mod/Mod.jsx","elgamal/ElGamalSzyfrowanie.jsx","elgamal/ElGamalDeszyfrowanie.jsx","elgamal/ElGamalPodpis.jsx","elgamal/ElGamalPodpisWeryfikacja.jsx","cheat-sheet/CheatSheet.jsx","componentList.js","nav/PersistentDrawer.jsx","nav/NavigationBar.jsx","App.jsx","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","mod","n","m","modInverse","a","x","getCode","letter","code","toLowerCase","charCodeAt","NaN","getLetter","String","fromCharCode","dec2bin","dec","toString","isPrime","num","i","useStyles","makeStyles","theme","root","maxWidth","KryptoTable","startStr","endStr","middleNumbersArr","isEncryption","useTheme","isPhone","useMediaQuery","breakpoints","down","classes","startRow","TableRow","TableCell","component","scope","split","map","v","align","startNumbers","endNumbers","endRow","middleRow","TableContainer","props","Paper","variant","Table","TableBody","flexDirection","arrow","transform","WordAndSolution","boxCenterProps","display","justifyContent","alignItems","Card","Box","p","className","flex","Typography","LineForLetter","resultLetter","children","fontSize","SolutionPerChar","keyValue","isEncr","letterCode","letterAndCode","afterMod","Cezar","word","setWord","setKey","isEncrypt","setIsEncrypt","result","crypted","newKey","parseInt","c","cezarEncrypt","my","elevation","Grid","container","xs","TextField","label","onChange","event","target","FormControl","InputLabel","Select","MenuItem","type","Number","keyCode","letterAndKey","Vigener","length","k","vigenerEncrypt","middleTableRow","useMemo","arr","forEach","push","calculationJsx","b","invertedA","AfinicznyKluczLiczenie","results","getStepsForInverseKey","step","Afiniczny","keys","setKeys","replace","undefined","isEncode","affine","e","placeholder","tdCss","css","centeredInputCss","matrixContainerCss","Matrix","rows","changeValue","helperText","handleChangeField","row","column","onlyNumbers","useInput","mb","mt","alignContent","justifyItems","position","field","j","size","FormHelperText","defaultMatrix","Array","fill","useMatrixState","defaultMatrixArr","_defaultMatrix","setRows","setValue","rowNum","columnNum","resize","newWidth","newWidthNumber","clamp","require","modMatrix","matrix","newMatrix","data","getInvertedMatrix","keyMatrix","detModuloed","determinant","inverse","adjugate","scale","willKeyWork","doubleInvertedKey","matrixFromString","matrixWidth","matrixHeight","Math","ceil","width","height","subArray","getZeroesMatrix","letters","floor","col","getArrayFromMatrix","from","methods","multiplySignCss","equalsSignCss","Hill","method","setMethod","isDecryptWithInverted","isDecryptWithoutInverted","isAnyDecrypt","wordMatrix","isKeyMatrixOk","numRows","numColumns","multiply","invertedKey","resultMatrixBeforeMod","resultMatrix","hillEncrypt","join","matrixArrayToString","showResultAfterMod","setShowResultAfterMod","invertedKeyMatrix","gutterBottom","id","Slider","getAriaValueText","text","aria-labelledby","valueLabelDisplay","marks","min","max","style","FormControlLabel","control","Switch","checked","onClick","color","DisplayFormula","number","power","modulo","textAlign","useNumberInput","val","setVal","numberValue","isNaN","getFastPowerMod","reversedBinaryArray","reverse","steps","t","helperTextA","helperTextX","prevT","prevA","prevX","BinaryExplanator","binary","answerCss","calculationNumbersCss","TableCellHoverable","withStyles","backgroundColor","TableRowColored","palette","action","hover","TableRowHeader","primary","light","contrastText","FastPowerTable","stepsObj","pow","hoveringXRow","setHoveringXRow","onStartHover","TableHead","isLast","shouldBeHighlighted","xCss","aCss","Tooltip","title","onMouseEnter","onMouseLeave","DiffieHellman","setP","g","setG","setA","setB","pIsPrime","solutionPowA","solutionPowB","solutionPowAMaster","solutionPowBMaster","pb","cellCss","noSelect","OdwrotnoscTable","given_a","given_b","r","u","prevRow","uprim","vprim","q","getValues","values","inverted","shift","el","index","py","Odwrotnosc","setN","PotegaMod","setPow","setModulo","justify","sm","md","KluczeDisplay","d","RSAKlucze","setQ","setE","phi","RSASzyfrowanie","message","setMessage","setD","solutionPow","RSADeszyfrowanie","y","setY","RSAPodpis","setX","RSAPodpisWeryfikacja","s","setS","beta","ElGamal","setT","Mod","setNum","ElGamalSzyfrowanie","alpha","setAlpha","setR","solutionPowY1","solutionPowY2","y1","y2","disabled","ElGamalDeszyfrowanie","setY1","setY2","solutionPowX","pt","ElGamalPodpis","h","setH","ElGamalPodpisWeryfikacja","setU","solutionPowF","solutionPowLeft","solutionPowRight","f","spacing","CheatSheet","_","componentList","categoryName","name","drawer","flexShrink","zIndex","drawerPaper","drawerHeader","padding","mixins","toolbar","PersistentDrawer","isOpen","onClose","onMethodSelect","selectedMethod","ClickAwayListener","onClickAway","params","Drawer","anchor","open","paper","IconButton","category","Fragment","List","ListItem","button","onMethodClick","selected","ListItemText","Divider","href","ListItemIcon","secondary","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","NavigationBar","drawerOpen","openDrawer","AppBar","clsx","Toolbar","aria-label","edge","noWrap","content","flexGrow","paddingTop","contentShift","App","indexes","setIndexes","setDrawerOpen","selectedCategory","methodVariant","stopPropagation","categoryIndex","componentIndex","Container","Breadcrumbs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.947877f3.chunk.js","sourcesContent":["// Hook\r\nimport { useState } from 'react';\r\nfunction useLocalStorage(key, initialValue) {\r\n\t// State to store our value\r\n\t// Pass initial state function to useState so logic is only executed once\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\t// Get from local storage by key\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t// Parse stored json or if none return initialValue\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\t// If error also return initialValue\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\t// Return a wrapped version of useState's setter function that ...\r\n\t// ... persists the new value to localStorage.\r\n\tconst setValue = (value) => {\r\n\t\ttry {\r\n\t\t\t// Allow value to be a function so we have same API as useState\r\n\t\t\tconst valueToStore = value instanceof Function ? value(storedValue) : value;\r\n\t\t\t// Save state\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t// Save to local storage\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\t// A more advanced implementation would handle the error case\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","export function mod(n, m = 26) {\r\n\treturn ((n % m) + m) % m;\r\n}\r\n\r\n// odwrotnosc modularna\r\nexport const modInverse = (a, m = 26) => {\r\n\tfor (let x = 1; x < m; x++) if (((a % m) * (x % m)) % m == 1) return x;\r\n};\r\n\r\nexport const getCode = (letter) => {\r\n\tlet code = letter.toLowerCase().charCodeAt(0) - 97;\r\n\r\n\tif (code < 0 || code > 25) {\r\n\t\treturn NaN;\r\n\t}\r\n\r\n\treturn code;\r\n};\r\nexport const getLetter = (code) => String.fromCharCode(mod(code, 26) + 97);\r\n\r\nexport function dec2bin(dec) {\r\n\treturn (dec >>> 0).toString(2);\r\n}\r\n\r\nexport function isPrime(num) {\r\n\tfor (var i = 2; i < num; i++) if (num % i === 0) return false;\r\n\treturn num > 1;\r\n}\r\n\r\nwindow.mod = mod;\r\nwindow.modInverse = modInverse;\r\nwindow.getCode = getCode;\r\nwindow.getLetter = getLetter;\r\nwindow.dec2bin = dec2bin;\r\nwindow.isPrime = isPrime;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100vw - 66px)',\r\n\t},\r\n}));\r\n\r\nfunction KryptoTable({ startStr = '', endStr = '', middleNumbersArr, isEncryption = true }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst startRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'PT' : 'CT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst startNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'x' : 'y'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'y' : 'x'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'CT' : 'PT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst middleRow = middleNumbersArr && (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\tk\r\n\t\t\t</TableCell>\r\n\t\t\t{middleNumbersArr.map((v, i) => (\r\n\t\t\t\t<TableCell key={v + '-' + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TableContainer\r\n\t\t\tclasses={classes}\r\n\t\t\tcomponent={(props) => <Paper variant='outlined' {...props} />}\r\n\t\t>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{startRow}\r\n\t\t\t\t\t{startNumbers}\r\n\t\t\t\t\t{middleRow}\r\n\t\t\t\t\t{endNumbers}\r\n\t\t\t\t\t{endRow}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nexport default KryptoTable;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tCard,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexDirection: (isPhone) => (isPhone ? 'column' : 'row'),\r\n\t},\r\n\tarrow: {\r\n\t\ttransform: (isPhone) => (isPhone ? 'rotate(90deg)' : 'inherit'),\r\n\t},\r\n}));\r\n\r\nfunction WordAndSolution({ startStr = '', endStr = '' }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst boxCenterProps = { display: 'flex', justifyContent: 'space-around', alignItems: 'center' };\r\n\treturn (\r\n\t\t<Card variant='outlined'>\r\n\t\t\t<Box p={2} {...boxCenterProps} className={classes.root}>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{startStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={1} {...boxCenterProps} className={classes.arrow}>\r\n\t\t\t\t\t<ArrowForwardIcon />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{endStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default WordAndSolution;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction LineForLetter({ letter, resultLetter, children }) {\r\n\treturn (\r\n\t\t<Box display='flex' alignItems='center'>\r\n\t\t\t<Box m={2}>{letter}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{children}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{resultLetter}</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default LineForLetter;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Cezar() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState(0);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst cezarEncrypt = () => {\r\n\t\tlet crypted = '';\r\n\t\tlet newKey = parseInt(key * (isEncrypt ? 1 : -1)) || 0;\r\n\t\tfor (let c of word) {\r\n\t\t\tcrypted += getLetter(getCode(c) + newKey);\r\n\t\t}\r\n\t\treturn crypted;\r\n\t};\r\n\r\n\tlet result = cezarEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(Number(event.target.value));\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\treturn (\r\n\t\t<Box my={4}>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<TextField label='key' type='number' onChange={changeKey} value={key} />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default Cezar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst keyCode = getCode(keyValue);\r\n\r\n\tconst letterAndKey = isEncr ? letterCode + keyCode : letterCode - keyCode;\r\n\r\n\tconst afterMod = mod(letterAndKey, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>({keyValue})</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {keyCode}) mod 26 ={' '}\r\n\t\t\t{letterAndKey} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState, useMemo } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Vigener() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst vigenerEncrypt = () => {\r\n\t\tconst length = key?.length || 0;\r\n\t\tif (length) {\r\n\t\t\tlet crypted = '';\r\n\t\t\tfor (let i in word) {\r\n\t\t\t\tconst c = word[i];\r\n\t\t\t\tconst k = key[i % length];\r\n\t\t\t\tcrypted += getLetter(mod(getCode(c) + getCode(k) * (isEncrypt ? 1 : -1)));\r\n\t\t\t}\r\n\t\t\treturn crypted;\r\n\t\t} else return word;\r\n\t};\r\n\r\n\tlet result = vigenerEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\tconst middleTableRow = useMemo(() => {\r\n\t\tif (word && key) {\r\n\t\t\tconst arr = [];\r\n\t\t\tword.split('').forEach((v, i) => arr.push(key[i % key.length]));\r\n\t\t\treturn arr.map((v) => getCode(v));\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, [word, key]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='key' type='text' onChange={changeKey} value={key} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable\r\n\t\t\t\t\t\t\tstartStr={word}\r\n\t\t\t\t\t\t\tendStr={result}\r\n\t\t\t\t\t\t\tmiddleNumbersArr={middleTableRow}\r\n\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{key && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t\t<SolutionPerChar\r\n\t\t\t\t\t\t\t\t\tkey={c + i}\r\n\t\t\t\t\t\t\t\t\tletter={c}\r\n\t\t\t\t\t\t\t\t\tkeyValue={key[i % key.length]}\r\n\t\t\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Vigener;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, a, b, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\r\n\tlet code;\r\n\tlet invertedA = NaN;\r\n\tlet calculationJsx;\r\n\tif (!isEncr) {\r\n\t\tinvertedA = modInverse(a, 26);\r\n\t\tcode = invertedA * (letterCode - b);\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{invertedA} * ({letterCode} - {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tcode = letterCode * a + b;\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{a} * ({letterCode} + {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tconst afterMod = mod(code, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>\r\n\t\t\t\t({a},{b})\r\n\t\t\t</sub>\r\n\t\t\t({letterCode}) = ({calculationJsx}) mod 26 = {code} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nconst getStepsForInverseKey = (num, n = 26) => {\r\n\tconst results = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tresults.push(`${num} * ${i} mod ${n} = ${mod(num * i, n)}`);\r\n\t\tif ((num * i) % n === 1) {\r\n\t\t\tresults.push('Found inverted key = ' + i);\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nfunction AfinicznyKluczLiczenie({ a, n }) {\r\n\tconst steps = getStepsForInverseKey(a, n);\r\n\treturn steps.map((step) => (\r\n\t\t<Box key={step}>\r\n\t\t\t<Typography>{step}</Typography>\r\n\t\t</Box>\r\n\t));\r\n}\r\n\r\nexport default AfinicznyKluczLiczenie;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport AfinicznyKluczLiczenie from './AfinicznyKluczLiczenie';\r\n\r\nconst affine = (word, [a, b], isEncode = true) => {\r\n\tlet result = '';\r\n\tlet code = null;\r\n\r\n\tfor (let c of word) {\r\n\t\tif (!isEncode) {\r\n\t\t\tconst newA = modInverse(a, 26);\r\n\t\t\tcode = newA * (getCode(c) - b);\r\n\t\t} else code = getCode(c) * a + b;\r\n\r\n\t\tresult += getLetter(mod(code, 26));\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nfunction Afiniczny() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [keys, setKeys] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst [a = 0, b = 0] = keys.replace(/\\s/, '').split(',').map(Number);\r\n\r\n\tconst result = word && a !== undefined && b !== undefined ? affine(word, [a, b], isEncrypt) : '';\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeKey = (event) => setKeys(event.target.value);\r\n\tconst changeIsEncryption = (e, v) => setIsEncrypt(e.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='keys'\r\n\t\t\t\t\t\t\tplaceholder={'3,7'}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tonChange={changeKey}\r\n\t\t\t\t\t\t\tvalue={keys}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Klucz odwrócony:</Typography>\r\n\t\t\t\t\t\t\t<AfinicznyKluczLiczenie a={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} a={a} b={b} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Afiniczny;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tuseMediaQuery,\r\n\tuseTheme,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport { css } from '@emotion/css';\r\n\r\nconst tdCss = css`\r\n\theight: 42px;\r\n\twidth: 4rem;\r\n`;\r\n\r\nconst centeredInputCss = css`\r\n\t* {\r\n\t\ttext-align: center; !important\r\n\t}\r\n`;\r\n\r\nconst matrixContainerCss = (isPhone) => css`\r\n\t&::before {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\ttop: ${isPhone ? 0.5 : 1}rem;\r\n\t\tleft: ${isPhone ? 0.1 : 1}rem;\r\n\t\theight: calc(100% - ${isPhone ? 1 : 2}rem);\r\n\t\twidth: 0.8rem;\r\n\t\tborder: 1px solid black;\r\n\t\tborder-right: none;\r\n\t}\r\n\t&::after {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\ttop: ${isPhone ? 0.5 : 1}rem;\r\n\t\tright: ${isPhone ? 0.1 : 1}rem;\r\n\t\theight: calc(100% - ${isPhone ? 1 : 2}rem);\r\n\t\twidth: 0.8rem;\r\n\t\tborder: 1px solid black;\r\n\t\tborder-left: none;\r\n\t}\r\n`;\r\n\r\nfunction Matrix({ rows, changeValue, error, helperText }) {\r\n\tconst handleChangeField = (row, column) => (e) => {\r\n\t\tif (changeValue) {\r\n\t\t\tconst onlyNumbers = Number(e.target.value.replace(/\\D/g, ''));\r\n\t\t\tchangeValue(onlyNumbers, row, column);\r\n\t\t}\r\n\t};\r\n\r\n\tconst useInput = !!changeValue;\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box\r\n\t\t\t\tmb={3}\r\n\t\t\t\tp={isPhone ? 0.5 : 2}\r\n\t\t\t\tmt={0}\r\n\t\t\t\tflexDirection='column'\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\talignContent='center'\r\n\t\t\t\tjustifyItems='center'\r\n\t\t\t\tjustifyContent='center'\r\n\t\t\t\tposition='relative'\r\n\t\t\t>\r\n\t\t\t\t<table className={matrixContainerCss(isPhone)}>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{rows?.map((row, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t{row.map((field, j) => (\r\n\t\t\t\t\t\t\t\t\t<td className={tdCss} key={j}>\r\n\t\t\t\t\t\t\t\t\t\t{useInput ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={field}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={centeredInputCss}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeField(i, j)}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography align='center'>{field}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<FormHelperText error={!!helperText}>{helperText}</FormHelperText>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Matrix;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nconst defaultMatrix = (size) => Array(size).fill(Array(size).fill(0));\r\n\r\nconst useMatrixState = (defaultMatrixArr) => {\r\n\tconst _defaultMatrix = defaultMatrixArr || defaultMatrix(3);\r\n\tconst [rows, setRows] = useState(_defaultMatrix);\r\n\tconst size = rows.length;\r\n\r\n\tconst setValue = (value, rowNum, columnNum) =>\r\n\t\tsetRows(\r\n\t\t\trows.map((row, i) => row.map((field, j) => (i === rowNum && columnNum === j ? value : field)))\r\n\t\t);\r\n\r\n\tconst resize = (newWidth) => {\r\n\t\t// W teorii 1 powinno działać, ale dekrypcja buguje się jak jest 1x1 klucz\r\n\t\tconst newWidthNumber = clamp(Number(newWidth), 2, 14);\r\n\t\tsetRows(defaultMatrix(newWidthNumber));\r\n\t};\r\n\r\n\treturn { rows, setValue, size, resize };\r\n};\r\n\r\nexport default useMatrixState;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\nvar Matrix = require('node-matrices');\r\n\r\nexport const getZeroesMatrix = (width, height) => {\r\n\tconst arr = [];\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tlet subArray = [];\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tsubArray.push(0);\r\n\t\t}\r\n\t\tarr.push(subArray);\r\n\t}\r\n\treturn new Matrix(arr);\r\n};\r\n\r\nexport const modMatrix = (matrix) => {\r\n\tconst newMatrix = new Matrix(matrix.data);\r\n\tfor (let i = 0; i < matrix.data.length; i++) {\r\n\t\tfor (let j = 0; j < matrix.data[i].length; j++) {\r\n\t\t\tmatrix.data[i][j] = mod(matrix.data[i][j], 26);\r\n\t\t}\r\n\t}\r\n\treturn newMatrix;\r\n};\r\n\r\n// This wasnt enough to determine if key is ok\r\nexport const isKeyMatrixInvertable = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\treturn !!inverse;\r\n};\r\n\r\nexport const getInvertedMatrix = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\tconst adjugate = keyMatrix.adjugate();\r\n\r\n\tfor (let i = 0; i < adjugate.data.length; i++) {\r\n\t\tfor (let j = 0; j < adjugate.data[i].length; j++) {\r\n\t\t\tif (adjugate.data[i][j] < 0) {\r\n\t\t\t\tadjugate.data[i][j] += 26;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst result = modMatrix(adjugate.scale(inverse));\r\n\r\n\treturn result;\r\n};\r\n\r\nfunction arraysEqual(a, b) {\r\n\treturn JSON.stringify(a) === JSON.stringify(b);\r\n}\r\n\r\nexport const willKeyWork = (keyMatrix) => {\r\n\tconst doubleInvertedKey = getInvertedMatrix(getInvertedMatrix(keyMatrix));\r\n\treturn arraysEqual(keyMatrix.data, doubleInvertedKey.data);\r\n};\r\n","import { useState, useMemo } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tSwitch,\r\n\tFormControlLabel,\r\n} from '@material-ui/core';\r\nimport { css } from '@emotion/css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport MatrixInput from './Matrix';\r\nimport useMatrixState from 'hill/useMatrixState';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\r\n\r\nimport { getInvertedMatrix, modMatrix, getZeroesMatrix, willKeyWork } from './hillCipher';\r\nvar Matrix = require('node-matrices');\r\n\r\nconst hillEncrypt = (wordMatrix, keyMatrix, isEncrypt) => {\r\n\tif (\r\n\t\t!wordMatrix.numRows() ||\r\n\t\t!wordMatrix.numColumns() ||\r\n\t\t!keyMatrix.numRows() ||\r\n\t\t!keyMatrix.numColumns()\r\n\t) {\r\n\t\treturn wordMatrix;\r\n\t}\r\n\r\n\tlet result;\r\n\tif (isEncrypt) {\r\n\t\tresult = wordMatrix.multiply(keyMatrix);\r\n\t} else {\r\n\t\tconst invertedKey = getInvertedMatrix(keyMatrix);\r\n\t\tresult = wordMatrix.multiply(invertedKey);\r\n\t}\r\n\treturn {\r\n\t\tresultMatrixBeforeMod: JSON.parse(JSON.stringify(result)),\r\n\t\tresultMatrix: modMatrix(result, 26),\r\n\t};\r\n};\r\n\r\nconst matrixFromString = (word, matrixWidth) => {\r\n\tconst matrixHeight = Math.ceil(word.length / matrixWidth);\r\n\r\n\tlet newMatrix = getZeroesMatrix(matrixWidth, matrixHeight);\r\n\tconst letters = word.split('');\r\n\tif (letters) {\r\n\t\tletters.forEach((c, i) => {\r\n\t\t\tconst row = Math.floor(i / matrixWidth);\r\n\t\t\tconst col = i % matrixWidth;\r\n\t\t\tnewMatrix = newMatrix.replace(row, col, getCode(c));\r\n\t\t});\r\n\t\treturn newMatrix;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nconst getArrayFromMatrix = (matrix) => matrix?.data.map((row) => Array.from(row));\r\n\r\nconst matrixArrayToString = (rows) =>\r\n\trows?.map((row) => row.map((v) => getLetter(v)).join('')).join('');\r\n\r\nconst methods = {\r\n\tencrypt: 'encrypt',\r\n\tdecryptWithInverted: 'decrypt-with-inverted',\r\n\tdecrypt: 'decrypt',\r\n};\r\n\r\nconst multiplySignCss = css`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tright: 0;\r\n\ttransform: translate(50%, -50%) scale(0.5);\r\n`;\r\n\r\nconst equalsSignCss = css`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tright: 0;\r\n\ttransform: translate(50%, -50%) scale(2.5);\r\n`;\r\n\r\nfunction Hill() {\r\n\tconst [word, setWord] = useState('telewizor');\r\n\tconst { rows, setValue, size, resize } = useMatrixState([\r\n\t\t[9, 3, 4],\r\n\t\t[7, 2, 1],\r\n\t\t[6, 5, 8],\r\n\t\t// [25, 24, 17],\r\n\t\t// [14, 24, 3],\r\n\t\t// [5, 19, 5],\r\n\t]);\r\n\tconst [method, setMethod] = useState(methods.encrypt);\r\n\r\n\t// Generalnie isEncrypt wskazuje ze po prostu mnozymy dwie macieze\r\n\tconst isDecryptWithInverted = method === methods.decryptWithInverted;\r\n\tconst isDecryptWithoutInverted = method === methods.decrypt;\r\n\tconst isAnyDecrypt = method !== methods.encrypt;\r\n\tconst isEncrypt = method === methods.encrypt || isDecryptWithInverted;\r\n\r\n\tconst wordMatrix = useMemo(() => matrixFromString(word, size), [word, size]);\r\n\tconst keyMatrix = useMemo(() => new Matrix(rows), [rows]);\r\n\r\n\tconst isKeyMatrixOk = willKeyWork(keyMatrix);\r\n\r\n\tconst { resultMatrix, resultMatrixBeforeMod } = useMemo(\r\n\t\t() => hillEncrypt(wordMatrix, keyMatrix, isEncrypt),\r\n\t\t[wordMatrix, keyMatrix, isEncrypt]\r\n\t);\r\n\tconst result = matrixArrayToString(getArrayFromMatrix(resultMatrix));\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeMethod = (event) => setMethod(event.target.value);\r\n\tconst handleResize = (e, v) => resize(v);\r\n\r\n\tconst [showResultAfterMod, setShowResultAfterMod] = useState(true);\r\n\tconst toggleShowResultAfterMod = () => setShowResultAfterMod((v) => !v);\r\n\r\n\tconst invertedKeyMatrix = isDecryptWithoutInverted && getInvertedMatrix(keyMatrix);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tEnkrypcja Hilla polega na pomnożeniu macierzy słowa przez macierz klucza.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tDekrypcja Hilla polega na pomnożeniu macierzy słowa przez macierz <b>odwróconego</b>{' '}\r\n\t\t\t\t\t\t\tklucza.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={method} onChange={changeMethod}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={'encrypt'}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={'decrypt-with-inverted'}>\r\n\t\t\t\t\t\t\t\t\t\t\tDecrypt (I have inverted key)\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={'decrypt'}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography id='input-slider' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tMatrix size\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\tvalue={size}\r\n\t\t\t\t\t\t\t\t\tonChange={handleResize}\r\n\t\t\t\t\t\t\t\t\tgetAriaValueText={(text) => text}\r\n\t\t\t\t\t\t\t\t\taria-labelledby='discrete-slider'\r\n\t\t\t\t\t\t\t\t\tvalueLabelDisplay='auto'\r\n\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\tmarks\r\n\t\t\t\t\t\t\t\t\tmin={2}\r\n\t\t\t\t\t\t\t\t\tmax={7}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>{isAnyDecrypt ? 'Encrypted word' : 'Word'}:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(wordMatrix)} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>\r\n\t\t\t\t\t\t\t\t\t{isDecryptWithInverted ? 'Inverted key:' : 'Key:'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\t\t\t\tchangeValue={setValue}\r\n\t\t\t\t\t\t\t\t\terror={!isKeyMatrixOk}\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t!isKeyMatrixOk ? 'Inverting this matrix twice returns different matrix' : ''\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{isDecryptWithoutInverted && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4'>Inverted Key:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(invertedKeyMatrix)} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t<Typography variant='h3'>Calculation:</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={4} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1'>{isAnyDecrypt ? 'Encrypted word' : 'Word'}:</Typography>\r\n\t\t\t\t\t\t\t\t<div style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(wordMatrix)} />{' '}\r\n\t\t\t\t\t\t\t\t\t<FiberManualRecordIcon className={multiplySignCss} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1'>{isAnyDecrypt ? 'Inverted key' : 'Key'}</Typography>\r\n\t\t\t\t\t\t\t\t<div style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\t\trows={\r\n\t\t\t\t\t\t\t\t\t\t\tisDecryptWithoutInverted\r\n\t\t\t\t\t\t\t\t\t\t\t\t? getArrayFromMatrix(invertedKeyMatrix)\r\n\t\t\t\t\t\t\t\t\t\t\t\t: getArrayFromMatrix(keyMatrix)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className={equalsSignCss}>=</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1'>{isAnyDecrypt ? 'Word' : 'Encrypted Word'}:</Typography>\r\n\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={getArrayFromMatrix(\r\n\t\t\t\t\t\t\t\t\t\tshowResultAfterMod ? resultMatrix : resultMatrixBeforeMod\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={showResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleShowResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel='After modulo'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{/* <Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))} \r\n\t\t\t\t\t</Box> */}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Hill;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nfunction DisplayFormula({ number, power, modulo, variant = 'body1' }) {\r\n\treturn (\r\n\t\t<Box textAlign='center' display='inline'>\r\n\t\t\t<Typography variant={variant} component='span'>\r\n\t\t\t\t{number} <sup>{power}</sup> mod {modulo}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DisplayFormula;\r\n","import { useState } from 'react';\r\n\r\nconst useNumberInput = (initialValue) => {\r\n\tconst [val, setVal] = useState(initialValue || 0);\r\n\r\n\tconst setValueWithEvent = (e) => {\r\n\t\tconst numberValue = Number(e.target.value);\r\n\t\tif (isNaN(numberValue)) {\r\n\t\t\t// do nothing\r\n\t\t} else {\r\n\t\t\tsetVal(numberValue);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [val, setValueWithEvent];\r\n};\r\n\r\nexport default useNumberInput;\r\n","import { mod } from 'utils/numHelpers';\r\nimport { dec2bin } from 'utils/numHelpers';\r\n\r\n/**\r\n *\r\n * @param {number} number - Liczba podnoszona do potęgi, ta po lewej\r\n * @param {number} power - potęga\r\n * @param {number} modulo - Modulo\r\n */\r\nconst getFastPowerMod = (number, power, modulo) => {\r\n\t// np 011011101\r\n\tconst binaryString = dec2bin(power);\r\n\tconst reversedBinaryArray = binaryString.split('').reverse();\r\n\r\n\tif (!reversedBinaryArray.length) {\r\n\t\treturn 'rip, nie chce mi sie pisac error handlingu';\r\n\t}\r\n\r\n\tconst steps = [];\r\n\tsteps.push({\r\n\t\ti: 0,\r\n\t\tx: 1,\r\n\t\ta: number,\r\n\t\tt: Number(reversedBinaryArray[0]),\r\n\t\thelperTextA: 'initial value is g = ' + number,\r\n\t\thelperTextX: 'initial value is always 1 ',\r\n\t});\r\n\r\n\tfor (let i = 1; i < reversedBinaryArray.length + 1; i++) {\r\n\t\tconst t = Number(reversedBinaryArray[i]);\r\n\t\tconst prevT = steps[i - 1].t;\r\n\t\tconst prevA = steps[i - 1].a;\r\n\t\tconst prevX = steps[i - 1].x;\r\n\r\n\t\tlet helperTextX = '';\r\n\r\n\t\tlet a = mod(prevA * prevA, modulo);\r\n\t\tif (i === reversedBinaryArray.length) {\r\n\t\t\ta = '';\r\n\t\t}\r\n\t\tlet helperTextA = `${prevA} * ${prevA} mod ${modulo} =  ${a}`;\r\n\r\n\t\tlet x;\r\n\t\tif (prevT) {\r\n\t\t\tx = mod(prevX * prevA, modulo);\r\n\t\t\thelperTextX = `${prevX} * ${prevA} mod ${modulo} =  ${x}`;\r\n\t\t} else {\r\n\t\t\tx = prevX;\r\n\t\t\thelperTextX = `unchanged because previous t is 0 = ${x}`;\r\n\t\t}\r\n\t\tsteps.push({ i, x, a, t, helperTextA, helperTextX });\r\n\t}\r\n\r\n\tconst result = steps[steps.length - 1].x;\r\n\treturn {\r\n\t\tresult,\r\n\t\tsteps,\r\n\t};\r\n};\r\n\r\nexport default getFastPowerMod;\r\n","import { dec2bin } from 'utils/numHelpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BinaryExplanator({ num }) {\r\n\tconst binary = dec2bin(num);\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t{num} to binary is {binary}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>in reverse it's [{binary.split('').reverse().join(',')}] = t</Box>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default BinaryExplanator;\r\n","import { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BinaryExplanator from 'utils/fast-power-table/BinaryExplanator';\r\n\r\nconst answerCss = css`\r\n\tbackground: #97ffa7;\r\n\ttext-decoration: underline;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst calculationNumbersCss = css`\r\n\tbackground: #ffd0ce;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst TableCellHoverable = withStyles({\r\n\troot: {\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'rgb(0 ,0, 0, 0.1)',\r\n\t\t},\r\n\t},\r\n})(TableCell);\r\n\r\nconst TableRowColored = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst TableRowHeader = withStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t'& th': {\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nfunction FastPowerTable({ stepsObj, pow }) {\r\n\tconst [hoveringXRow, setHoveringXRow] = useState(null);\r\n\tconst onStartHover = (i) => () => {\r\n\t\tsetHoveringXRow(i);\r\n\t};\r\n\tconst onEndHover = (i) => () => {\r\n\t\tsetHoveringXRow(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BinaryExplanator num={pow} />\r\n\t\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRowHeader>\r\n\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tx<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tt<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRowHeader>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{stepsObj.steps.map(({ i, x, a, t, helperTextA, helperTextX }) => {\r\n\t\t\t\t\t\t\tconst isLast = i === stepsObj.steps.length - 1;\r\n\r\n\t\t\t\t\t\t\tconst shouldBeHighlighted = hoveringXRow === i + 1;\r\n\t\t\t\t\t\t\tconst xCss = isLast ? answerCss : shouldBeHighlighted ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\tconst aCss = shouldBeHighlighted && !!t ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRowColored key={i}>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{i}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextX}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCellHoverable\r\n\t\t\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={xCss}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={onStartHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={onEndHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{x}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t{!isLast && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextA}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCellHoverable align='center' className={aCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{a}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{!isLast && <TableCell align='center'>{t}</TableCell>}\r\n\t\t\t\t\t\t\t\t</TableRowColored>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default FastPowerTable;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DisplayFormula from './DisplayFormula';\r\nimport useNumberInput from './useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport BinaryExplanator from '../utils/fast-power-table/BinaryExplanator';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nfunction DiffieHellman() {\r\n\tconst [p, setP] = useNumberInput(1019);\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [a, setA] = useNumberInput(638);\r\n\tconst [b, setB] = useNumberInput(719);\r\n\r\n\tconst pIsPrime = useMemo(() => isPrime(p), [p]);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, a, p), [p, g, a]);\r\n\tconst solutionPowB = useMemo(() => getFastPowerMod(g, b, p), [p, g, b]);\r\n\r\n\tconst solutionPowAMaster = useMemo(() => getFastPowerMod(solutionPowA.result, b, p), [\r\n\t\tp,\r\n\t\tsolutionPowA.result,\r\n\t\tb,\r\n\t]);\r\n\tconst solutionPowBMaster = useMemo(() => getFastPowerMod(solutionPowB.result, a, p), [\r\n\t\tp,\r\n\t\tsolutionPowB.result,\r\n\t\tb,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<Box my={4}>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' helperText='public' />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText={pIsPrime ? 'public' : 'p has to be prime'}\r\n\t\t\t\t\t\t\t\terror={!pIsPrime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='a'\r\n\t\t\t\t\t\t\t\tonChange={setA}\r\n\t\t\t\t\t\t\t\tvalue={a}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText='private for person 1'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='b'\r\n\t\t\t\t\t\t\t\tonChange={setB}\r\n\t\t\t\t\t\t\t\tvalue={b}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText='private for person 2'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h3'>Calculating Public keys:</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tPerson 1 generates random private key a, Person 2 generates random private key b.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tThen they calculate public keys they can give eachother in a NOT secure way.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={a} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={b} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Fast modulo power method (!):</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowB} pow={b} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h3'>Calculating Master (private) key:</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tAfter Person 1 received Person 2 Public key, and vice versa, they can both calculate the\r\n\t\t\t\t\t\tsame private key.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tThen they can use this key to encrypt their communication, without ever sending this\r\n\t\t\t\t\t\tprivate key.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={solutionPowB.result} modulo={p} power={a} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={solutionPowA.result} modulo={p} power={b} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowBMaster} pow={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowAMaster} pow={b} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DiffieHellman;\r\n","import { useState, useMemo } from 'react';\r\nimport { Paper, Box, Typography, useMediaQuery } from '@material-ui/core';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport { mod } from '../utils/numHelpers';\r\nimport { useTheme, makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst cellCss = css`\r\n\tbackground: #f0e98b;\r\n`;\r\n\r\nconst noSelect = css`\r\n\tuser-select: none;\r\n`;\r\n\r\nconst TableRowHeader = withStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t'& th': {\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst TableRowColored = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100vw - 66px)',\r\n\t},\r\n}));\r\n\r\nfunction OdwrotnoscTable({ a, b }) {\r\n\tconst getValues = (given_a, given_b) => {\r\n\t\tconst rows = [];\r\n\r\n\t\tlet i = 0;\r\n\t\tlet r, b, u, v;\r\n\t\twhile (r != 0) {\r\n\t\t\tconst prevRow = i === 0 ? null : rows[i - 1];\r\n\t\t\tconst a = prevRow ? prevRow['b'] : given_a;\r\n\t\t\tb = prevRow ? prevRow['r'] : given_b;\r\n\t\t\tu = prevRow ? prevRow['uprim'] - prevRow['q'] * prevRow['u'] : 0;\r\n\t\t\tconst uprim = prevRow ? prevRow['u'] : 1;\r\n\t\t\tv = prevRow ? prevRow['vprim'] - prevRow['q'] * prevRow['v'] : 1;\r\n\t\t\tconst vprim = prevRow ? prevRow['v'] : 0;\r\n\t\t\tconst q = Math.floor(a / b);\r\n\t\t\tr = mod(a, b);\r\n\r\n\t\t\trows.push({ u, uprim, v, vprim, a, b, q, r });\r\n\r\n\t\t\ti++;\r\n\t\t\tif (isNaN(r)) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [rows, u];\r\n\t};\r\n\r\n\tconst [values, inverted] = getValues(a, b);\r\n\tvalues.shift(); // dont ask\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\treturn (\r\n\t\tb != 0 && (\r\n\t\t\t<>\r\n\t\t\t\t<TableContainer\r\n\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\tcomponent={(props) => <Paper variant='outlined' {...props} />}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRowHeader>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tu<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tu<sub>i</sub>'\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tv<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tv<sub>i</sub>'\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tn<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tq<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tr<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRowHeader>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{values.map((el, index) => {\r\n\t\t\t\t\t\t\t\tconst { u, uprim, v, vprim, a, b, q, r } = el;\r\n\t\t\t\t\t\t\t\tconst isLast = values.length - 1 === index;\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRowColored>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{index}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{v}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{vprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' className={isLast && cellCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t{u}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{uprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{a}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{b}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{q}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{r}</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRowColored>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Box py={1}>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\ta<sup>-1</sup> = {inverted} mod {b} = {mod(inverted, b)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t<span className={noSelect}>Sprawdzenie: </span>\r\n\t\t\t\t\t\t{a} * {mod(inverted, b)} mod {b} = {mod(a * mod(inverted, b), b)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t)\r\n\t);\r\n}\r\n\r\nexport default OdwrotnoscTable;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport AfinicznyKluczLiczenie from 'afiniczny/AfinicznyKluczLiczenie';\r\nimport OdwrotnoscTable from './OdwrotnoscTable';\r\n\r\nfunction Odwrotnosc() {\r\n\tconst [a, setA] = useNumberInput(215);\r\n\tconst [n, setN] = useNumberInput(25);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Liczba' type='number' onChange={setA} value={a} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='modulo' placeholder={26} type='number' onChange={setN} value={n} />\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Odwrotność modularna:</Typography>\r\n\t\t\t\t\t\t{/* <AfinicznyKluczLiczenie a={a} n={n} /> */}\r\n\r\n\t\t\t\t\t\t<OdwrotnoscTable a={a} b={n} />\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Odwrotnosc;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction PotegaMod() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [pow, setPow] = useNumberInput(638);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, pow, modulo), [modulo, g, pow]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Potęga' onChange={setPow} value={pow} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={g} power={pow} modulo={modulo} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={pow} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default PotegaMod;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ e, d, n }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h3'>Klucze:</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (e, n) = ({e}, {n}) - Publiczne\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (d, n) = ({d}, {n}) - Prywatne\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction RSAKlucze() {\r\n\tconst [p, setP] = useNumberInput(37);\r\n\tconst [q, setQ] = useNumberInput(47);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\r\n\tconst n = p * q;\r\n\tconst phi = (p - 1) * (q - 1);\r\n\tconst d = modInverse(e, phi);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='q'\r\n\t\t\t\t\t\t\t\t\tonChange={setQ}\r\n\t\t\t\t\t\t\t\t\tvalue={q}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość druga'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana liczba całkowita od 1 do Φ'\r\n\t\t\t\t\t\t\t\t\terror={e > phi || e <= 1 || e % 1 !== 0}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tn = {p} * {q} = {n}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tphi = Φ = ({p} - 1) * ({q}- 1)= {phi}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\td = <DisplayFormula number={e} power={-1} modulo={phi} variant={'body1'} /> = {d}\r\n\t\t\t\t\t\t\t\t<OdwrotnoscTable a={e} b={phi} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAKlucze;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSASzyfrowanie() {\r\n\t//Wiadomość x\r\n\tconst [message, setMessage] = useNumberInput(20);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(message, e, n), [n, message, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość, której wartość wynosi x={message} zaszyfrowaną\r\n\t\t\t\t\t\t\t\tprzy użyciu algorytmu RSA. Oblicz wartość szyfrogramu y.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setMessage}\r\n\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Szyfrowanie:</Typography>\r\n\t\t\t\t\t\t\t\ty = c =<DisplayFormula\r\n\t\t\t\t\t\t\t\t\tnumber={'x'}\r\n\t\t\t\t\t\t\t\t\tpower={'e'}\r\n\t\t\t\t\t\t\t\t\tmodulo={'n'}\r\n\t\t\t\t\t\t\t\t\tvariant={'body1'}\r\n\t\t\t\t\t\t\t\t/> = <DisplayFormula number={message} power={e} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tSzyfrogram y = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={e} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSASzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSADeszyfrowanie() {\r\n\t//Zaszyfrowana wiadomosc x, szyfrogram y\r\n\tconst [y, setY] = useNumberInput(1327);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// y^d mod n\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(y, d, n), [n, y, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram y={y}. Obliczyć przez Alicję wartość tekstu\r\n\t\t\t\t\t\t\t\tjawnego x.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='y'\r\n\t\t\t\t\t\t\t\t\tonChange={setY}\r\n\t\t\t\t\t\t\t\t\tvalue={y}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Szyfrogram'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Deszyfrowanie:</Typography>x = wiadomość ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={'y'} power={'d'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={y} power={d} number={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tWiadomość x = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSADeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpis() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(x, d, n), [n, x, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={x}. Wygenerować przez\r\n\t\t\t\t\t\t\t\tAlicję podpis cyfrowy RSA dla tej wiadomości.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Generowanie podpisu:</Typography>\r\n\t\t\t\t\t\t\t\tpodpis s ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={'h'} power={'d'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={x} power={d} number={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tPodpis s = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpisWeryfikacja() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [s, setS] = useNumberInput(1630);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(s, e, n), [n, s, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={x}, oraz jej podpis cyfrowy\r\n\t\t\t\t\t\t\t\tRSA s={s}. Zweryfikuj przez Boba otrzymany od Alicji podpis cyfrowy.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='s'\r\n\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Podpis który weryfikujemy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\th = <DisplayFormula\r\n\t\t\t\t\t\t\t\t\tnumber={'s'}\r\n\t\t\t\t\t\t\t\t\tpower={'e'}\r\n\t\t\t\t\t\t\t\t\tmodulo={'n'}\r\n\t\t\t\t\t\t\t\t\tvariant={'body1'}\r\n\t\t\t\t\t\t\t\t/> = <DisplayFormula number={s} power={e} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tWynik sprawdzenia = {solutionPow.result} = {x} = h\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} pb={3} align='center'>\r\n\t\t\t\t\t\t\t\tPodpis {x === solutionPow.result ? 'jest' : 'nie jest'} poprawny, ponieważ wartość\r\n\t\t\t\t\t\t\t\tskrótu wysłana przez alicję {x === solutionPow.result ? 'jest' : 'nie jest'} taka\r\n\t\t\t\t\t\t\t\tsama jak wartość skrótu wiadomości odebranej przez boba.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpisWeryfikacja;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ p, g, beta, t }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h4'>Klucze:</Typography>\r\n\t\t\t<Typography variant='caption'>zmiana oznaczeń: α ≡ g</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (p, α, β) = ({p}, {g}, {beta}) - publiczny\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (p, t) = ({p}, {t}) - prywatny\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction ElGamal() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, t, p), [p, g, t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wygenerować klucze asymetryczne ElGamala. W tym celu przyjęła wartość{' '}\r\n\t\t\t\t\t\t\t\t<b>p={p}</b> oraz generator <b>g={g}</b>.<br />\r\n\t\t\t\t\t\t\t\tWyznacz klucze asymetryczne Alicji dla jej wartości prywatnej <b>t={t}</b>.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='g albo α'\r\n\t\t\t\t\t\t\t\t\tonChange={setG}\r\n\t\t\t\t\t\t\t\t\tvalue={g}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' helperText='p?' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={t} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<KluczeDisplay p={p} g={g} beta={solutionPowA.result} t={t} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamal;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, mod } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction Mod() {\r\n\tconst [num, setNum] = useNumberInput(2);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst result = mod(num, modulo);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Number' onChange={setNum} value={num} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={num} power={''} modulo={modulo} variant={'h4'} />\r\n\t\t\t\t\t\t<Typography variant={'h4'} display='inline'>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t= {result}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Mod;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, Divider, useMediaQuery } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction ElGamalSzyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [x, setX] = useNumberInput(20);\r\n\tconst [r, setR] = useNumberInput(320);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst solutionPowY1 = useMemo(() => getFastPowerMod(alpha, r, p), [p, alpha, r]);\r\n\tconst solutionPowY2 = useMemo(() => getFastPowerMod(beta, r, p), [p, beta, r]);\r\n\tconst y1 = solutionPowY1.result;\r\n\tconst y2 = mod(x * solutionPowY2.result, p);\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość której wartość liczbowa wynosi x={x}.\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tOblicz wartość tekstu zaszyfrowanego y, wiedząc, że do zaszyfrowania wybrany\r\n\t\t\t\t\t\t\t\t\tzostał randomizer r={r}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Randomizer'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant={isPhone ? 'body1' : 'h4'} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tC = (y<sub>1</sub>, y<sub>2</sub>) = E\r\n\t\t\t\t\t\t\t\t\t\t\t<sub>\r\n\t\t\t\t\t\t\t\t\t\t\t\tk<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t(r,x) = (α<sup>r</sup> mod p, x * β<sup>r</sup> mod p)\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={r} modulo={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY1} pow={r} />{' '}\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\ty<sub>1</sub>= {y1}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie y<sub>2</sub>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{x} * <DisplayFormula number={beta} power={r} modulo={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY2} pow={r} />\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\ty<sub>2</sub> = {x} * {solutionPowY2.result} mod {p} = {y2}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\t\t\tWynik = (y<sub>1</sub>, y<sub>2</sub>) = ({y1}, {y2})\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalSzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, Divider, useMediaQuery } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction ElGamalDeszyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [y1, setY1] = useNumberInput(130);\r\n\tconst [y2, setY2] = useNumberInput(414);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst power = p - 1 - t;\r\n\tconst error = power <= 0 || power % 1 !== 0;\r\n\tconst solutionPowX = useMemo(() => getFastPowerMod(y1, power, p), [p, y1, power]);\r\n\r\n\tconst x = mod(y2 * solutionPowX.result, p);\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram Y=({y1}, {y2})\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography> Obliczyć przez Alicję wartość tekstu jawnego x.</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\ty<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setY1}\r\n\t\t\t\t\t\t\t\t\tvalue={y1}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\ty<sub>2</sub>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setY2}\r\n\t\t\t\t\t\t\t\t\tvalue={y2}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box m={1} pt={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant={isPhone ? 'body1' : 'h4'} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tX = P = y<sub>2</sub>* y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t<sup>p - 1 - t</sup> mod p\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box m={1} pb={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant={isPhone ? 'body1' : 'h4'} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tX = P = {y2} * {y1}\r\n\t\t\t\t\t\t\t\t\t\t\t<sup>{p - 1 - t}</sup> mod {p}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={0} sm={2} md={3}></Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6} align='center'>\r\n\t\t\t\t\t\t\t<Box py={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie x (wiadomości)\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{y2} * <DisplayFormula number={y1} modulo={p} power={power} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowX} pow={power} />{' '}\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\tx = {y2} * {solutionPowX.result} mod {p}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\t\t\tX = {x}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalDeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpis() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\tconst [r, setR] = useNumberInput(515);\r\n\r\n\tconst solutionPowBeta = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\tconst beta = solutionPowBeta.result;\r\n\r\n\tconst inverted = modInverse(r, p - 1);\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, r, p), [p, alpha, r]);\r\n\r\n\tconst u = solutionPowA.result;\r\n\tconst s = mod(inverted * (h - t * u), p - 1);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\terror={p <= 1}\r\n\t\t\t\t\t\t\t\t\t\t\thelperText={p <= 1 ? 'p mniejsze od 1 nie da dobrego wyniku' : ''}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={h}. Wygenerować\r\n\t\t\t\t\t\t\t\t\t\tprzez Alicję podpis cyfrowy ElGamala dla tej wiadomości, wiedząc, że Alicja\r\n\t\t\t\t\t\t\t\t\t\tużyła randomizera r={r}.\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='h'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='randomizer'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} modulo={p} power={r} variant={'h4'} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t\t<Box py={2}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3' align='center' m={2}>\r\n\t\t\t\t\t\t\t\t\t\t\tGenerowanie podpisu:\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box py={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<OdwrotnoscTable a={r} b={p - 1} />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>u</b> = \r\n\t\t\t\t\t\t\t\t\t\t\t<DisplayFormula number={'α'} modulo={'p'} power={'r'} variant={'body1'} /> = \r\n\t\t\t\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={r} modulo={p} variant={'body1'} /> = \r\n\t\t\t\t\t\t\t\t\t\t\t{u}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>s</b> = r<sup>-1</sup> * (h - t * u) mod (p -1) = ({inverted} * ({h} - {t}{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t* {solutionPowA.result})) mod {p - 1} = {s}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t\t<Box p={2} pt={0} align='center'>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t\tPodpis: <b>(u, s)</b> ={' '}\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t({u}, {s})\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpisWeryfikacja() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [beta, setBeta] = useNumberInput(1454);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\r\n\tconst [u, setU] = useNumberInput(1310);\r\n\tconst [s, setS] = useNumberInput(1579);\r\n\r\n\tconst solutionPowF = useMemo(() => getFastPowerMod(alpha, h, p), [p, alpha, h]);\r\n\tconst solutionPowLeft = useMemo(() => getFastPowerMod(beta, u, p), [p, beta, u]);\r\n\tconst solutionPowRight = useMemo(() => getFastPowerMod(u, s, p), [p, u, s]);\r\n\r\n\tconst g = solutionPowF.result;\r\n\tconst f = mod(solutionPowLeft.result * solutionPowRight.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={h}, oraz podpis cyfrowy\r\n\t\t\t\t\t\t\t\t\t\tELGamala (u, s) = ({u}, {s}). Zweryfikuj przez Boba otrzymany od Alicji podpis\r\n\t\t\t\t\t\t\t\t\t\tcyfrowy.\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"h'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"u'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setU}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={u}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='pierwsza wartość z podpisu'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"s'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='druga wartość z podpisu'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t\t\tf = <DisplayFormula number={'α'} power={'h'} modulo={'p'} variant={'body1'} />{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t= {solutionPowF.result}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={h} modulo={p} variant={'h5'} />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowF} pow={p} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t<b>wzór: (a * b) mod c = (a mod c * b mod c) mod c</b>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tg = β<sup>u'</sup> * u'<sup>s'</sup> mod p = \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula number={'β'} power={\"u'\"} modulo={'p'} variant={'body1'} /> * \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula number={\"u'\"} power={\"s'\"} modulo={'p'} variant={'body1'} />\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Grid container justify='center' spacing={2}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowLeft} pow={p} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowRight} pow={p} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tg =  ({solutionPowLeft.result} * {solutionPowRight.result}) mod {p} = \r\n\t\t\t\t\t\t\t\t\t{solutionPowLeft.result * solutionPowRight.result} mod {p} {g == f ? '=' : '≠'}{' '}\r\n\t\t\t\t\t\t\t\t\t{f}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tf {g == f ? '=' : '≠'} g\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t{f} {g == f ? '=' : '≠'} {g}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t<b>Podpis {g == f ? 'jest' : 'nie jest'} zgodny</b>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpisWeryfikacja;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport AfinicznyKluczLiczenie from 'afiniczny/AfinicznyKluczLiczenie';\r\n\r\nfunction CheatSheet() {\r\n\tconst letters = new Array(26).fill(0).map((_, i) => {\r\n\t\tconst index = i;\r\n\t\tconst letter = getLetter(index);\r\n\t\treturn {\r\n\t\t\tindex,\r\n\t\t\tletter,\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Box my={4}>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t{letters.map(({ index, letter }) => (\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t{index} = {letter}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default CheatSheet;\r\n","import Cezar from './cezar/Cezar';\r\nimport Vigener from './vigener/Vigener';\r\nimport Afiniczny from './afiniczny/Afiniczny';\r\nimport Hill from './hill/Hill';\r\nimport DiffieHellman from './diffie-hellman/DiffieHellman';\r\nimport Odwrotnosc from './odwrotnosc/Odwrotnosc';\r\nimport PotegaMod from './potega-mod/PotegaMod';\r\nimport RSAKlucze from './rsa/RSAKlucze';\r\nimport RSASzyfrowanie from 'rsa/RSASzyfrowanie';\r\nimport RSADeszyfrowanie from 'rsa/RSADeszyfrowanie';\r\nimport RSAPodpis from './rsa/RSAPodpis';\r\nimport RSAPodpisWeryfikacja from './rsa/RSAPodpisWeryfikacja';\r\nimport ElGamal from './elgamal/ElGamal';\r\nimport Mod from './mod/Mod';\r\n\r\nimport ElGamalSzyfrowanie from './elgamal/ElGamalSzyfrowanie';\r\nimport ElGamalDeszyfrowanie from './elgamal/ElGamalDeszyfrowanie';\r\nimport ElGamalPodpis from './elgamal/ElGamalPodpis';\r\nimport ElGamalPodpisWeryfikacja from './elgamal/ElGamalPodpisWeryfikacja';\r\nimport CheatSheet from './cheat-sheet/CheatSheet';\r\n\r\nconst componentList = [\r\n\t{\r\n\t\tcategoryName: 'Helpers',\r\n\t\tmethods: [\r\n\t\t\t{ component: <Odwrotnosc />, name: 'Odwrotność multiplikatywna' },\r\n\t\t\t{ component: <PotegaMod />, name: 'Potęgowanie modularne' },\r\n\t\t\t{ component: <Mod />, name: 'Modulo' },\r\n\t\t\t{ component: <CheatSheet />, name: 'Litery na numery' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'Ogólne',\r\n\t\tmethods: [\r\n\t\t\t{ component: <Cezar />, name: 'Cezar' },\r\n\t\t\t{ component: <Afiniczny />, name: 'Afiniczny' },\r\n\t\t\t{ component: <Vigener />, name: 'Vigener' },\r\n\t\t\t{ component: <Hill />, name: 'Hill' },\r\n\t\t\t{ component: <DiffieHellman />, name: 'Diffie Hellman' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'RSA',\r\n\t\tmethods: [\r\n\t\t\t{ component: <RSAKlucze />, name: 'Klucze' },\r\n\t\t\t{ component: <RSASzyfrowanie />, name: 'Szyfrowanie' },\r\n\t\t\t{ component: <RSADeszyfrowanie />, name: 'Deszyfrowanie' },\r\n\t\t\t{ component: <RSAPodpis />, name: 'Podpis' },\r\n\t\t\t{ component: <RSAPodpisWeryfikacja />, name: 'Weryfikacja podpisu' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'El Gamal',\r\n\t\tmethods: [\r\n\t\t\t{ component: <ElGamal />, name: 'Klucze' },\r\n\t\t\t{ component: <ElGamalSzyfrowanie />, name: 'Szyfrowanie' },\r\n\t\t\t{ component: <ElGamalDeszyfrowanie />, name: 'Deszyfrowanie' },\r\n\t\t\t{ component: <ElGamalPodpis />, name: 'Podpis' },\r\n\t\t\t{ component: <ElGamalPodpisWeryfikacja />, name: 'Weryfikacja podpisu' },\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport default componentList;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport componentList from 'componentList';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { useMediaQuery, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdrawer: {\r\n\t\tposition: (isPhone) => (isPhone ? 'fixed' : 'initial'),\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\tzIndex: (isPhone) => (isPhone ? 1 : 0),\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n}));\r\n\r\nexport const PersistentDrawer = ({ isOpen, onClose, onMethodSelect, selectedMethod }) => {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst onMethodClick = (...params) => {\r\n\t\tif (isPhone) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t\tonMethodSelect(...params);\r\n\t};\r\n\r\n\tconst handleClickAway = (params) => {\r\n\t\tif (isPhone) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={handleClickAway}>\r\n\t\t\t<Drawer\r\n\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\tvariant='persistent'\r\n\t\t\t\tanchor='left'\r\n\t\t\t\topen={isOpen}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.drawerHeader}>\r\n\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t{componentList.map((category, i) => (\r\n\t\t\t\t\t<React.Fragment key={i}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem disabled>\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\talignItems='center'\r\n\t\t\t\t\t\t\t\t\tjustifyContent='center'\r\n\t\t\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='button'>{category.categoryName}</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t{category.methods.map((c, j) => (\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tkey={j}\r\n\t\t\t\t\t\t\t\t\tonClick={() => onMethodClick(i, j)}\r\n\t\t\t\t\t\t\t\t\tselected={i == selectedMethod[0] && j == selectedMethod[1]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={c.name} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t))}\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem component='a' href='https://www.paypal.me/krzysztofwidacki' target='_blank'>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<LocalCafeIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary='Kup mi kawę' secondary='PayPal ' />\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem component='a' href='https://github.com/Angael/KryptoBreaker' target='_blank'>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary='Github repository' secondary='source code' />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tappBar: {\r\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\thide: {\r\n\t\tdisplay: 'none',\r\n\t},\r\n}));\r\n\r\nexport const NavigationBar = ({ drawerOpen, openDrawer }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar\r\n\t\t\tposition='fixed'\r\n\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t[classes.appBarShift]: drawerOpen,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\taria-label='open drawer'\r\n\t\t\t\t\tonClick={openDrawer}\r\n\t\t\t\t\tedge='start'\r\n\t\t\t\t\tclassName={clsx(classes.menuButton, drawerOpen && classes.hide)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography variant='h6' noWrap>\r\n\t\t\t\t\tKryptoBreaker\r\n\t\t\t\t</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tuseMediaQuery,\r\n\tBreadcrumbs,\r\n} from '@material-ui/core';\r\n\r\nimport useLocalStorage from 'utils/useLocalStorage';\r\n\r\nimport componentList from './componentList';\r\n\r\nimport { PersistentDrawer } from 'nav/PersistentDrawer';\r\nimport { NavigationBar } from './nav/NavigationBar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpaddingTop: '5rem',\r\n\t\tpadding: theme.spacing(0),\r\n\t\tmarginLeft: (isPhone) => (isPhone ? 0 : -drawerWidth),\r\n\t},\r\n\tcontentShift: {\r\n\t\tmarginLeft: () => 0, // If this isnt a function, then marginLeft in content:{} wins in priority lol\r\n\t},\r\n}));\r\n\r\nfunction App() {\r\n\t// Category and component indexes in componentList.js\r\n\tconst [indexes, setIndexes] = useLocalStorage('indexes', [0, 0]);\r\n\tconst [drawerOpen, setDrawerOpen] = useLocalStorage('drawerOpen', true);\r\n\r\n\tconst selectedCategory = componentList[indexes[0]];\r\n\tconst selectedMethod = selectedCategory.methods[indexes[1]] || {};\r\n\r\n\tconst openDrawer = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetDrawerOpen(true);\r\n\t};\r\n\r\n\tconst onMethodSelect = (categoryIndex, componentIndex) => {\r\n\t\tsetIndexes([categoryIndex, componentIndex]);\r\n\t};\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst catVariant = isPhone ? 'body1' : 'h5';\r\n\tconst methodVariant = isPhone ? 'h5' : 'h4';\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<NavigationBar drawerOpen={drawerOpen} openDrawer={openDrawer} />\r\n\t\t\t<PersistentDrawer\r\n\t\t\t\tisOpen={drawerOpen}\r\n\t\t\t\tonClose={() => setDrawerOpen(false)}\r\n\t\t\t\tonMethodSelect={onMethodSelect}\r\n\t\t\t\tselectedMethod={indexes}\r\n\t\t\t/>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(classes.content, {\r\n\t\t\t\t\t[classes.contentShift]: drawerOpen,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t<Box mb={4}>\r\n\t\t\t\t\t\t<Breadcrumbs aria-label='breadcrumb'>\r\n\t\t\t\t\t\t\t<Typography variant={methodVariant} color='textSecondary'>\r\n\t\t\t\t\t\t\t\t{selectedCategory.categoryName}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant={methodVariant} color='textPrimary'>\r\n\t\t\t\t\t\t\t\t{selectedMethod.name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Breadcrumbs>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box my={4}>{selectedMethod.component}</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}