{"version":3,"sources":["utils/useLocalStorage.js","utils/numHelpers.js","utils/KryptoTable.jsx","utils/WordAndSolution.jsx","utils/line-for-letter/LineForLetter.jsx","cezar/SolutionPerChar.jsx","cezar/Cezar.jsx","vigener/SolutionPerChar.jsx","vigener/Vigener.jsx","afiniczny/SolutionPerChar.jsx","afiniczny/AfinicznyKluczLiczenie.jsx","afiniczny/Afiniczny.jsx","hill/SolutionPerChar.jsx","hill/Matrix.jsx","hill/useMatrixState.js","hill/hillCipher.js","hill/Hill.jsx","diffie-hellman/DisplayFormula.jsx","diffie-hellman/useNumberInput.js","utils/fast-power-table/getFastPowerMod.js","utils/fast-power-table/BinaryExplanator.jsx","utils/fast-power-table/FastPowerTable.jsx","diffie-hellman/DiffieHellman.jsx","odwrotnosc/OdwrotnoscTable.jsx","odwrotnosc/Odwrotnosc.jsx","potega-mod/PotegaMod.jsx","rsa/KluczeDisplay.jsx","rsa/RSAKlucze.jsx","rsa/RSASzyfrowanie.jsx","rsa/RSADeszyfrowanie.jsx","rsa/RSAPodpis.jsx","rsa/RSAPodpisWeryfikacja.jsx","elgamal/KluczeDisplay.jsx","elgamal/ElGamal.jsx","mod/Mod.jsx","elgamal/ElGamalSzyfrowanie.jsx","elgamal/ElGamalDeszyfrowanie.jsx","elgamal/ElGamalPodpis.jsx","elgamal/ElGamalPodpisWeryfikacja.jsx","componentList.js","nav/PersistentDrawer.jsx","nav/NavigationBar.jsx","App.jsx","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","mod","n","m","modInverse","a","x","getCode","letter","toLowerCase","charCodeAt","getLetter","code","String","fromCharCode","dec2bin","dec","toString","isPrime","num","i","useStyles","makeStyles","theme","root","maxWidth","KryptoTable","startStr","endStr","middleNumbersArr","isEncryption","useTheme","isPhone","useMediaQuery","breakpoints","down","classes","startRow","TableRow","TableCell","component","scope","split","map","v","align","startNumbers","endNumbers","endRow","middleRow","TableContainer","props","Paper","variant","Table","TableBody","flexDirection","arrow","transform","WordAndSolution","boxCenterProps","display","justifyContent","alignItems","Card","Box","p","className","flex","Typography","LineForLetter","resultLetter","children","fontSize","SolutionPerChar","keyValue","isEncr","letterCode","letterAndCode","afterMod","Cezar","word","setWord","setKey","isEncrypt","setIsEncrypt","result","crypted","newKey","parseInt","c","cezarEncrypt","my","elevation","Grid","container","xs","TextField","label","onChange","event","target","FormControl","InputLabel","Select","MenuItem","type","Number","keyCode","letterAndKey","Vigener","length","k","vigenerEncrypt","middleTableRow","useMemo","arr","forEach","push","calculationJsx","b","invertedA","NaN","AfinicznyKluczLiczenie","results","getStepsForInverseKey","step","Afiniczny","keys","setKeys","replace","undefined","isEncode","affine","e","placeholder","tdCss","css","centeredInputCss","Matrix","rows","changeValue","helperText","handleChangeField","row","column","onlyNumbers","useInput","alignContent","justifyItems","field","j","size","FormHelperText","defaultMatrix","Array","fill","useMatrixState","initSize","setRows","setValue","rowNum","columnNum","resize","newWidth","newWidthNumber","clamp","require","modMatrix","matrix","newMatrix","data","getInvertedMatrix","keyMatrix","detModuloed","determinant","inverse","adjugate","scale","matrixFromString","matrixWidth","matrixHeight","Math","ceil","width","height","subArray","getZeroesMatrix","letters","floor","col","getArrayFromMatrix","from","Hill","wordMatrix","isKeyMatrixOk","isKeyMatrixInvertable","numRows","numColumns","multiply","invertedKey","resultMatrixBeforeMod","resultMatrix","hillEncrypt","join","matrixArrayToString","showResultAfterMod","setShowResultAfterMod","gutterBottom","id","Slider","getAriaValueText","text","aria-labelledby","valueLabelDisplay","marks","min","max","FormControlLabel","control","Switch","checked","onClick","color","DisplayFormula","number","power","modulo","textAlign","useNumberInput","val","setVal","numberValue","isNaN","getFastPowerMod","reversedBinaryArray","reverse","steps","t","helperTextA","helperTextX","prevT","prevA","prevX","BinaryExplanator","binary","answerCss","calculationNumbersCss","TableCellHoverable","withStyles","backgroundColor","TableRowColored","palette","action","hover","TableRowHeader","primary","light","contrastText","FastPowerTable","stepsObj","pow","hoveringXRow","setHoveringXRow","onStartHover","TableHead","isLast","shouldBeHighlighted","xCss","aCss","Tooltip","title","onMouseEnter","onMouseLeave","DiffieHellman","setP","g","setG","setA","setB","pIsPrime","solutionPowA","solutionPowB","solutionPowAMaster","solutionPowBMaster","pb","cellCss","noSelect","OdwrotnoscTable","given_a","given_b","r","u","prevRow","uprim","vprim","q","getValues","values","inverted","shift","el","index","py","Odwrotnosc","setN","PotegaMod","setPow","setModulo","justify","sm","md","KluczeDisplay","d","RSAKlucze","setQ","setE","phi","RSASzyfrowanie","message","setMessage","setD","solutionPow","RSADeszyfrowanie","y","setY","RSAPodpis","setX","RSAPodpisWeryfikacja","s","setS","beta","ElGamal","setT","Mod","setNum","ElGamalSzyfrowanie","alpha","setAlpha","setR","solutionPowY1","solutionPowY2","y1","y2","disabled","ElGamalDeszyfrowanie","setY1","setY2","solutionPowX","ElGamalPodpis","h","setH","ElGamalPodpisWeryfikacja","setU","solutionPowF","solutionPowLeft","solutionPowRight","f","spacing","componentList","categoryName","methods","name","drawer","position","flexShrink","zIndex","drawerPaper","drawerHeader","padding","mixins","toolbar","PersistentDrawer","isOpen","onClose","onMethodSelect","selectedMethod","ClickAwayListener","onClickAway","params","Drawer","anchor","open","paper","IconButton","Divider","List","ListItem","category","Fragment","button","onMethodClick","selected","ListItemText","href","ListItemIcon","secondary","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","NavigationBar","drawerOpen","openDrawer","AppBar","clsx","Toolbar","aria-label","edge","noWrap","content","flexGrow","paddingTop","contentShift","App","indexes","setIndexes","setDrawerOpen","selectedCategory","catVariant","methodVariant","stopPropagation","categoryIndex","componentIndex","Container","mb","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a15726f.chunk.js","sourcesContent":["// Hook\r\nimport { useState } from 'react';\r\nfunction useLocalStorage(key, initialValue) {\r\n\t// State to store our value\r\n\t// Pass initial state function to useState so logic is only executed once\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\t// Get from local storage by key\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t// Parse stored json or if none return initialValue\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\t// If error also return initialValue\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\t// Return a wrapped version of useState's setter function that ...\r\n\t// ... persists the new value to localStorage.\r\n\tconst setValue = (value) => {\r\n\t\ttry {\r\n\t\t\t// Allow value to be a function so we have same API as useState\r\n\t\t\tconst valueToStore = value instanceof Function ? value(storedValue) : value;\r\n\t\t\t// Save state\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t// Save to local storage\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\t// A more advanced implementation would handle the error case\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","export function mod(n, m = 26) {\r\n\treturn ((n % m) + m) % m;\r\n}\r\n\r\n// odwrotnosc modularna\r\nexport const modInverse = (a, m = 26) => {\r\n\tfor (let x = 1; x < m; x++) if (((a % m) * (x % m)) % m == 1) return x;\r\n};\r\n\r\nexport const getCode = (letter) => letter.toLowerCase().charCodeAt(0) - 97;\r\nexport const getLetter = (code) => String.fromCharCode(mod(code, 26) + 97);\r\n\r\nexport function dec2bin(dec) {\r\n\treturn (dec >>> 0).toString(2);\r\n}\r\n\r\nexport function isPrime(num) {\r\n\tfor (var i = 2; i < num; i++) if (num % i === 0) return false;\r\n\treturn num > 1;\r\n}\r\n\r\nwindow.mod = mod;\r\nwindow.modInverse = modInverse;\r\nwindow.getCode = getCode;\r\nwindow.getLetter = getLetter;\r\nwindow.dec2bin = dec2bin;\r\nwindow.isPrime = isPrime;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100vw - 66px)',\r\n\t},\r\n}));\r\n\r\nfunction KryptoTable({ startStr = '', endStr = '', middleNumbersArr, isEncryption = true }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst startRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'PT' : 'CT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst startNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'x' : 'y'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'y' : 'x'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'CT' : 'PT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst middleRow = middleNumbersArr && (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\tk\r\n\t\t\t</TableCell>\r\n\t\t\t{middleNumbersArr.map((v, i) => (\r\n\t\t\t\t<TableCell key={v + '-' + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TableContainer\r\n\t\t\tclasses={classes}\r\n\t\t\tcomponent={(props) => <Paper variant='outlined' {...props} />}\r\n\t\t>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{startRow}\r\n\t\t\t\t\t{startNumbers}\r\n\t\t\t\t\t{middleRow}\r\n\t\t\t\t\t{endNumbers}\r\n\t\t\t\t\t{endRow}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nexport default KryptoTable;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tCard,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexDirection: (isPhone) => (isPhone ? 'column' : 'row'),\r\n\t},\r\n\tarrow: {\r\n\t\ttransform: (isPhone) => (isPhone ? 'rotate(90deg)' : 'inherit'),\r\n\t},\r\n}));\r\n\r\nfunction WordAndSolution({ startStr = '', endStr = '' }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst boxCenterProps = { display: 'flex', justifyContent: 'space-around', alignItems: 'center' };\r\n\treturn (\r\n\t\t<Card variant='outlined'>\r\n\t\t\t<Box p={2} {...boxCenterProps} className={classes.root}>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{startStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={1} {...boxCenterProps} className={classes.arrow}>\r\n\t\t\t\t\t<ArrowForwardIcon />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{endStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default WordAndSolution;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction LineForLetter({ letter, resultLetter, children }) {\r\n\treturn (\r\n\t\t<Box display='flex' alignItems='center'>\r\n\t\t\t<Box m={2}>{letter}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{children}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{resultLetter}</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default LineForLetter;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Cezar() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState(0);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst cezarEncrypt = () => {\r\n\t\tlet crypted = '';\r\n\t\tlet newKey = parseInt(key * (isEncrypt ? 1 : -1)) || 0;\r\n\t\tfor (let c of word) {\r\n\t\t\tcrypted += getLetter(getCode(c) + newKey);\r\n\t\t}\r\n\t\treturn crypted;\r\n\t};\r\n\r\n\tlet result = cezarEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(Number(event.target.value));\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\treturn (\r\n\t\t<Box my={4}>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<TextField label='key' type='number' onChange={changeKey} value={key} />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default Cezar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst keyCode = getCode(keyValue);\r\n\r\n\tconst letterAndKey = isEncr ? letterCode + keyCode : letterCode - keyCode;\r\n\r\n\tconst afterMod = mod(letterAndKey, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>({keyValue})</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {keyCode}) mod 26 ={' '}\r\n\t\t\t{letterAndKey} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState, useMemo } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Vigener() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst vigenerEncrypt = () => {\r\n\t\tconst length = key?.length || 0;\r\n\t\tif (length) {\r\n\t\t\tlet crypted = '';\r\n\t\t\tfor (let i in word) {\r\n\t\t\t\tconst c = word[i];\r\n\t\t\t\tconst k = key[i % length];\r\n\t\t\t\tcrypted += getLetter(mod(getCode(c) + getCode(k) * (isEncrypt ? 1 : -1)));\r\n\t\t\t}\r\n\t\t\treturn crypted;\r\n\t\t} else return word;\r\n\t};\r\n\r\n\tlet result = vigenerEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\tconst middleTableRow = useMemo(() => {\r\n\t\tif (word && key) {\r\n\t\t\tconst arr = [];\r\n\t\t\tword.split('').forEach((v, i) => arr.push(key[i % key.length]));\r\n\t\t\treturn arr.map((v) => getCode(v));\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, [word, key]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='key' type='text' onChange={changeKey} value={key} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable\r\n\t\t\t\t\t\t\tstartStr={word}\r\n\t\t\t\t\t\t\tendStr={result}\r\n\t\t\t\t\t\t\tmiddleNumbersArr={middleTableRow}\r\n\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{key && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t\t<SolutionPerChar\r\n\t\t\t\t\t\t\t\t\tkey={c + i}\r\n\t\t\t\t\t\t\t\t\tletter={c}\r\n\t\t\t\t\t\t\t\t\tkeyValue={key[i % key.length]}\r\n\t\t\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Vigener;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, a, b, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\r\n\tlet code;\r\n\tlet invertedA = NaN;\r\n\tlet calculationJsx;\r\n\tif (!isEncr) {\r\n\t\tinvertedA = modInverse(a, 26);\r\n\t\tcode = invertedA * (letterCode - b);\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{invertedA} * ({letterCode} - {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tcode = letterCode * a + b;\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{a} * ({letterCode} + {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tconst afterMod = mod(code, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>\r\n\t\t\t\t({a},{b})\r\n\t\t\t</sub>\r\n\t\t\t({letterCode}) = ({calculationJsx}) mod 26 = {code} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nconst getStepsForInverseKey = (num, n = 26) => {\r\n\tconst results = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tresults.push(`${num} * ${i} mod ${n} = ${mod(num * i, n)}`);\r\n\t\tif ((num * i) % n === 1) {\r\n\t\t\tresults.push('Found inverted key = ' + i);\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nfunction AfinicznyKluczLiczenie({ a, n }) {\r\n\tconst steps = getStepsForInverseKey(a, n);\r\n\treturn steps.map((step) => (\r\n\t\t<Box key={step}>\r\n\t\t\t<Typography>{step}</Typography>\r\n\t\t</Box>\r\n\t));\r\n}\r\n\r\nexport default AfinicznyKluczLiczenie;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport AfinicznyKluczLiczenie from './AfinicznyKluczLiczenie';\r\n\r\nconst affine = (word, [a, b], isEncode = true) => {\r\n\tlet result = '';\r\n\tlet code = null;\r\n\r\n\tfor (let c of word) {\r\n\t\tif (!isEncode) {\r\n\t\t\tconst newA = modInverse(a, 26);\r\n\t\t\tcode = newA * (getCode(c) - b);\r\n\t\t} else code = getCode(c) * a + b;\r\n\r\n\t\tresult += getLetter(mod(code, 26));\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nfunction Afiniczny() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [keys, setKeys] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst [a = 0, b = 0] = keys.replace(/\\s/, '').split(',').map(Number);\r\n\r\n\tconst result = word && a !== undefined && b !== undefined ? affine(word, [a, b], isEncrypt) : '';\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeKey = (event) => setKeys(event.target.value);\r\n\tconst changeIsEncryption = (e, v) => setIsEncrypt(e.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='keys'\r\n\t\t\t\t\t\t\tplaceholder={'3,7'}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tonChange={changeKey}\r\n\t\t\t\t\t\t\tvalue={keys}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Klucz odwrócony:</Typography>\r\n\t\t\t\t\t\t\t<AfinicznyKluczLiczenie a={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} a={a} b={b} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Afiniczny;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport { css } from '@emotion/css';\r\n\r\nconst tdCss = css`\r\n\theight: 42px;\r\n\twidth: 4rem;\r\n`;\r\n\r\nconst centeredInputCss = css`\r\n\t* {\r\n\t\ttext-align: center; !important\r\n\t}\r\n`;\r\n\r\nfunction Matrix({ rows, changeValue, error, helperText }) {\r\n\tconst handleChangeField = (row, column) => (e) => {\r\n\t\tif (changeValue) {\r\n\t\t\tconst onlyNumbers = Number(e.target.value.replace(/\\D/g, ''));\r\n\t\t\tchangeValue(onlyNumbers, row, column);\r\n\t\t}\r\n\t};\r\n\r\n\tconst useInput = !!changeValue;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box\r\n\t\t\t\tmy={2}\r\n\t\t\t\tflexDirection='column'\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\talignContent='center'\r\n\t\t\t\tjustifyItems='center'\r\n\t\t\t\tjustifyContent='center'\r\n\t\t\t>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{rows.map((row, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t{row.map((field, j) => (\r\n\t\t\t\t\t\t\t\t\t<td className={tdCss} key={j}>\r\n\t\t\t\t\t\t\t\t\t\t{useInput ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={field}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={centeredInputCss}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeField(i, j)}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography align='center'>{field}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<FormHelperText error={!!helperText}>{helperText}</FormHelperText>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Matrix;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nconst defaultMatrix = (size) => Array(size).fill(Array(size).fill(0));\r\n\r\nconst useMatrixState = (initSize = 2) => {\r\n\tconst [rows, setRows] = useState(defaultMatrix(initSize));\r\n\tconst size = rows.length;\r\n\r\n\tconst setValue = (value, rowNum, columnNum) =>\r\n\t\tsetRows(\r\n\t\t\trows.map((row, i) => row.map((field, j) => (i === rowNum && columnNum === j ? value : field)))\r\n\t\t);\r\n\r\n\tconst resize = (newWidth) => {\r\n\t\t// W teorii 1 powinno działać, ale dekrypcja buguje się jak jest 1x1 klucz\r\n\t\tconst newWidthNumber = clamp(Number(newWidth), 2, 14);\r\n\t\tsetRows(defaultMatrix(newWidthNumber));\r\n\t};\r\n\r\n\treturn { rows, setValue, size, resize };\r\n};\r\n\r\nexport default useMatrixState;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\nvar Matrix = require('node-matrices');\r\n\r\nexport const getZeroesMatrix = (width, height) => {\r\n\tconst arr = [];\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tlet subArray = [];\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tsubArray.push(0);\r\n\t\t}\r\n\t\tarr.push(subArray);\r\n\t}\r\n\treturn new Matrix(arr);\r\n};\r\n\r\nexport const modMatrix = (matrix) => {\r\n\tconst newMatrix = new Matrix(matrix.data);\r\n\tfor (let i = 0; i < matrix.data.length; i++) {\r\n\t\tfor (let j = 0; j < matrix.data[i].length; j++) {\r\n\t\t\tmatrix.data[i][j] = mod(matrix.data[i][j], 26);\r\n\t\t}\r\n\t}\r\n\treturn newMatrix;\r\n};\r\n\r\nexport const isKeyMatrixInvertable = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\treturn !!inverse;\r\n};\r\n\r\nexport const getInvertedMatrix = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\tconst adjugate = keyMatrix.adjugate();\r\n\r\n\tfor (let i = 0; i < adjugate.data.length; i++) {\r\n\t\tfor (let j = 0; j < adjugate.data[i].length; j++) {\r\n\t\t\tif (adjugate.data[i][j] < 0) {\r\n\t\t\t\tadjugate.data[i][j] += 26;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst result = modMatrix(adjugate.scale(inverse));\r\n\r\n\treturn result;\r\n};\r\n","import { useState, useMemo } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tSwitch,\r\n\tFormControlLabel,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport MatrixInput from './Matrix';\r\nimport useMatrixState from 'hill/useMatrixState';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { getInvertedMatrix, modMatrix, getZeroesMatrix, isKeyMatrixInvertable } from './hillCipher';\r\nvar Matrix = require('node-matrices');\r\n\r\nconst hillEncrypt = (wordMatrix, keyMatrix, isEncrypt) => {\r\n\tif (\r\n\t\t!wordMatrix.numRows() ||\r\n\t\t!wordMatrix.numColumns() ||\r\n\t\t!keyMatrix.numRows() ||\r\n\t\t!keyMatrix.numColumns()\r\n\t) {\r\n\t\treturn wordMatrix;\r\n\t}\r\n\r\n\tlet result;\r\n\tif (isEncrypt) {\r\n\t\tresult = wordMatrix.multiply(keyMatrix);\r\n\t} else {\r\n\t\tconst invertedKey = getInvertedMatrix(keyMatrix);\r\n\t\tresult = wordMatrix.multiply(invertedKey);\r\n\t}\r\n\treturn {\r\n\t\tresultMatrixBeforeMod: JSON.parse(JSON.stringify(result)),\r\n\t\tresultMatrix: modMatrix(result, 26),\r\n\t};\r\n};\r\n\r\nconst matrixFromString = (word, matrixWidth) => {\r\n\tconst matrixHeight = Math.ceil(word.length / matrixWidth);\r\n\r\n\tlet newMatrix = getZeroesMatrix(matrixWidth, matrixHeight);\r\n\tconst letters = word.split('');\r\n\tif (letters) {\r\n\t\tletters.forEach((c, i) => {\r\n\t\t\tconst row = Math.floor(i / matrixWidth);\r\n\t\t\tconst col = i % matrixWidth;\r\n\t\t\tnewMatrix = newMatrix.replace(row, col, getCode(c));\r\n\t\t});\r\n\t\treturn newMatrix;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nconst getArrayFromMatrix = (matrix) => matrix.data.map((row) => Array.from(row));\r\n\r\nconst matrixArrayToString = (rows) =>\r\n\trows.map((row) => row.map((v) => getLetter(v)).join('')).join('');\r\n\r\nfunction Hill() {\r\n\tconst [word, setWord] = useState('telewizor');\r\n\tconst { rows, setValue, size, resize } = useMatrixState(3);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst wordMatrix = useMemo(() => matrixFromString(word, size), [word, size]);\r\n\tconst keyMatrix = useMemo(() => new Matrix(rows), [rows]);\r\n\r\n\tconst isKeyMatrixOk = isKeyMatrixInvertable(keyMatrix);\r\n\r\n\tconst { resultMatrix, resultMatrixBeforeMod } = useMemo(\r\n\t\t() => hillEncrypt(wordMatrix, keyMatrix, isEncrypt),\r\n\t\t[wordMatrix, keyMatrix, isEncrypt]\r\n\t);\r\n\tconst result = matrixArrayToString(getArrayFromMatrix(resultMatrix));\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst handleResize = (e, v) => resize(v);\r\n\r\n\tconst [showResultAfterMod, setShowResultAfterMod] = useState(true);\r\n\tconst toggleShowResultAfterMod = () => setShowResultAfterMod((v) => !v);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tEnkrypcja Hilla polega na pomnożeniu macierzy słowa przez macierz klucza.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tDekrypcja Hilla polega na pomnożeniu macierzy słowa przez macierz <b>odwróconego</b>{' '}\r\n\t\t\t\t\t\t\tklucza.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\tJeśli masz zrobić dekrypcje, i posiadasz <b>odwrócony</b> klucz to ustaw na enkrypcję\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography id='input-slider' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tMatrix size\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\tvalue={size}\r\n\t\t\t\t\t\t\t\t\tonChange={handleResize}\r\n\t\t\t\t\t\t\t\t\tgetAriaValueText={(text) => text}\r\n\t\t\t\t\t\t\t\t\taria-labelledby='discrete-slider'\r\n\t\t\t\t\t\t\t\t\tvalueLabelDisplay='auto'\r\n\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\tmarks\r\n\t\t\t\t\t\t\t\t\tmin={2}\r\n\t\t\t\t\t\t\t\t\tmax={9}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Word:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(wordMatrix)} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Key:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\t\t\t\tchangeValue={setValue}\r\n\t\t\t\t\t\t\t\t\terror={!isKeyMatrixOk}\r\n\t\t\t\t\t\t\t\t\thelperText={!isKeyMatrixOk ? 'This key matrix can not be inverted' : ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4'>Inverted Key:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(getInvertedMatrix(keyMatrix))} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Multiplication result:</Typography>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={showResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleShowResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel='After modulo'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={getArrayFromMatrix(\r\n\t\t\t\t\t\t\t\t\t\tshowResultAfterMod ? resultMatrix : resultMatrixBeforeMod\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{/* <Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))} \r\n\t\t\t\t\t</Box> */}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Hill;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nfunction DisplayFormula({ number, power, modulo, variant = 'body1' }) {\r\n\treturn (\r\n\t\t<Box textAlign='center' display='inline'>\r\n\t\t\t<Typography variant={variant} component='span'>\r\n\t\t\t\t{number} <sup>{power}</sup> mod {modulo}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DisplayFormula;\r\n","import { useState } from 'react';\r\n\r\nconst useNumberInput = (initialValue) => {\r\n\tconst [val, setVal] = useState(initialValue || 0);\r\n\r\n\tconst setValueWithEvent = (e) => {\r\n\t\tconst numberValue = Number(e.target.value);\r\n\t\tif (isNaN(numberValue)) {\r\n\t\t\t// do nothing\r\n\t\t} else {\r\n\t\t\tsetVal(numberValue);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [val, setValueWithEvent];\r\n};\r\n\r\nexport default useNumberInput;\r\n","import { mod } from 'utils/numHelpers';\r\nimport { dec2bin } from 'utils/numHelpers';\r\n\r\n/**\r\n *\r\n * @param {number} number - Liczba podnoszona do potęgi, ta po lewej\r\n * @param {number} power - potęga\r\n * @param {number} modulo - Modulo\r\n */\r\nconst getFastPowerMod = (number, power, modulo) => {\r\n\t// np 011011101\r\n\tconst binaryString = dec2bin(power);\r\n\tconst reversedBinaryArray = binaryString.split('').reverse();\r\n\r\n\tif (!reversedBinaryArray.length) {\r\n\t\treturn 'rip, nie chce mi sie pisac error handlingu';\r\n\t}\r\n\r\n\tconst steps = [];\r\n\tsteps.push({\r\n\t\ti: 0,\r\n\t\tx: 1,\r\n\t\ta: number,\r\n\t\tt: Number(reversedBinaryArray[0]),\r\n\t\thelperTextA: 'initial value is g = ' + number,\r\n\t\thelperTextX: 'initial value is always 1 ',\r\n\t});\r\n\r\n\tfor (let i = 1; i < reversedBinaryArray.length + 1; i++) {\r\n\t\tconst t = Number(reversedBinaryArray[i]);\r\n\t\tconst prevT = steps[i - 1].t;\r\n\t\tconst prevA = steps[i - 1].a;\r\n\t\tconst prevX = steps[i - 1].x;\r\n\r\n\t\tlet helperTextX = '';\r\n\r\n\t\tlet a = mod(prevA * prevA, modulo);\r\n\t\tif (i === reversedBinaryArray.length) {\r\n\t\t\ta = '';\r\n\t\t}\r\n\t\tlet helperTextA = `${prevA} * ${prevA} mod ${modulo} =  ${a}`;\r\n\r\n\t\tlet x;\r\n\t\tif (prevT) {\r\n\t\t\tx = mod(prevX * prevA, modulo);\r\n\t\t\thelperTextX = `${prevX} * ${prevA} mod ${modulo} =  ${x}`;\r\n\t\t} else {\r\n\t\t\tx = prevX;\r\n\t\t\thelperTextX = `unchanged because previous t is 0 = ${x}`;\r\n\t\t}\r\n\t\tsteps.push({ i, x, a, t, helperTextA, helperTextX });\r\n\t}\r\n\r\n\tconst result = steps[steps.length - 1].x;\r\n\treturn {\r\n\t\tresult,\r\n\t\tsteps,\r\n\t};\r\n};\r\n\r\nexport default getFastPowerMod;\r\n","import { dec2bin } from 'utils/numHelpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BinaryExplanator({ num }) {\r\n\tconst binary = dec2bin(num);\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t{num} to binary is {binary}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>in reverse it's [{binary.split('').reverse().join(',')}] = t</Box>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default BinaryExplanator;\r\n","import { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BinaryExplanator from 'utils/fast-power-table/BinaryExplanator';\r\n\r\nconst answerCss = css`\r\n\tbackground: #97ffa7;\r\n\ttext-decoration: underline;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst calculationNumbersCss = css`\r\n\tbackground: #ffd0ce;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst TableCellHoverable = withStyles({\r\n\troot: {\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'rgb(0 ,0, 0, 0.1)',\r\n\t\t},\r\n\t},\r\n})(TableCell);\r\n\r\nconst TableRowColored = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst TableRowHeader = withStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t'& th': {\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nfunction FastPowerTable({ stepsObj, pow }) {\r\n\tconst [hoveringXRow, setHoveringXRow] = useState(null);\r\n\tconst onStartHover = (i) => () => {\r\n\t\tsetHoveringXRow(i);\r\n\t};\r\n\tconst onEndHover = (i) => () => {\r\n\t\tsetHoveringXRow(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BinaryExplanator num={pow} />\r\n\t\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRowHeader>\r\n\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tx<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tt<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRowHeader>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{stepsObj.steps.map(({ i, x, a, t, helperTextA, helperTextX }) => {\r\n\t\t\t\t\t\t\tconst isLast = i === stepsObj.steps.length - 1;\r\n\r\n\t\t\t\t\t\t\tconst shouldBeHighlighted = hoveringXRow === i + 1;\r\n\t\t\t\t\t\t\tconst xCss = isLast ? answerCss : shouldBeHighlighted ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\tconst aCss = shouldBeHighlighted && !!t ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRowColored key={i}>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{i}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextX}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCellHoverable\r\n\t\t\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={xCss}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={onStartHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={onEndHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{x}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t{!isLast && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextA}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCellHoverable align='center' className={aCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{a}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{!isLast && <TableCell align='center'>{t}</TableCell>}\r\n\t\t\t\t\t\t\t\t</TableRowColored>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default FastPowerTable;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DisplayFormula from './DisplayFormula';\r\nimport useNumberInput from './useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport BinaryExplanator from '../utils/fast-power-table/BinaryExplanator';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nfunction DiffieHellman() {\r\n\tconst [p, setP] = useNumberInput(1019);\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [a, setA] = useNumberInput(638);\r\n\tconst [b, setB] = useNumberInput(719);\r\n\r\n\tconst pIsPrime = useMemo(() => isPrime(p), [p]);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, a, p), [p, g, a]);\r\n\tconst solutionPowB = useMemo(() => getFastPowerMod(g, b, p), [p, g, b]);\r\n\r\n\tconst solutionPowAMaster = useMemo(() => getFastPowerMod(solutionPowA.result, b, p), [\r\n\t\tp,\r\n\t\tsolutionPowA.result,\r\n\t\tb,\r\n\t]);\r\n\tconst solutionPowBMaster = useMemo(() => getFastPowerMod(solutionPowB.result, a, p), [\r\n\t\tp,\r\n\t\tsolutionPowB.result,\r\n\t\tb,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<Box my={4}>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' helperText='public' />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText={pIsPrime ? 'public' : 'p has to be prime'}\r\n\t\t\t\t\t\t\t\terror={!pIsPrime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='a'\r\n\t\t\t\t\t\t\t\tonChange={setA}\r\n\t\t\t\t\t\t\t\tvalue={a}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText='private for person 1'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='b'\r\n\t\t\t\t\t\t\t\tonChange={setB}\r\n\t\t\t\t\t\t\t\tvalue={b}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText='private for person 2'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h3'>Calculating Public keys:</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tPerson 1 generates random private key a, Person 2 generates random private key b.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tThen they calculate public keys they can give eachother in a NOT secure way.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={a} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={b} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Fast modulo power method (!):</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowB} pow={b} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h3'>Calculating Master (private) key:</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tAfter Person 1 received Person 2 Public key, and vice versa, they can both calculate the\r\n\t\t\t\t\t\tsame private key.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tThen they can use this key to encrypt their communication, without ever sending this\r\n\t\t\t\t\t\tprivate key.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={solutionPowB.result} modulo={p} power={a} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula number={solutionPowA.result} modulo={p} power={b} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowBMaster} pow={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowAMaster} pow={b} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DiffieHellman;\r\n","import { useState, useMemo } from 'react';\r\nimport { Paper, Box, Typography, useMediaQuery } from '@material-ui/core';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport { mod } from '../utils/numHelpers';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst cellCss = css`\r\n\tbackground: #f0e98b;\r\n`;\r\n\r\nconst noSelect = css`\r\n\tuser-select: none;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100vw - 66px)',\r\n\t},\r\n}));\r\n\r\nfunction OdwrotnoscTable({ a, b }) {\r\n\tconst getValues = (given_a, given_b) => {\r\n\t\tconst rows = [];\r\n\r\n\t\tlet i = 0;\r\n\t\tlet r, b, u, v;\r\n\t\twhile (r != 0) {\r\n\t\t\tconst prevRow = i === 0 ? null : rows[i - 1];\r\n\t\t\tconst a = prevRow ? prevRow['b'] : given_a;\r\n\t\t\tb = prevRow ? prevRow['r'] : given_b;\r\n\t\t\tu = prevRow ? prevRow['uprim'] - prevRow['q'] * prevRow['u'] : 0;\r\n\t\t\tconst uprim = prevRow ? prevRow['u'] : 1;\r\n\t\t\tv = prevRow ? prevRow['vprim'] - prevRow['q'] * prevRow['v'] : 1;\r\n\t\t\tconst vprim = prevRow ? prevRow['v'] : 0;\r\n\t\t\tconst q = Math.floor(a / b);\r\n\t\t\tr = mod(a, b);\r\n\r\n\t\t\trows.push({ u, uprim, v, vprim, a, b, q, r });\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn [rows, u];\r\n\t};\r\n\r\n\tconst [values, inverted] = getValues(a, b);\r\n\tvalues.shift(); // dont ask\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\treturn (\r\n\t\tb != 0 && (\r\n\t\t\t<>\r\n\t\t\t\t<TableContainer\r\n\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\tcomponent={(props) => <Paper variant='outlined' {...props} />}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tu<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tu<sub>i</sub>'\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tv<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tv<sub>i</sub>'\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tn<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tq<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tr<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{values.map((el, index) => {\r\n\t\t\t\t\t\t\t\tconst { u, uprim, v, vprim, a, b, q, r } = el;\r\n\t\t\t\t\t\t\t\tconst isLast = values.length - 1 === index;\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{index}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{v}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{vprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' className={isLast && cellCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t{u}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{uprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{a}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{b}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{q}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{r}</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Box py={1}>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\ta<sup>-1</sup> = {inverted} mod {b} = {mod(inverted, b)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t<span className={noSelect}>Sprawdzenie: </span>\r\n\t\t\t\t\t\t{a} * {mod(inverted, b)} mod {b} = {mod(a * mod(inverted, b), b)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t)\r\n\t);\r\n}\r\n\r\nexport default OdwrotnoscTable;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport AfinicznyKluczLiczenie from 'afiniczny/AfinicznyKluczLiczenie';\r\nimport OdwrotnoscTable from './OdwrotnoscTable';\r\n\r\nfunction Odwrotnosc() {\r\n\tconst [a, setA] = useNumberInput(215);\r\n\tconst [n, setN] = useNumberInput(25);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Liczba' type='number' onChange={setA} value={a} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='modulo' placeholder={26} type='number' onChange={setN} value={n} />\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Odwrotność modularna:</Typography>\r\n\t\t\t\t\t\t{/* <AfinicznyKluczLiczenie a={a} n={n} /> */}\r\n\r\n\t\t\t\t\t\t<OdwrotnoscTable a={a} b={n} />\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Odwrotnosc;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction PotegaMod() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [pow, setPow] = useNumberInput(638);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, pow, modulo), [modulo, g, pow]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Potęga' onChange={setPow} value={pow} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={g} power={pow} modulo={modulo} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={pow} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default PotegaMod;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ e, d, n }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h3'>Klucze:</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (e, n) = ({e}, {n}) - Publiczne\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (d, n) = ({d}, {n}) - Prywatne\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction RSAKlucze() {\r\n\tconst [p, setP] = useNumberInput(37);\r\n\tconst [q, setQ] = useNumberInput(47);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\r\n\tconst n = p * q;\r\n\tconst phi = (p - 1) * (q - 1);\r\n\tconst d = modInverse(e, phi);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='q'\r\n\t\t\t\t\t\t\t\t\tonChange={setQ}\r\n\t\t\t\t\t\t\t\t\tvalue={q}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość druga'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana liczba całkowita od 1 do Φ'\r\n\t\t\t\t\t\t\t\t\terror={e > phi || e <= 1 || e % 1 !== 0}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tn = {p} * {q} = {n}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tphi = Φ = ({p} - 1) * ({q}- 1)= {phi}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\td = <DisplayFormula number={e} power={-1} modulo={phi} variant={'body1'} /> = {d}\r\n\t\t\t\t\t\t\t\t<OdwrotnoscTable a={e} b={phi} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAKlucze;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSASzyfrowanie() {\r\n\t//Wiadomość x\r\n\tconst [message, setMessage] = useNumberInput(20);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(message, e, n), [n, message, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość, której wartość wynosi x={message} zaszyfrowaną\r\n\t\t\t\t\t\t\t\tprzy użyciu algorytmu RSA. Oblicz wartość szyfrogramu y.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setMessage}\r\n\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Szyfrowanie:</Typography>\r\n\t\t\t\t\t\t\t\ty = c =<DisplayFormula\r\n\t\t\t\t\t\t\t\t\tnumber={'x'}\r\n\t\t\t\t\t\t\t\t\tpower={'e'}\r\n\t\t\t\t\t\t\t\t\tmodulo={'n'}\r\n\t\t\t\t\t\t\t\t\tvariant={'body1'}\r\n\t\t\t\t\t\t\t\t/> = <DisplayFormula number={message} power={e} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tSzyfrogram y = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={e} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSASzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSADeszyfrowanie() {\r\n\t//Zaszyfrowana wiadomosc x, szyfrogram y\r\n\tconst [y, setY] = useNumberInput(1327);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// y^d mod n\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(y, d, n), [n, y, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram y={y}. Obliczyć przez Alicję wartość tekstu\r\n\t\t\t\t\t\t\t\tjawnego x.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setY}\r\n\t\t\t\t\t\t\t\t\tvalue={y}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Szyfrogram'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Deszyfrowanie:</Typography>\r\n\t\t\t\t\t\t\t\tx = wiadomość ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={'y'} power={'d'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={y} power={d} number={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tWiadomość x = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSADeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpis() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(x, d, n), [n, x, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={x}. Wygenerować przez\r\n\t\t\t\t\t\t\t\tAlicję podpis cyfrowy RSA dla tej wiadomości.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Generowanie podpisu:</Typography>\r\n\t\t\t\t\t\t\t\tpodpis s ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={'h'} power={'d'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={x} power={d} number={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tPodpis s = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpisWeryfikacja() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [s, setS] = useNumberInput(1630);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(s, e, n), [n, s, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={x}, oraz jej podpis cyfrowy\r\n\t\t\t\t\t\t\t\tRSA s={s}. Zweryfikuj przez Boba otrzymany od Alicji podpis cyfrowy.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='s'\r\n\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Podpis który weryfikujemy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\th = <DisplayFormula\r\n\t\t\t\t\t\t\t\t\tnumber={'s'}\r\n\t\t\t\t\t\t\t\t\tpower={'e'}\r\n\t\t\t\t\t\t\t\t\tmodulo={'n'}\r\n\t\t\t\t\t\t\t\t\tvariant={'body1'}\r\n\t\t\t\t\t\t\t\t/> = <DisplayFormula number={s} power={e} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tWynik sprawdzenia = {solutionPow.result} = {x} = h\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} pb={3} align='center'>\r\n\t\t\t\t\t\t\t\tPodpis {x === solutionPow.result ? 'jest' : 'nie jest'} poprawny, ponieważ wartość\r\n\t\t\t\t\t\t\t\tskrótu wysłana przez alicję {x === solutionPow.result ? 'jest' : 'nie jest'} taka\r\n\t\t\t\t\t\t\t\tsama jak wartość skrótu wiadomości odebranej przez boba.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpisWeryfikacja;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ p, g, beta, t }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h4'>Klucze:</Typography>\r\n\t\t\t<Typography variant='caption'>zmiana oznaczeń: α ≡ g</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (p, α, β) = ({p}, {g}, {beta}) - publiczny\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (p, t) = ({p}, {t}) - prywatny\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction ElGamal() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, t, p), [p, g, t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wygenerować klucze asymetryczne ElGamala. W tym celu przyjęła wartość{' '}\r\n\t\t\t\t\t\t\t\t<b>p={p}</b> oraz generator <b>g={g}</b>.<br />\r\n\t\t\t\t\t\t\t\tWyznacz klucze asymetryczne Alicji dla jej wartości prywatnej <b>t={t}</b>.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='g albo α'\r\n\t\t\t\t\t\t\t\t\tonChange={setG}\r\n\t\t\t\t\t\t\t\t\tvalue={g}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' helperText='p?' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={t} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<KluczeDisplay p={p} g={g} beta={solutionPowA.result} t={t} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamal;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, mod } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction Mod() {\r\n\tconst [num, setNum] = useNumberInput(2);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst result = mod(num, modulo);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Number' onChange={setNum} value={num} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={num} power={''} modulo={modulo} variant={'h4'} />\r\n\t\t\t\t\t\t<Typography variant={'h4'} display='inline'>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t= {result}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Mod;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction ElGamalSzyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [x, setX] = useNumberInput(20);\r\n\tconst [r, setR] = useNumberInput(320);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst solutionPowY1 = useMemo(() => getFastPowerMod(alpha, r, p), [p, alpha, r]);\r\n\tconst solutionPowY2 = useMemo(() => getFastPowerMod(beta, r, p), [p, beta, r]);\r\n\tconst y1 = solutionPowY1.result;\r\n\tconst y2 = mod(x * solutionPowY2.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość której wartość liczbowa wynosi x={x}.\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tOblicz wartość tekstu zaszyfrowanego y, wiedząc, że do zaszyfrowania wybrany\r\n\t\t\t\t\t\t\t\t\tzostał randomizer r={r}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Randomizer'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4' align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tC = (y<sub>1</sub>, y<sub>2</sub>) = E\r\n\t\t\t\t\t\t\t\t\t\t\t<sub>\r\n\t\t\t\t\t\t\t\t\t\t\t\tk<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t(r,x) = (α<sup>r</sup> mod p, x * β<sup>r</sup> mod p)\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={r} modulo={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY1} pow={r} />{' '}\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\ty<sub>1</sub>= {y1}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie y<sub>2</sub>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{x} * <DisplayFormula number={alpha} power={r} modulo={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY2} pow={r} />\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\ty<sub>2</sub> = {x} * {solutionPowY2.result} mod {p} = {y2}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\t\t\tWynik = (y<sub>1</sub>, y<sub>2</sub>) = ({y1}, {y2})\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalSzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction ElGamalDeszyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [y1, setY1] = useNumberInput(130);\r\n\tconst [y2, setY2] = useNumberInput(414);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst power = p - 1 - t;\r\n\tconst error = power <= 0 || power % 1 !== 0;\r\n\tconst solutionPowX = useMemo(() => getFastPowerMod(y1, power, p), [p, y1, power]);\r\n\r\n\tconst x = mod(y2 * solutionPowX.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram Y=({y1}, {y2})\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography> Obliczyć przez Alicję wartość tekstu jawnego x.</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\ty<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setY1}\r\n\t\t\t\t\t\t\t\t\tvalue={y1}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\ty<sub>2</sub>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setY2}\r\n\t\t\t\t\t\t\t\t\tvalue={y2}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4' align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tX = P = y<sub>2</sub>* y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t<sup>p - 1 - t</sup> mod p\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4' align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tX = P = {y2} * {y1}\r\n\t\t\t\t\t\t\t\t\t\t\t<sup>{p - 1 - t}</sup> mod {p}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}></Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie x (wiadomości)\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{y2} * <DisplayFormula number={y1} modulo={p} power={power} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowX} pow={power} />{' '}\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\tx = {y2} * {solutionPowX.result} mod {p}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\t\t\tX = {x}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalDeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpis() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\tconst [r, setR] = useNumberInput(515);\r\n\r\n\tconst solutionPowBeta = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\tconst beta = solutionPowBeta.result;\r\n\r\n\tconst inverted = modInverse(r, p - 1);\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, r, p), [p, alpha, r]);\r\n\r\n\tconst u = solutionPowA.result;\r\n\tconst s = mod(inverted * (h - t * u), p - 1);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={h}. Wygenerować\r\n\t\t\t\t\t\t\t\t\t\tprzez Alicję podpis cyfrowy ElGamala dla tej wiadomości, wiedząc, że Alicja\r\n\t\t\t\t\t\t\t\t\t\tużyła randomizera r={r}.\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='h'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='randomizer'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} modulo={p} power={r} variant={'h4'} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3' align='center' m={2}>\r\n\t\t\t\t\t\t\t\t\t\t\tGenerowanie podpisu:\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<OdwrotnoscTable a={r} b={p - 1} />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t\t\t\t\t\t<b>u</b> = \r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula number={'α'} modulo={'p'} power={'r'} variant={'body1'} /> = \r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={r} modulo={p} variant={'body1'} /> = {u}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t\t\t\t\t\t<b>s</b> = α<sup>-1</sup> * (h - t * u) mod (p -1) = ({inverted} * ({h} - {t} *{' '}\r\n\t\t\t\t\t\t\t\t\t\t{solutionPowA.result})) mod {p - 1} = {s}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t\tPodpis: <b>(u, s)</b> ={' '}\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t({u}, {s})\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpisWeryfikacja() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [beta, setBeta] = useNumberInput(1454);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\r\n\tconst [u, setU] = useNumberInput(1310);\r\n\tconst [s, setS] = useNumberInput(1579);\r\n\r\n\tconst solutionPowF = useMemo(() => getFastPowerMod(alpha, h, p), [p, alpha, h]);\r\n\tconst solutionPowLeft = useMemo(() => getFastPowerMod(beta, u, p), [p, beta, u]);\r\n\tconst solutionPowRight = useMemo(() => getFastPowerMod(u, s, p), [p, u, s]);\r\n\r\n\tconst g = solutionPowF.result;\r\n\tconst f = mod(solutionPowLeft.result * solutionPowRight.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={h}, oraz podpis cyfrowy\r\n\t\t\t\t\t\t\t\t\t\tELGamala (u, s) = ({u}, {s}). Zweryfikuj przez Boba otrzymany od Alicji podpis\r\n\t\t\t\t\t\t\t\t\t\tcyfrowy.\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"h'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"u'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setU}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={u}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='pierwsza wartość z podpisu'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"s'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='druga wartość z podpisu'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t\t\tf = <DisplayFormula number={'α'} power={'h'} modulo={'p'} variant={'body1'} />{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t= {solutionPowF.result}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={h} modulo={p} variant={'h5'} />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowF} pow={p} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t<b>wzór: (a * b) mod c = (a mod c * b mod c) mod c</b>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tg = β<sup>u'</sup> * u'<sup>s'</sup> mod p = \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula number={'β'} power={\"u'\"} modulo={'p'} variant={'body1'} /> * \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula number={\"u'\"} power={\"s'\"} modulo={'p'} variant={'body1'} />\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Grid container justify='center' spacing={2}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowLeft} pow={p} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowRight} pow={p} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tg =  ({solutionPowLeft.result} * {solutionPowRight.result}) mod {p} = \r\n\t\t\t\t\t\t\t\t\t{solutionPowLeft.result * solutionPowRight.result} mod {p} {g == f ? '=' : '≠'}{' '}\r\n\t\t\t\t\t\t\t\t\t{f}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tf {g == f ? '=' : '≠'} g\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t{f} {g == f ? '=' : '≠'} {g}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\t<b>Podpis {g == f ? 'jest' : 'nie jest'} zgodny</b>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpisWeryfikacja;\r\n","import Cezar from './cezar/Cezar';\r\nimport Vigener from './vigener/Vigener';\r\nimport Afiniczny from './afiniczny/Afiniczny';\r\nimport Hill from './hill/Hill';\r\nimport DiffieHellman from './diffie-hellman/DiffieHellman';\r\nimport Odwrotnosc from './odwrotnosc/Odwrotnosc';\r\nimport PotegaMod from './potega-mod/PotegaMod';\r\nimport RSAKlucze from './rsa/RSAKlucze';\r\nimport RSASzyfrowanie from 'rsa/RSASzyfrowanie';\r\nimport RSADeszyfrowanie from 'rsa/RSADeszyfrowanie';\r\nimport RSAPodpis from './rsa/RSAPodpis';\r\nimport RSAPodpisWeryfikacja from './rsa/RSAPodpisWeryfikacja';\r\nimport ElGamal from './elgamal/ElGamal';\r\nimport Mod from './mod/Mod';\r\n\r\nimport ElGamalSzyfrowanie from './elgamal/ElGamalSzyfrowanie';\r\nimport ElGamalDeszyfrowanie from './elgamal/ElGamalDeszyfrowanie';\r\nimport ElGamalPodpis from './elgamal/ElGamalPodpis';\r\nimport ElGamalPodpisWeryfikacja from './elgamal/ElGamalPodpisWeryfikacja';\r\n\r\nconst componentList = [\r\n\t{\r\n\t\tcategoryName: 'Helpers',\r\n\t\tmethods: [\r\n\t\t\t{ component: <Odwrotnosc />, name: 'Odwrotność multiplikatywna' },\r\n\t\t\t{ component: <PotegaMod />, name: 'Potęgowanie modularne' },\r\n\t\t\t{ component: <Mod />, name: 'Modulo' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'Ogólne',\r\n\t\tmethods: [\r\n\t\t\t{ component: <Cezar />, name: 'Cezar' },\r\n\t\t\t{ component: <Afiniczny />, name: 'Afiniczny' },\r\n\t\t\t{ component: <Vigener />, name: 'Vigener' },\r\n\t\t\t{ component: <Hill />, name: 'Hill' },\r\n\t\t\t{ component: <DiffieHellman />, name: 'Diffie Hellman' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'RSA',\r\n\t\tmethods: [\r\n\t\t\t{ component: <RSAKlucze />, name: 'Klucze' },\r\n\t\t\t{ component: <RSASzyfrowanie />, name: 'Szyfrowanie' },\r\n\t\t\t{ component: <RSADeszyfrowanie />, name: 'Deszyfrowanie' },\r\n\t\t\t{ component: <RSAPodpis />, name: 'Podpis' },\r\n\t\t\t{ component: <RSAPodpisWeryfikacja />, name: 'Weryfikacja podpisu' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'El Gamal',\r\n\t\tmethods: [\r\n\t\t\t{ component: <ElGamal />, name: 'Klucze' },\r\n\t\t\t{ component: <ElGamalSzyfrowanie />, name: 'Szyfrowanie' },\r\n\t\t\t{ component: <ElGamalDeszyfrowanie />, name: 'Deszyfrowanie' },\r\n\t\t\t{ component: <ElGamalPodpis />, name: 'Podpis' },\r\n\t\t\t{ component: <ElGamalPodpisWeryfikacja />, name: 'Weryfikacja podpisu' },\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport default componentList;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport componentList from 'componentList';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { useMediaQuery, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdrawer: {\r\n\t\tposition: (isPhone) => (isPhone ? 'fixed' : 'initial'),\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\tzIndex: 1,\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n}));\r\n\r\nexport const PersistentDrawer = ({ isOpen, onClose, onMethodSelect, selectedMethod }) => {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst onMethodClick = (...params) => {\r\n\t\tif (isPhone) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t\tonMethodSelect(...params);\r\n\t};\r\n\r\n\tconst handleClickAway = (params) => {\r\n\t\tif (isPhone) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={handleClickAway}>\r\n\t\t\t<Drawer\r\n\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\tvariant='persistent'\r\n\t\t\t\tanchor='left'\r\n\t\t\t\topen={isOpen}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.drawerHeader}>\r\n\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant='h5'>KryptoBreaker</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t</List>\r\n\t\t\t\t{componentList.map((category, i) => (\r\n\t\t\t\t\t<React.Fragment key={i}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem disabled>\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\talignItems='center'\r\n\t\t\t\t\t\t\t\t\tjustifyContent='center'\r\n\t\t\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='button'>{category.categoryName}</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t{category.methods.map((c, j) => (\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tkey={j}\r\n\t\t\t\t\t\t\t\t\tonClick={() => onMethodClick(i, j)}\r\n\t\t\t\t\t\t\t\t\tselected={i == selectedMethod[0] && j == selectedMethod[1]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={c.name} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t))}\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem component='a' href='https://github.com/Angael/KryptoBreaker' target='_blank'>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary='Github repository' secondary='source code' />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tappBar: {\r\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\thide: {\r\n\t\tdisplay: 'none',\r\n\t},\r\n}));\r\n\r\nexport const NavigationBar = ({ drawerOpen, openDrawer }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar\r\n\t\t\tposition='fixed'\r\n\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t[classes.appBarShift]: drawerOpen,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\taria-label='open drawer'\r\n\t\t\t\t\tonClick={openDrawer}\r\n\t\t\t\t\tedge='start'\r\n\t\t\t\t\tclassName={clsx(classes.menuButton, drawerOpen && classes.hide)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography variant='h6' noWrap>\r\n\t\t\t\t\tKryptoBreaker\r\n\t\t\t\t</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport useLocalStorage from 'utils/useLocalStorage';\r\n\r\nimport componentList from './componentList';\r\n\r\nimport { PersistentDrawer } from 'nav/PersistentDrawer';\r\nimport { NavigationBar } from './nav/NavigationBar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpaddingTop: '5rem',\r\n\t\tpadding: theme.spacing(0),\r\n\t\t// transition: theme.transitions.create('margin', {\r\n\t\t// \teasing: theme.transitions.easing.sharp,\r\n\t\t// \tduration: theme.transitions.duration.leavingScreen,\r\n\t\t// }),\r\n\t\tmarginLeft: (isPhone) => (isPhone ? 0 : -drawerWidth),\r\n\t},\r\n\tcontentShift: {\r\n\t\t// transition: theme.transitions.create('margin', {\r\n\t\t// \teasing: theme.transitions.easing.easeOut,\r\n\t\t// \tduration: theme.transitions.duration.enteringScreen,\r\n\t\t// }),\r\n\t\tmarginLeft: (isPhone) => 0, // If this isnt a function, then marginLeft in content:{} wins in priority lol\r\n\t},\r\n}));\r\n\r\nfunction App() {\r\n\t// Category and component indexes in componentList.js\r\n\tconst [indexes, setIndexes] = useLocalStorage('method', [0, 0]);\r\n\tconst [drawerOpen, setDrawerOpen] = useLocalStorage('drawerOpen', true);\r\n\r\n\tconst selectedCategory = componentList[indexes[0]];\r\n\tconst selectedMethod = selectedCategory.methods[indexes[1]] || {};\r\n\r\n\tconst openDrawer = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetDrawerOpen(true);\r\n\t};\r\n\r\n\tconst onMethodSelect = (categoryIndex, componentIndex) => {\r\n\t\tsetIndexes([categoryIndex, componentIndex]);\r\n\t};\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst catVariant = isPhone ? 'body1' : 'h5';\r\n\tconst methodVariant = isPhone ? 'h5' : 'h4';\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<NavigationBar drawerOpen={drawerOpen} openDrawer={openDrawer} />\r\n\t\t\t<PersistentDrawer\r\n\t\t\t\tisOpen={drawerOpen}\r\n\t\t\t\tonClose={() => setDrawerOpen(false)}\r\n\t\t\t\tonMethodSelect={onMethodSelect}\r\n\t\t\t\tselectedMethod={indexes}\r\n\t\t\t/>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(classes.content, {\r\n\t\t\t\t\t[classes.contentShift]: drawerOpen,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t<Box mb={4}>\r\n\t\t\t\t\t\t<Typography variant={catVariant}>{selectedCategory.categoryName}</Typography>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Typography variant={methodVariant}>{selectedMethod.name}</Typography>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box my={4}>{selectedMethod.component}</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}