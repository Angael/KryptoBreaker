{"version":3,"sources":["utils/useLocalStorage.js","utils/line-for-letter/LineForLetter.jsx","cezar/SolutionPerChar.jsx","cezar/Cezar.jsx","vigener/SolutionPerChar.jsx","vigener/Vigener.jsx","afiniczny/SolutionPerChar.jsx","afiniczny/AfinicznyKluczLiczenie.jsx","diffie-hellman/useNumberInput.js","afiniczny/Afiniczny.jsx","diffie-hellman/DisplayFormula.jsx","utils/fast-power-table/getFastPowerMod.js","utils/fast-power-table/BinaryExplanator.jsx","utils/fast-power-table/FastPowerTable.jsx","diffie-hellman/DiffieHellman.jsx","odwrotnosc/OdwrotnoscTable.jsx","odwrotnosc/Odwrotnosc.jsx","potega-mod/PotegaMod.jsx","rsa/KluczeDisplay.jsx","rsa/RSAKlucze.jsx","rsa/RSASzyfrowanie.jsx","rsa/RSADeszyfrowanie.jsx","rsa/RSAPodpis.jsx","rsa/RSAPodpisWeryfikacja.jsx","elgamal/KluczeDisplay.jsx","elgamal/ElGamal.jsx","mod/Mod.jsx","elgamal/ElGamalSzyfrowanie.jsx","elgamal/ElGamalDeszyfrowanie.jsx","elgamal/ElGamalPodpis.jsx","elgamal/ElGamalPodpisWeryfikacja.jsx","cheat-sheet/CheatSheet.jsx","componentList.js","nav/PersistentDrawer.jsx","nav/key-explanation/KeyExplanation.jsx","nav/NavigationBar.jsx","App.jsx","index.js","utils/KryptoTable.jsx","utils/WordAndSolution.jsx","utils/numHelpers.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","LineForLetter","letter","resultLetter","children","Box","display","alignItems","m","fontSize","SolutionPerChar","keyValue","isEncr","isEncryption","letterCode","getCode","letterAndCode","afterMod","mod","getLetter","Cezar","word","setWord","setKey","isEncrypt","setIsEncrypt","result","crypted","newKey","parseInt","c","cezarEncrypt","Grid","container","xs","p","TextField","label","onChange","event","target","FormControl","InputLabel","Select","MenuItem","type","Number","Typography","variant","WordAndSolution","startStr","endStr","KryptoTable","split","map","i","keyCode","letterAndKey","Vigener","length","k","vigenerEncrypt","middleTableRow","useMemo","arr","forEach","v","push","middleNumbersArr","code","calculationJsx","a","b","isNaN","invertedA","NaN","modInverse","AfinicznyKluczLiczenie","num","n","results","getStepsForInverseKey","step","useNumberInput","val","setVal","e","numberValue","affineNumber","number","isEncode","Afiniczny","setNumber","setP","keys","setKeys","isWord","setIsWord","replace","undefined","str","character","affineString","placeholder","helperText","my","DisplayFormula","power","modulo","textAlign","component","getFastPowerMod","reversedBinaryArray","dec2bin","reverse","steps","x","t","helperTextA","helperTextX","prevT","prevA","prevX","BinaryExplanator","binary","join","answerCss","css","calculationNumbersCss","TableCellHoverable","withStyles","root","backgroundColor","TableCell","TableRowColored","theme","palette","action","hover","TableRow","TableRowHeader","primary","light","color","contrastText","FastPowerTable","stepsObj","pow","hoveringXRow","setHoveringXRow","onStartHover","TableContainer","props","Paper","Table","TableHead","align","TableBody","isLast","shouldBeHighlighted","xCss","aCss","Tooltip","title","className","onMouseEnter","onMouseLeave","DiffieHellman","g","setG","setA","setB","pIsPrime","isPrime","solutionPowA","solutionPowB","solutionPowAMaster","solutionPowBMaster","pb","cellCss","noSelect","useStyles","makeStyles","maxWidth","OdwrotnoscTable","given_a","given_b","r","u","rows","prevRow","uprim","vprim","q","Math","floor","getValues","values","inverted","shift","useTheme","isPhone","useMediaQuery","breakpoints","down","classes","el","index","py","Odwrotnosc","setN","PotegaMod","setPow","setModulo","justify","sm","md","KluczeDisplay","d","RSAKlucze","setQ","setE","phi","RSASzyfrowanie","message","setMessage","setD","solutionPow","RSADeszyfrowanie","y","setY","RSAPodpis","setX","RSAPodpisWeryfikacja","s","setS","beta","ElGamal","setT","Mod","setNum","ElGamalSzyfrowanie","alpha","setAlpha","setR","solutionPowY1","solutionPowY2","y1","y2","disabled","gutterBottom","ElGamalDeszyfrowanie","setY1","setY2","solutionPowX","pt","ElGamalPodpis","h","setH","ElGamalPodpisWeryfikacja","setU","solutionPowF","solutionPowLeft","solutionPowRight","f","spacing","CheatSheet","letters","Array","fill","_","Hill","React","lazy","componentList","categoryName","methods","name","drawer","position","width","flexShrink","zIndex","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","PersistentDrawer","isOpen","onClose","onMethodSelect","selectedMethod","ClickAwayListener","onClickAway","params","Drawer","anchor","open","paper","IconButton","onClick","category","Fragment","List","ListItem","j","button","onMethodClick","selected","ListItemText","Divider","href","ListItemIcon","secondary","KeyExplanation","Dialog","PaperComponent","aria-labelledby","fullScreen","DialogTitle","DialogContent","DialogContentText","mb","DialogActions","Button","autoFocus","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","rightButton","flex","hide","NavigationBar","drawerOpen","openDrawer","explanationOpen","setExplanationOpen","AppBar","clsx","Toolbar","aria-label","edge","noWrap","content","flexGrow","paddingTop","contentShift","App","indexes","setIndexes","setDrawerOpen","selectedCategory","methodVariant","stopPropagation","categoryIndex","componentIndex","Container","Breadcrumbs","elevation","fallback","ReactDOM","render","document","getElementById","startRow","scope","startNumbers","endNumbers","endRow","middleRow","flexDirection","arrow","transform","boxCenterProps","toLowerCase","charCodeAt","String","fromCharCode","dec","toString"],"mappings":"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","file":"static/js/main.d45962c2.chunk.js","sourcesContent":["// Hook\r\nimport { useState } from 'react';\r\nfunction useLocalStorage(key, initialValue) {\r\n\t// State to store our value\r\n\t// Pass initial state function to useState so logic is only executed once\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\t// Get from local storage by key\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t// Parse stored json or if none return initialValue\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\t// If error also return initialValue\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\t// Return a wrapped version of useState's setter function that ...\r\n\t// ... persists the new value to localStorage.\r\n\tconst setValue = (value) => {\r\n\t\ttry {\r\n\t\t\t// Allow value to be a function so we have same API as useState\r\n\t\t\tconst valueToStore = value instanceof Function ? value(storedValue) : value;\r\n\t\t\t// Save state\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t// Save to local storage\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\t// A more advanced implementation would handle the error case\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction LineForLetter({ letter, resultLetter, children }) {\r\n\treturn (\r\n\t\t<Box display='flex' alignItems='center'>\r\n\t\t\t<Box m={2}>{letter}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{children}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{resultLetter}</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default LineForLetter;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Cezar() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState(0);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst cezarEncrypt = () => {\r\n\t\tlet crypted = '';\r\n\t\tlet newKey = parseInt(key * (isEncrypt ? 1 : -1)) || 0;\r\n\t\tfor (let c of word) {\r\n\t\t\tcrypted += getLetter(getCode(c) + newKey);\r\n\t\t}\r\n\t\treturn crypted;\r\n\t};\r\n\r\n\tlet result = cezarEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(Number(event.target.value));\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<TextField label='key' type='number' onChange={changeKey} value={key} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t))}\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Cezar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst keyCode = getCode(keyValue);\r\n\r\n\tconst letterAndKey = isEncr ? letterCode + keyCode : letterCode - keyCode;\r\n\r\n\tconst afterMod = mod(letterAndKey, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>({keyValue})</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {keyCode}) mod 26 ={' '}\r\n\t\t\t{letterAndKey} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState, useMemo } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Vigener() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst vigenerEncrypt = () => {\r\n\t\tconst length = key?.length || 0;\r\n\t\tif (length) {\r\n\t\t\tlet crypted = '';\r\n\t\t\tfor (let i in word) {\r\n\t\t\t\tconst c = word[i];\r\n\t\t\t\tconst k = key[i % length];\r\n\t\t\t\tcrypted += getLetter(mod(getCode(c) + getCode(k) * (isEncrypt ? 1 : -1)));\r\n\t\t\t}\r\n\t\t\treturn crypted;\r\n\t\t} else return word;\r\n\t};\r\n\r\n\tlet result = vigenerEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\tconst middleTableRow = useMemo(() => {\r\n\t\tif (word && key) {\r\n\t\t\tconst arr = [];\r\n\t\t\tword.split('').forEach((v, i) => arr.push(key[i % key.length]));\r\n\t\t\treturn arr.map((v) => getCode(v));\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, [word, key]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<TextField label='key' type='text' onChange={changeKey} value={key} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t<KryptoTable\r\n\t\t\t\t\tstartStr={word}\r\n\t\t\t\t\tendStr={result}\r\n\t\t\t\t\tmiddleNumbersArr={middleTableRow}\r\n\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t\t{key && (\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t<SolutionPerChar\r\n\t\t\t\t\t\t\tkey={c + i}\r\n\t\t\t\t\t\t\tletter={c}\r\n\t\t\t\t\t\t\tkeyValue={key[i % key.length]}\r\n\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Vigener;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, a, b, isEncryption: isEncr, p = 26 }) {\r\n\tconst letterCode = isNaN(letter) ? getCode(letter) : letter;\r\n\r\n\tlet code;\r\n\tlet invertedA = NaN;\r\n\tlet calculationJsx;\r\n\tif (!isEncr) {\r\n\t\tinvertedA = modInverse(a, p);\r\n\t\tcode = invertedA * (letterCode - b);\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{invertedA} * ({letterCode} - {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tcode = letterCode * a + b;\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{a} * ({letterCode} + {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tconst afterMod = mod(code, p);\r\n\r\n\tconst resultLetter = isNaN(letter) ? getLetter(afterMod) : null;\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={resultLetter}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>\r\n\t\t\t\t({a},{b})\r\n\t\t\t</sub>\r\n\t\t\t({letterCode}) = ({calculationJsx}) mod {p} = {code} mod {p} = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nconst getStepsForInverseKey = (num, n = 26) => {\r\n\tconst results = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tresults.push(`${num} * ${i} mod ${n} = ${mod(num * i, n)}`);\r\n\t\tif ((num * i) % n === 1) {\r\n\t\t\tresults.push('Found inverted key = ' + i);\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nfunction AfinicznyKluczLiczenie({ a, n }) {\r\n\tconst steps = getStepsForInverseKey(a, n);\r\n\treturn steps.map((step) => (\r\n\t\t<Box key={step}>\r\n\t\t\t<Typography>{step}</Typography>\r\n\t\t</Box>\r\n\t));\r\n}\r\n\r\nexport default AfinicznyKluczLiczenie;\r\n","import { useState } from 'react';\r\n\r\nconst useNumberInput = (initialValue) => {\r\n\tconst [val, setVal] = useState(initialValue || 0);\r\n\r\n\tconst setValueWithEvent = (e) => {\r\n\t\tconst numberValue = Number(e.target.value);\r\n\t\tif (isNaN(numberValue)) {\r\n\t\t\t// do nothing\r\n\t\t} else {\r\n\t\t\tsetVal(numberValue);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [val, setValueWithEvent];\r\n};\r\n\r\nexport default useNumberInput;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport AfinicznyKluczLiczenie from './AfinicznyKluczLiczenie';\r\nimport useNumberInput from './../diffie-hellman/useNumberInput';\r\n\r\nconst affineNumber = (number, [a, b], isEncode, p) => {\r\n\tlet result;\r\n\tif (!isEncode) {\r\n\t\tconst newA = modInverse(a, p);\r\n\t\tresult = newA * (number - b);\r\n\t} else {\r\n\t\tresult = number * a + b;\r\n\t}\r\n\r\n\treturn mod(result, p);\r\n};\r\n\r\nconst affineString = (str, [a, b], isEncode, p = 26) => {\r\n\tlet result = '';\r\n\tfor (let character of str) {\r\n\t\tconst code = affineNumber(getCode(character), [a, b], isEncode, p);\r\n\r\n\t\tresult += getLetter(mod(code, 26));\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nfunction Afiniczny() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [number, setNumber] = useNumberInput(25);\r\n\tconst [p, setP] = useNumberInput(31);\r\n\tconst [keys, setKeys] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\tconst [isWord, setIsWord] = useState(true);\r\n\r\n\tconst [a = 0, b = 0] = keys.replace(/\\s/, '').split(',').map(Number);\r\n\r\n\tlet result;\r\n\tif (isWord) {\r\n\t\tresult =\r\n\t\t\tword && a !== undefined && b !== undefined ? affineString(word, [a, b], isEncrypt) : '';\r\n\t} else {\r\n\t\tresult = affineNumber(number, [a, b], isEncrypt, p);\r\n\t}\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeKey = (event) => setKeys(event.target.value);\r\n\tconst changeIsEncryption = (e, v) => setIsEncrypt(e.target.value);\r\n\tconst changeIsWord = (e, v) => setIsWord(e.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t{isWord ? (\r\n\t\t\t\t\t\t\t<TextField label='Wiadomość' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<TextField label='Liczba' onChange={setNumber} value={number} type='number' />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<InputLabel>Enkrypcja?</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t<MenuItem value={true}>Enkrypcja</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={false}>Dekrypcja</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='Klucze x,y'\r\n\t\t\t\t\t\t\tplaceholder={'3,7'}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tonChange={changeKey}\r\n\t\t\t\t\t\t\tvalue={keys}\r\n\t\t\t\t\t\t\thelperText='Wymagany format x,y'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<InputLabel>Word/nr</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={isWord} onChange={changeIsWord}>\r\n\t\t\t\t\t\t\t\t<MenuItem value={true}>Word</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={false}>Nr</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t{!isWord && (\r\n\t\t\t\t\t\t\t<Box my={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\tZ<sub>p</sub> = Z<sub>{p}</sub> = Ile jest liczb w szyfrze\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{isWord && (\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Rozwiązanie:</Typography>\r\n\t\t\t\t\t<WordAndSolution startStr={word} endStr={result} />\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t\t{isWord && (\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t\t{!isEncrypt && (\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Klucz odwrócony:</Typography>\r\n\t\t\t\t\t<AfinicznyKluczLiczenie a={a} n={p} />\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\r\n\t\t\t{isWord ? (\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\r\n\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} a={a} b={b} isEncryption={isEncrypt} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t) : (\r\n\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t<Typography variant='h4'>Rozwiązanie:</Typography>\r\n\t\t\t\t\t<SolutionPerChar letter={number} a={a} b={b} isEncryption={isEncrypt} p={p} />\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Afiniczny;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nfunction DisplayFormula({ number, power, modulo, variant = 'body1' }) {\r\n\treturn (\r\n\t\t<Box textAlign='center' display='inline'>\r\n\t\t\t<Typography variant={variant} component='span'>\r\n\t\t\t\t{number} <sup>{power}</sup> mod {modulo}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DisplayFormula;\r\n","import { mod } from 'utils/numHelpers';\r\nimport { dec2bin } from 'utils/numHelpers';\r\n\r\n/**\r\n *\r\n * @param {number} number - Liczba podnoszona do potęgi, ta po lewej\r\n * @param {number} power - potęga\r\n * @param {number} modulo - Modulo\r\n */\r\nconst getFastPowerMod = (number, power, modulo) => {\r\n\t// np 011011101\r\n\tconst binaryString = dec2bin(power);\r\n\tconst reversedBinaryArray = binaryString.split('').reverse();\r\n\r\n\tif (!reversedBinaryArray.length) {\r\n\t\treturn 'rip, nie chce mi sie pisac error handlingu';\r\n\t}\r\n\r\n\tconst steps = [];\r\n\tsteps.push({\r\n\t\ti: 0,\r\n\t\tx: 1,\r\n\t\ta: number,\r\n\t\tt: Number(reversedBinaryArray[0]),\r\n\t\thelperTextA: 'initial value is g = ' + number,\r\n\t\thelperTextX: 'initial value is always 1 ',\r\n\t});\r\n\r\n\tfor (let i = 1; i < reversedBinaryArray.length + 1; i++) {\r\n\t\tconst t = Number(reversedBinaryArray[i]);\r\n\t\tconst prevT = steps[i - 1].t;\r\n\t\tconst prevA = steps[i - 1].a;\r\n\t\tconst prevX = steps[i - 1].x;\r\n\r\n\t\tlet helperTextX = '';\r\n\r\n\t\tlet a = mod(prevA * prevA, modulo);\r\n\t\tif (i === reversedBinaryArray.length) {\r\n\t\t\ta = '';\r\n\t\t}\r\n\t\tlet helperTextA = `${prevA} * ${prevA} mod ${modulo} =  ${a}`;\r\n\r\n\t\tlet x;\r\n\t\tif (prevT) {\r\n\t\t\tx = mod(prevX * prevA, modulo);\r\n\t\t\thelperTextX = `${prevX} * ${prevA} mod ${modulo} =  ${x}`;\r\n\t\t} else {\r\n\t\t\tx = prevX;\r\n\t\t\thelperTextX = `unchanged because previous t is 0 = ${x}`;\r\n\t\t}\r\n\t\tsteps.push({ i, x, a, t, helperTextA, helperTextX });\r\n\t}\r\n\r\n\tconst result = steps[steps.length - 1].x;\r\n\treturn {\r\n\t\tresult,\r\n\t\tsteps,\r\n\t};\r\n};\r\n\r\nexport default getFastPowerMod;\r\n","import { dec2bin } from 'utils/numHelpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BinaryExplanator({ num }) {\r\n\tconst binary = dec2bin(num);\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t{num} to binary is {binary}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>in reverse it's [{binary.split('').reverse().join(',')}] = t</Box>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default BinaryExplanator;\r\n","import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BinaryExplanator from 'utils/fast-power-table/BinaryExplanator';\r\n\r\nconst answerCss = css`\r\n\tbackground: #97ffa7;\r\n\ttext-decoration: underline;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst calculationNumbersCss = css`\r\n\tbackground: #ffd0ce;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst TableCellHoverable = withStyles({\r\n\troot: {\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'rgb(0 ,0, 0, 0.1)',\r\n\t\t},\r\n\t},\r\n})(TableCell);\r\n\r\nconst TableRowColored = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst TableRowHeader = withStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t'& th': {\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nfunction FastPowerTable({ stepsObj, pow }) {\r\n\tconst [hoveringXRow, setHoveringXRow] = useState(null);\r\n\tconst onStartHover = (i) => () => {\r\n\t\tsetHoveringXRow(i);\r\n\t};\r\n\tconst onEndHover = (i) => () => {\r\n\t\tsetHoveringXRow(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BinaryExplanator num={pow} />\r\n\t\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRowHeader>\r\n\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tx<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tt<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRowHeader>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{stepsObj.steps.map(({ i, x, a, t, helperTextA, helperTextX }) => {\r\n\t\t\t\t\t\t\tconst isLast = i === stepsObj.steps.length - 1;\r\n\r\n\t\t\t\t\t\t\tconst shouldBeHighlighted = hoveringXRow === i + 1;\r\n\t\t\t\t\t\t\tconst xCss = isLast ? answerCss : shouldBeHighlighted ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\tconst aCss = shouldBeHighlighted && !!t ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRowColored key={i}>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{i}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextX}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCellHoverable\r\n\t\t\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={xCss}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={onStartHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={onEndHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{x}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t{!isLast && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextA}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCellHoverable align='center' className={aCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{a}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{!isLast && <TableCell align='center'>{t}</TableCell>}\r\n\t\t\t\t\t\t\t\t</TableRowColored>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default FastPowerTable;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DisplayFormula from './DisplayFormula';\r\nimport useNumberInput from './useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nfunction DiffieHellman() {\r\n\tconst [p, setP] = useNumberInput(1019);\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [a, setA] = useNumberInput(638);\r\n\tconst [b, setB] = useNumberInput(719);\r\n\r\n\tconst pIsPrime = useMemo(() => isPrime(p), [p]);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, a, p), [p, g, a]);\r\n\tconst solutionPowB = useMemo(() => getFastPowerMod(g, b, p), [p, g, b]);\r\n\r\n\tconst solutionPowAMaster = useMemo(() => getFastPowerMod(solutionPowA.result, b, p), [\r\n\t\tp,\r\n\t\tsolutionPowA.result,\r\n\t\tb,\r\n\t]);\r\n\tconst solutionPowBMaster = useMemo(() => getFastPowerMod(solutionPowB.result, a, p), [\r\n\t\tp,\r\n\t\tsolutionPowB.result,\r\n\t\tb,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' helperText='public' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText={pIsPrime ? 'public' : 'p has to be prime'}\r\n\t\t\t\t\t\t\terror={!pIsPrime}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='a'\r\n\t\t\t\t\t\t\tonChange={setA}\r\n\t\t\t\t\t\t\tvalue={a}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='private for person 1'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='b'\r\n\t\t\t\t\t\t\tonChange={setB}\r\n\t\t\t\t\t\t\tvalue={b}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='private for person 2'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t<Typography variant='h3'>Calculating Public keys:</Typography>\r\n\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\tPerson 1 generates random private key a, Person 2 generates random private key b.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\tThen they calculate public keys they can give eachother in a NOT secure way.\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={a} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t<DisplayFormula number={g} modulo={p} power={b} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t<Typography variant='h4'>Fast modulo power method (!):</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={a} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowB} pow={b} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t<Typography variant='h3'>Calculating Master (private) key:</Typography>\r\n\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\tAfter Person 1 received Person 2 Public key, and vice versa, they can both calculate the\r\n\t\t\t\t\tsame private key.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\tThen they can use this key to encrypt their communication, without ever sending this\r\n\t\t\t\t\tprivate key.\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t<DisplayFormula number={solutionPowB.result} modulo={p} power={a} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t<DisplayFormula number={solutionPowA.result} modulo={p} power={b} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowBMaster} pow={a} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowAMaster} pow={b} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DiffieHellman;\r\n","import { useState, useMemo } from 'react';\r\nimport { Paper, Box, Typography, useMediaQuery } from '@material-ui/core';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport { mod } from '../utils/numHelpers';\r\nimport { useTheme, makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst cellCss = css`\r\n\tbackground: #f0e98b;\r\n`;\r\n\r\nconst noSelect = css`\r\n\tuser-select: none;\r\n`;\r\n\r\nconst TableRowHeader = withStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t'& th': {\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst TableRowColored = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100vw - 66px)',\r\n\t},\r\n}));\r\n\r\nfunction OdwrotnoscTable({ a, b }) {\r\n\tconst getValues = (given_a, given_b) => {\r\n\t\tconst rows = [];\r\n\r\n\t\tlet i = 0;\r\n\t\tlet r, b, u, v;\r\n\t\twhile (r != 0) {\r\n\t\t\tconst prevRow = i === 0 ? null : rows[i - 1];\r\n\t\t\tconst a = prevRow ? prevRow['b'] : given_a;\r\n\t\t\tb = prevRow ? prevRow['r'] : given_b;\r\n\t\t\tu = prevRow ? prevRow['uprim'] - prevRow['q'] * prevRow['u'] : 0;\r\n\t\t\tconst uprim = prevRow ? prevRow['u'] : 1;\r\n\t\t\tv = prevRow ? prevRow['vprim'] - prevRow['q'] * prevRow['v'] : 1;\r\n\t\t\tconst vprim = prevRow ? prevRow['v'] : 0;\r\n\t\t\tconst q = Math.floor(a / b);\r\n\t\t\tr = mod(a, b);\r\n\r\n\t\t\trows.push({ u, uprim, v, vprim, a, b, q, r });\r\n\r\n\t\t\ti++;\r\n\t\t\tif (isNaN(r)) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [rows, u];\r\n\t};\r\n\r\n\tconst [values, inverted] = getValues(a, b);\r\n\tvalues.shift(); // dont ask\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\treturn (\r\n\t\tb != 0 && (\r\n\t\t\t<>\r\n\t\t\t\t<Box my={2}>\r\n\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t{a}\r\n\t\t\t\t\t\t<sup>-1</sup> mod {b}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<TableContainer\r\n\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\tcomponent={(props) => <Paper variant='outlined' {...props} />}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRowHeader>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tu<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tu<sub>i</sub>'\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tv<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tv<sub>i</sub>'\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tn<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tq<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\t\tr<sub>i</sub>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRowHeader>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{values.map((el, index) => {\r\n\t\t\t\t\t\t\t\tconst { u, uprim, v, vprim, a, b, q, r } = el;\r\n\t\t\t\t\t\t\t\tconst isLast = values.length - 1 === index;\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRowColored>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{index}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{v}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{vprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' className={isLast && cellCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t{u}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{uprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{a}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{b}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{q}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center'>{r}</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRowColored>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Box py={1}>\r\n\t\t\t\t\t<Typography variant='h4'>\r\n\t\t\t\t\t\t{inverted} mod {b} = <u>{mod(inverted, b)}</u>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Typography variant='caption'>\r\n\t\t\t\t\t\t<span className={noSelect}>Sprawdzenie: </span>\r\n\t\t\t\t\t\t{a} * {mod(inverted, b)} mod {b} = {mod(a * mod(inverted, b), b)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t)\r\n\t);\r\n}\r\n\r\nexport default OdwrotnoscTable;\r\n","import { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport OdwrotnoscTable from './OdwrotnoscTable';\r\n\r\nfunction Odwrotnosc() {\r\n\tconst [a, setA] = useNumberInput(215);\r\n\tconst [n, setN] = useNumberInput(25);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='Liczba' type='number' onChange={setA} value={a} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<TextField label='modulo' placeholder={26} type='number' onChange={setN} value={n} />\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Typography variant='h4'>Odwrotność modularna:</Typography>\r\n\r\n\t\t\t\t<OdwrotnoscTable a={a} b={n} />\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Odwrotnosc;\r\n","import { useMemo } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\n\r\nfunction PotegaMod() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [pow, setPow] = useNumberInput(638);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, pow, modulo), [modulo, g, pow]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='Potęga' onChange={setPow} value={pow} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t<DisplayFormula number={g} power={pow} modulo={modulo} variant={'h4'} />\r\n\t\t\t</Box>\r\n\t\t\t<Grid container justify='center'>\r\n\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={pow} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default PotegaMod;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ e, d, n }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h3'>Klucze:</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (e, n) = ({e}, {n}) - Publiczne\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (d, n) = ({d}, {n}) - Prywatne\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction RSAKlucze() {\r\n\tconst [p, setP] = useNumberInput(37);\r\n\tconst [q, setQ] = useNumberInput(47);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\r\n\tconst n = p * q;\r\n\tconst phi = (p - 1) * (q - 1);\r\n\tconst d = modInverse(e, phi);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='q'\r\n\t\t\t\t\t\t\tonChange={setQ}\r\n\t\t\t\t\t\t\tvalue={q}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wylosowana wartość druga'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wylosowana liczba całkowita od 1 do Φ'\r\n\t\t\t\t\t\t\terror={e > phi || e <= 1 || e % 1 !== 0}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tn = {p} * {q} = {n}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tphi = Φ = ({p} - 1) * ({q}- 1)= {phi}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\td = <DisplayFormula number={e} power={-1} modulo={phi} variant={'body1'} /> = {d}\r\n\t\t\t\t\t\t<OdwrotnoscTable a={e} b={phi} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAKlucze;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSASzyfrowanie() {\r\n\t//Wiadomość x\r\n\tconst [message, setMessage] = useNumberInput(20);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(message, e, n), [n, message, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość, której wartość wynosi x={message} zaszyfrowaną przy\r\n\t\t\t\t\t\tużyciu algorytmu RSA. Oblicz wartość szyfrogramu y.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\tonChange={setMessage}\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h3'>Szyfrowanie:</Typography>\r\n\t\t\t\t\t\ty = c =<DisplayFormula number={'x'} power={'e'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t<DisplayFormula number={message} power={e} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\tSzyfrogram y = {solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={e} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSASzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSADeszyfrowanie() {\r\n\t//Zaszyfrowana wiadomosc x, szyfrogram y\r\n\tconst [y, setY] = useNumberInput(1327);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// y^d mod n\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(y, d, n), [n, y, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram y={y}. Obliczyć przez Alicję wartość tekstu jawnego\r\n\t\t\t\t\t\tx.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='y' onChange={setY} value={y} type='number' helperText='Szyfrogram' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h3'>Deszyfrowanie:</Typography>x = wiadomość ={' '}\r\n\t\t\t\t\t\t<DisplayFormula number={'y'} power={'d'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t<DisplayFormula number={y} power={d} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\tWiadomość x = {solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSADeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpis() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(x, d, n), [n, x, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={x}. Wygenerować przez\r\n\t\t\t\t\t\tAlicję podpis cyfrowy RSA dla tej wiadomości.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h3'>Generowanie podpisu:</Typography>\r\n\t\t\t\t\t\tpodpis s = <DisplayFormula\r\n\t\t\t\t\t\t\tnumber={'h'}\r\n\t\t\t\t\t\t\tpower={'d'}\r\n\t\t\t\t\t\t\tmodulo={'n'}\r\n\t\t\t\t\t\t\tvariant={'body1'}\r\n\t\t\t\t\t\t/> = <DisplayFormula number={x} power={d} number={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\tPodpis s = {solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpisWeryfikacja() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [s, setS] = useNumberInput(1630);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(s, e, n), [n, s, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={x}, oraz jej podpis cyfrowy RSA\r\n\t\t\t\t\t\ts={s}. Zweryfikuj przez Boba otrzymany od Alicji podpis cyfrowy.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='s'\r\n\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Podpis który weryfikujemy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\th = <DisplayFormula number={'s'} power={'e'} modulo={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t<DisplayFormula number={s} power={e} modulo={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\tWynik sprawdzenia = {solutionPow.result} = {x} = h\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2} pb={3} align='center'>\r\n\t\t\t\t\t\tPodpis {x === solutionPow.result ? 'jest' : 'nie jest'} poprawny, ponieważ wartość\r\n\t\t\t\t\t\tskrótu wysłana przez alicję {x === solutionPow.result ? 'jest' : 'nie jest'} taka sama\r\n\t\t\t\t\t\tjak wartość skrótu wiadomości odebranej przez boba.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={e} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpisWeryfikacja;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ p, g, beta, t }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h4'>Klucze:</Typography>\r\n\t\t\t<Typography variant='caption'>zmiana oznaczeń: α ≡ g</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (p, α, β) = ({p}, {g}, {beta}) - publiczny\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (p, t) = ({p}, {t}) - prywatny\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction ElGamal() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(g, t, p), [p, g, t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\tAlicja chce wygenerować klucze asymetryczne ElGamala. W tym celu przyjęła wartość{' '}\r\n\t\t\t\t\t\t<b>p={p}</b> oraz generator <b>g={g}</b>.<br />\r\n\t\t\t\t\t\tWyznacz klucze asymetryczne Alicji dla jej wartości prywatnej <b>t={t}</b>.\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='g albo α'\r\n\t\t\t\t\t\t\tonChange={setG}\r\n\t\t\t\t\t\t\tvalue={g}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' helperText='p?' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t<DisplayFormula number={g} modulo={p} power={t} variant={'h4'} />\r\n\t\t\t</Box>\r\n\t\t\t<Grid container justify='center'>\r\n\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<KluczeDisplay p={p} g={g} beta={solutionPowA.result} t={t} />\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamal;\r\n","import { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\n\r\nfunction Mod() {\r\n\tconst [num, setNum] = useNumberInput(2);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst result = mod(num, modulo);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='Number' onChange={setNum} value={num} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t<DisplayFormula number={num} power={''} modulo={modulo} variant={'h4'} />\r\n\t\t\t\t<Typography variant={'h4'} display='inline'>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t= {result}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Mod;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, useMediaQuery } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction ElGamalSzyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [x, setX] = useNumberInput(20);\r\n\tconst [r, setR] = useNumberInput(320);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst solutionPowY1 = useMemo(() => getFastPowerMod(alpha, r, p), [p, alpha, r]);\r\n\tconst solutionPowY2 = useMemo(() => getFastPowerMod(beta, r, p), [p, beta, r]);\r\n\tconst y1 = solutionPowY1.result;\r\n\tconst y2 = mod(x * solutionPowY2.result, p);\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość której wartość liczbowa wynosi x={x}.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tOblicz wartość tekstu zaszyfrowanego y, wiedząc, że do zaszyfrowania wybrany został\r\n\t\t\t\t\t\t\trandomizer r={r}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='x' onChange={setX} value={x} type='number' helperText='Wiadomość' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='r' onChange={setR} value={r} type='number' helperText='Randomizer' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant={isPhone ? 'body1' : 'h4'} align='center'>\r\n\t\t\t\t\t\t\t\t\tC = (y<sub>1</sub>, y<sub>2</sub>) = E\r\n\t\t\t\t\t\t\t\t\t<sub>\r\n\t\t\t\t\t\t\t\t\t\tk<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t</sub>\r\n\t\t\t\t\t\t\t\t\t(r,x) = (α<sup>r</sup> mod p, x * β<sup>r</sup> mod p)\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\tLiczenie y<sub>1</sub>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<DisplayFormula number={alpha} power={r} modulo={p} />\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY1} pow={r} />{' '}\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\ty<sub>1</sub>= {y1}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\tLiczenie y<sub>2</sub>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{x} * <DisplayFormula number={beta} power={r} modulo={p} />\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY2} pow={r} />\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\ty<sub>2</sub> = {x} * {solutionPowY2.result} mod {p} = {y2}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\tWynik = (y<sub>1</sub>, y<sub>2</sub>) = ({y1}, {y2})\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalSzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, useMediaQuery } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction ElGamalDeszyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [y1, setY1] = useNumberInput(130);\r\n\tconst [y2, setY2] = useNumberInput(414);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst power = p - 1 - t;\r\n\tconst error = power <= 0 || power % 1 !== 0;\r\n\tconst solutionPowX = useMemo(() => getFastPowerMod(y1, power, p), [p, y1, power]);\r\n\r\n\tconst x = mod(y2 * solutionPowX.result, p);\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram Y=({y1}, {y2})\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography> Obliczyć przez Alicję wartość tekstu jawnego x.</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\ty<sub>1</sub>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={setY1}\r\n\t\t\t\t\t\t\tvalue={y1}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\ty<sub>2</sub>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={setY2}\r\n\t\t\t\t\t\t\tvalue={y2}\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t<Box m={1} pt={2} display='inline-block'>\r\n\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant={isPhone ? 'body1' : 'h4'} align='center'>\r\n\t\t\t\t\t\t\t\t\tX = P = y<sub>2</sub>* y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t<sup>p - 1 - t</sup> mod p\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box m={1} pb={2} display='inline-block'>\r\n\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant={isPhone ? 'body1' : 'h4'} align='center'>\r\n\t\t\t\t\t\t\t\t\tX = P = {y2} * {y1}\r\n\t\t\t\t\t\t\t\t\t<sup>{p - 1 - t}</sup> mod {p}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={0} sm={2} md={3}></Grid>\r\n\t\t\t\t<Grid item xs={12} sm={8} md={6} align='center'>\r\n\t\t\t\t\t<Box py={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\tLiczenie x (wiadomości)\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{y2} * <DisplayFormula number={y1} modulo={p} power={power} />\r\n\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowX} pow={power} />{' '}\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\tx = {y2} * {solutionPowX.result} mod {p}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\tX = {x}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalDeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpis() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\tconst [r, setR] = useNumberInput(515);\r\n\r\n\tconst solutionPowBeta = useMemo(() => getFastPowerMod(alpha, t, p), [p, alpha, t]);\r\n\tconst beta = solutionPowBeta.result;\r\n\r\n\tconst inverted = modInverse(r, p - 1);\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(alpha, r, p), [p, alpha, r]);\r\n\r\n\tconst u = solutionPowA.result;\r\n\tconst s = mod(inverted * (h - t * u), p - 1);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\terror={p <= 1}\r\n\t\t\t\t\t\t\t\t\thelperText={p <= 1 ? 'p mniejsze od 1 nie da dobrego wyniku' : ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={h}. Wygenerować przez\r\n\t\t\t\t\t\t\t\tAlicję podpis cyfrowy ElGamala dla tej wiadomości, wiedząc, że Alicja użyła\r\n\t\t\t\t\t\t\t\trandomizera r={r}.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='h'\r\n\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='randomizer'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula number={alpha} modulo={p} power={r} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t<Box py={2}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3' align='center' m={2}>\r\n\t\t\t\t\t\t\t\t\tGenerowanie podpisu:\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box py={2} align='center'>\r\n\t\t\t\t\t\t\t\t<OdwrotnoscTable a={r} b={p - 1} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t\t\t\t\t<b>u</b> = \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula number={'α'} modulo={'p'} power={'r'} variant={'body1'} /> = \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={r} modulo={p} variant={'body1'} /> = \r\n\t\t\t\t\t\t\t\t\t{u}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t\t\t\t\t<b>s</b> = r<sup>-1</sup> * (h - t * u) mod (p -1) = ({inverted} * ({h} - {t} *{' '}\r\n\t\t\t\t\t\t\t\t\t{solutionPowA.result})) mod {p - 1} = {s}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t<Box p={2} pt={0} align='center'>\r\n\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\tPodpis: <b>(u, s)</b> ={' '}\r\n\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t({u}, {s})\r\n\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'utils/fast-power-table/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'utils/fast-power-table/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction ElGamalPodpisWeryfikacja() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [beta, setBeta] = useNumberInput(1454);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\r\n\tconst [u, setU] = useNumberInput(1310);\r\n\tconst [s, setS] = useNumberInput(1579);\r\n\r\n\tconst solutionPowF = useMemo(() => getFastPowerMod(alpha, h, p), [p, alpha, h]);\r\n\tconst solutionPowLeft = useMemo(() => getFastPowerMod(beta, u, p), [p, beta, u]);\r\n\tconst solutionPowRight = useMemo(() => getFastPowerMod(u, s, p), [p, u, s]);\r\n\r\n\tconst g = solutionPowF.result;\r\n\tconst f = mod(solutionPowLeft.result * solutionPowRight.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={h}, oraz podpis cyfrowy\r\n\t\t\t\t\t\t\t\tELGamala (u, s) = ({u}, {s}). Zweryfikuj przez Boba otrzymany od Alicji podpis\r\n\t\t\t\t\t\t\t\tcyfrowy.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel=\"h'\"\r\n\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel=\"u'\"\r\n\t\t\t\t\t\t\t\t\tonChange={setU}\r\n\t\t\t\t\t\t\t\t\tvalue={u}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='pierwsza wartość z podpisu'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel=\"s'\"\r\n\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='druga wartość z podpisu'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t\t\tf = <DisplayFormula number={'α'} power={'h'} modulo={'p'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t\t{solutionPowF.result}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula number={alpha} power={h} modulo={p} variant={'h5'} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowF} pow={p} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t<b>wzór: (a * b) mod c = (a mod c * b mod c) mod c</b>\r\n\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\tg = β<sup>u'</sup> * u'<sup>s'</sup> mod p = \r\n\t\t\t\t\t\t\t<DisplayFormula number={'β'} power={\"u'\"} modulo={'p'} variant={'body1'} /> * \r\n\t\t\t\t\t\t\t<DisplayFormula number={\"u'\"} power={\"s'\"} modulo={'p'} variant={'body1'} />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Grid container justify='center' spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowLeft} pow={p} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowRight} pow={p} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\tg =  ({solutionPowLeft.result} * {solutionPowRight.result}) mod {p} = \r\n\t\t\t\t\t\t\t{solutionPowLeft.result * solutionPowRight.result} mod {p} {g == f ? '=' : '≠'} {f}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\tf {g == f ? '=' : '≠'} g\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t{f} {g == f ? '=' : '≠'} {g}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\t\t\t<b>Podpis {g == f ? 'jest' : 'nie jest'} zgodny</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpisWeryfikacja;\r\n","import { Typography, Box } from '@material-ui/core';\r\nimport { getLetter } from 'utils/numHelpers';\r\n\r\nfunction CheatSheet() {\r\n\tconst letters = new Array(26).fill(0).map((_, i) => {\r\n\t\tconst index = i;\r\n\t\tconst letter = getLetter(index);\r\n\t\treturn {\r\n\t\t\tindex,\r\n\t\t\tletter,\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Box p={2} align='center'>\r\n\t\t\t{letters.map(({ index, letter }) => (\r\n\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t{index} = {letter}\r\n\t\t\t\t</Typography>\r\n\t\t\t))}\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default CheatSheet;\r\n","import React from 'react';\r\n\r\nimport Cezar from './cezar/Cezar';\r\nimport Vigener from './vigener/Vigener';\r\nimport Afiniczny from './afiniczny/Afiniczny';\r\nimport DiffieHellman from './diffie-hellman/DiffieHellman';\r\nimport Odwrotnosc from './odwrotnosc/Odwrotnosc';\r\nimport PotegaMod from './potega-mod/PotegaMod';\r\nimport RSAKlucze from './rsa/RSAKlucze';\r\nimport RSASzyfrowanie from 'rsa/RSASzyfrowanie';\r\nimport RSADeszyfrowanie from 'rsa/RSADeszyfrowanie';\r\nimport RSAPodpis from './rsa/RSAPodpis';\r\nimport RSAPodpisWeryfikacja from './rsa/RSAPodpisWeryfikacja';\r\nimport ElGamal from './elgamal/ElGamal';\r\nimport Mod from './mod/Mod';\r\n\r\nimport ElGamalSzyfrowanie from './elgamal/ElGamalSzyfrowanie';\r\nimport ElGamalDeszyfrowanie from './elgamal/ElGamalDeszyfrowanie';\r\nimport ElGamalPodpis from './elgamal/ElGamalPodpis';\r\nimport ElGamalPodpisWeryfikacja from './elgamal/ElGamalPodpisWeryfikacja';\r\nimport CheatSheet from './cheat-sheet/CheatSheet';\r\nconst Hill = React.lazy(() => import('./hill/Hill'));\r\n\r\nconst componentList = [\r\n\t{\r\n\t\tcategoryName: 'Helpers',\r\n\t\tmethods: [\r\n\t\t\t{ component: <Odwrotnosc />, name: 'Odwrotność multiplikatywna' },\r\n\t\t\t{ component: <PotegaMod />, name: 'Potęgowanie modularne' },\r\n\t\t\t{ component: <Mod />, name: 'Modulo' },\r\n\t\t\t{ component: <CheatSheet />, name: 'Litery na numery' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'Ogólne',\r\n\t\tmethods: [\r\n\t\t\t{ component: <Cezar />, name: 'Cezar' },\r\n\t\t\t{ component: <Afiniczny />, name: 'Afiniczny' },\r\n\t\t\t{ component: <Vigener />, name: 'Vigener' },\r\n\t\t\t{ component: <Hill />, name: 'Hill' },\r\n\t\t\t{ component: <DiffieHellman />, name: 'Diffie Hellman' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'RSA',\r\n\t\tmethods: [\r\n\t\t\t{ component: <RSAKlucze />, name: 'Klucze' },\r\n\t\t\t{ component: <RSASzyfrowanie />, name: 'Szyfrowanie' },\r\n\t\t\t{ component: <RSADeszyfrowanie />, name: 'Deszyfrowanie' },\r\n\t\t\t{ component: <RSAPodpis />, name: 'Podpis' },\r\n\t\t\t{ component: <RSAPodpisWeryfikacja />, name: 'Weryfikacja podpisu' },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategoryName: 'El Gamal',\r\n\t\tmethods: [\r\n\t\t\t{ component: <ElGamal />, name: 'Klucze' },\r\n\t\t\t{ component: <ElGamalSzyfrowanie />, name: 'Szyfrowanie' },\r\n\t\t\t{ component: <ElGamalDeszyfrowanie />, name: 'Deszyfrowanie' },\r\n\t\t\t{ component: <ElGamalPodpis />, name: 'Podpis' },\r\n\t\t\t{ component: <ElGamalPodpisWeryfikacja />, name: 'Weryfikacja podpisu' },\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport default componentList;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport componentList from 'componentList';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { useMediaQuery, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdrawer: {\r\n\t\tposition: (isPhone) => (isPhone ? 'fixed' : 'initial'),\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\tzIndex: (isPhone) => (isPhone ? 1 : 0),\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n}));\r\n\r\nexport const PersistentDrawer = ({ isOpen, onClose, onMethodSelect, selectedMethod }) => {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst onMethodClick = (...params) => {\r\n\t\tif (isPhone) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t\tonMethodSelect(...params);\r\n\t};\r\n\r\n\tconst handleClickAway = (params) => {\r\n\t\tif (isPhone) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ClickAwayListener onClickAway={handleClickAway}>\r\n\t\t\t<Drawer\r\n\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\tvariant='persistent'\r\n\t\t\t\tanchor='left'\r\n\t\t\t\topen={isOpen}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.drawerHeader}>\r\n\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t{componentList.map((category, i) => (\r\n\t\t\t\t\t<React.Fragment key={i}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem disabled>\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\talignItems='center'\r\n\t\t\t\t\t\t\t\t\tjustifyContent='center'\r\n\t\t\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='button'>{category.categoryName}</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t{category.methods.map((c, j) => (\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tkey={j}\r\n\t\t\t\t\t\t\t\t\tonClick={() => onMethodClick(i, j)}\r\n\t\t\t\t\t\t\t\t\tselected={i == selectedMethod[0] && j == selectedMethod[1]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={c.name} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t))}\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem component='a' href='https://www.paypal.me/krzysztofwidacki' target='_blank'>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<LocalCafeIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary='Kup mi kawę' secondary='PayPal ' />\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem component='a' href='https://github.com/Angael/KryptoBreaker' target='_blank'>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary='Github repository' secondary='source code' />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</ClickAwayListener>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tDialogActions,\r\n\tButton,\r\n\tPaper,\r\n\tTypography,\r\n\tBox,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction KeyExplanation({ isOpen, onClose }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={isOpen}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\tPaperComponent={Paper}\r\n\t\t\t\taria-labelledby='draggable-dialog-title'\r\n\t\t\t\tmaxWidth={false}\r\n\t\t\t\tfullScreen={isPhone}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle>Kiedy używa się jakiego klucza?</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t<Box mb={8}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Szyfrowanie wiadomości</Typography>\r\n\t\t\t\t\t\t\t<Typography variant='body1' gutterBottom>\r\n\t\t\t\t\t\t\t\t1. <u>Nadawca</u> do zaszyfrowania informacji używa{' '}\r\n\t\t\t\t\t\t\t\t<u>klucza publicznego odbiorcy</u>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\t\t2. <u>Odbiorca</u> do odszyfrowania informacji użyje{' '}\r\n\t\t\t\t\t\t\t\t<u>swojego klucza prywatnego</u>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box mb={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Podpis Cyfrowy Wiadomości</Typography>\r\n\t\t\t\t\t\t\t<Typography variant='body1' gutterBottom>\r\n\t\t\t\t\t\t\t\t1. <u>Nadawca</u> informacji aby podpisać wiadomość użyje{' '}\r\n\t\t\t\t\t\t\t\t<u>swojego klucza prywatnego</u>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\t\t2. <u>Odbiorca</u> zweryfikuje wiadomość za pomocą{' '}\r\n\t\t\t\t\t\t\t\t<u>klucza publicznego nadawacy</u>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button autoFocus onClick={onClose} color='primary'>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default KeyExplanation;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Button, Tooltip } from '@material-ui/core';\r\nimport KeyExplanation from './key-explanation/KeyExplanation';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tappBar: {\r\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\trightButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\tflex: 1,\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n\thide: {\r\n\t\tdisplay: 'none',\r\n\t},\r\n}));\r\n\r\nexport const NavigationBar = ({ drawerOpen, openDrawer }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [explanationOpen, setExplanationOpen] = useState(false);\r\n\r\n\treturn (\r\n\t\t<AppBar\r\n\t\t\tposition='fixed'\r\n\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t[classes.appBarShift]: drawerOpen,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\taria-label='open drawer'\r\n\t\t\t\t\tonClick={openDrawer}\r\n\t\t\t\t\tedge='start'\r\n\t\t\t\t\tclassName={clsx(classes.menuButton, drawerOpen && classes.hide)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography variant='h6' noWrap>\r\n\t\t\t\t\tKryptoBreaker\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<div className={classes.rightButton}>\r\n\t\t\t\t\t<Tooltip title='Kiedy używać jaki klucz'>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\t\t\taria-label='open drawer'\r\n\t\t\t\t\t\t\tonClick={() => setExplanationOpen(true)}\r\n\t\t\t\t\t\t\tedge='end'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<VpnKeyIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<KeyExplanation isOpen={explanationOpen} onClose={() => setExplanationOpen(false)} />\r\n\t\t\t\t</div>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography, Box, useMediaQuery, Breadcrumbs, Paper } from '@material-ui/core';\r\n\r\nimport useLocalStorage from 'utils/useLocalStorage';\r\n\r\nimport componentList from './componentList';\r\n\r\nimport { PersistentDrawer } from 'nav/PersistentDrawer';\r\nimport { NavigationBar } from './nav/NavigationBar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpaddingTop: '5rem',\r\n\t\tpadding: theme.spacing(0),\r\n\t\tmarginLeft: (isPhone) => (isPhone ? 0 : -drawerWidth),\r\n\t},\r\n\tcontentShift: {\r\n\t\tmarginLeft: () => 0, // If this isnt a function, then marginLeft in content:{} wins in priority lol\r\n\t},\r\n}));\r\n\r\nfunction App() {\r\n\t// Category and component indexes in componentList.js\r\n\tconst [indexes, setIndexes] = useLocalStorage('indexes', [0, 0]);\r\n\tconst [drawerOpen, setDrawerOpen] = useLocalStorage('drawerOpen', true);\r\n\r\n\tconst selectedCategory = componentList[indexes[0]];\r\n\tconst selectedMethod = selectedCategory.methods[indexes[1]] || {};\r\n\r\n\tconst openDrawer = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetDrawerOpen(true);\r\n\t};\r\n\r\n\tconst onMethodSelect = (categoryIndex, componentIndex) => {\r\n\t\tsetIndexes([categoryIndex, componentIndex]);\r\n\t};\r\n\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst methodVariant = isPhone ? 'h5' : 'h4';\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<NavigationBar drawerOpen={drawerOpen} openDrawer={openDrawer} />\r\n\t\t\t<PersistentDrawer\r\n\t\t\t\tisOpen={drawerOpen}\r\n\t\t\t\tonClose={() => setDrawerOpen(false)}\r\n\t\t\t\tonMethodSelect={onMethodSelect}\r\n\t\t\t\tselectedMethod={indexes}\r\n\t\t\t/>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(classes.content, {\r\n\t\t\t\t\t[classes.contentShift]: drawerOpen,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t<Box mb={4}>\r\n\t\t\t\t\t\t<Breadcrumbs aria-label='breadcrumb'>\r\n\t\t\t\t\t\t\t<Typography variant={methodVariant} color='textSecondary'>\r\n\t\t\t\t\t\t\t\t{selectedCategory.categoryName}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant={methodVariant} color='textPrimary'>\r\n\t\t\t\t\t\t\t\t{selectedMethod.name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Breadcrumbs>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t\t\t<Suspense fallback={<Box p={4}>Loading...</Box>}>{selectedMethod.component}</Suspense>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100vw - 66px)',\r\n\t},\r\n}));\r\n\r\nfunction KryptoTable({ startStr = '', endStr = '', middleNumbersArr, isEncryption = true }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst startRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'PT' : 'CT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst startNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'x' : 'y'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'y' : 'x'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'CT' : 'PT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst middleRow = middleNumbersArr && (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\tk\r\n\t\t\t</TableCell>\r\n\t\t\t{middleNumbersArr.map((v, i) => (\r\n\t\t\t\t<TableCell key={v + '-' + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TableContainer\r\n\t\t\tclasses={classes}\r\n\t\t\tcomponent={(props) => <Paper variant='outlined' {...props} />}\r\n\t\t>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{startRow}\r\n\t\t\t\t\t{startNumbers}\r\n\t\t\t\t\t{middleRow}\r\n\t\t\t\t\t{endNumbers}\r\n\t\t\t\t\t{endRow}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nexport default KryptoTable;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tCard,\r\n\tuseMediaQuery,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexDirection: (isPhone) => (isPhone ? 'column' : 'row'),\r\n\t},\r\n\tarrow: {\r\n\t\ttransform: (isPhone) => (isPhone ? 'rotate(90deg)' : 'inherit'),\r\n\t},\r\n}));\r\n\r\nfunction WordAndSolution({ startStr = '', endStr = '' }) {\r\n\tconst theme = useTheme();\r\n\tconst isPhone = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\tconst classes = useStyles(isPhone);\r\n\r\n\tconst boxCenterProps = { display: 'flex', justifyContent: 'space-around', alignItems: 'center' };\r\n\treturn (\r\n\t\t<Card variant='outlined'>\r\n\t\t\t<Box p={2} {...boxCenterProps} className={classes.root}>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{startStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={1} {...boxCenterProps} className={classes.arrow}>\r\n\t\t\t\t\t<ArrowForwardIcon />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{endStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default WordAndSolution;\r\n","export function mod(n, m = 26) {\r\n\treturn ((n % m) + m) % m;\r\n}\r\n\r\n// odwrotnosc modularna\r\nexport const modInverse = (a, m = 26) => {\r\n\tfor (let x = 1; x < m; x++) if (((a % m) * (x % m)) % m == 1) return x;\r\n};\r\n\r\nexport const getCode = (letter) => {\r\n\tlet code = letter.toLowerCase().charCodeAt(0) - 97;\r\n\r\n\tif (code < 0 || code > 25) {\r\n\t\treturn NaN;\r\n\t}\r\n\r\n\treturn code;\r\n};\r\nexport const getLetter = (code) => String.fromCharCode(mod(code, 26) + 97);\r\n\r\nexport function dec2bin(dec) {\r\n\treturn (dec >>> 0).toString(2);\r\n}\r\n\r\nexport function isPrime(num) {\r\n\tfor (var i = 2; i < num; i++) if (num % i === 0) return false;\r\n\treturn num > 1;\r\n}\r\n\r\nwindow.mod = mod;\r\nwindow.modInverse = modInverse;\r\nwindow.getCode = getCode;\r\nwindow.getLetter = getLetter;\r\nwindow.dec2bin = dec2bin;\r\nwindow.isPrime = isPrime;\r\n"],"sourceRoot":""}