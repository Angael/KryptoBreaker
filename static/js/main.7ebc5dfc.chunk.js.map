{"version":3,"sources":["utils/numHelpers.js","utils/KryptoTable.jsx","utils/WordAndSolution.jsx","utils/line-for-letter/LineForLetter.jsx","cezar/SolutionPerChar.jsx","cezar/Cezar.jsx","vigener/SolutionPerChar.jsx","vigener/Vigener.jsx","afiniczny/SolutionPerChar.jsx","afiniczny/AfinicznyKluczLiczenie.jsx","afiniczny/Afiniczny.jsx","hill/SolutionPerChar.jsx","hill/Matrix.jsx","hill/useMatrixState.js","hill/hillCipher.js","hill/Hill.jsx","diffie-hellman/DisplayFormula.jsx","diffie-hellman/useNumberInput.js","diffie-hellman/getFastPowerMod.js","diffie-hellman/BinaryExplanator.jsx","diffie-hellman/FastPowerTable.jsx","diffie-hellman/DiffieHellman.jsx","odwrotnosc/OdwrotnoscTable.jsx","odwrotnosc/Odwrotnosc.jsx","potega-mod/PotegaMod.jsx","rsa/KluczeDisplay.jsx","rsa/RSAKlucze.jsx","rsa/RSASzyfrowanie.jsx","rsa/RSADeszyfrowanie.jsx","rsa/RSAPodpis.jsx","rsa/RSAPodpisWeryfikacja.jsx","elgamal/KluczeDisplay.jsx","elgamal/ElGamal.jsx","mod/Mod.jsx","utils/useLocalStorage.js","elgamal/ElGamalSzyfrowanie.jsx","elgamal/ElGamalDeszyfrowanie.jsx","elgamal/ElGamalPodpis.jsx","elgamal/ElGamalPodpisWeryfikacja.jsx","App.jsx","index.js"],"names":["mod","n","m","modInverse","a","x","getCode","letter","toLowerCase","charCodeAt","getLetter","code","String","fromCharCode","dec2bin","dec","toString","isPrime","num","i","window","KryptoTable","startStr","endStr","middleNumbersArr","isEncryption","startRow","TableRow","TableCell","component","scope","split","map","v","align","startNumbers","endNumbers","endRow","middleRow","TableContainer","props","Paper","variant","Table","TableBody","WordAndSolution","boxCenterProps","display","justifyContent","alignItems","Card","Box","p","flex","Typography","LineForLetter","resultLetter","children","fontSize","SolutionPerChar","key","keyValue","isEncr","letterCode","letterAndCode","afterMod","Cezar","useState","word","setWord","setKey","isEncrypt","setIsEncrypt","result","crypted","newKey","parseInt","c","cezarEncrypt","my","elevation","Grid","container","item","xs","TextField","label","onChange","event","target","value","FormControl","InputLabel","Select","MenuItem","type","Number","keyCode","letterAndKey","Vigener","length","k","vigenerEncrypt","middleTableRow","useMemo","arr","forEach","push","calculationJsx","b","invertedA","NaN","AfinicznyKluczLiczenie","results","getStepsForInverseKey","step","Afiniczny","keys","setKeys","replace","undefined","isEncode","affine","e","placeholder","tdCss","css","centeredInputCss","Matrix","rows","changeValue","error","helperText","handleChangeField","row","column","onlyNumbers","useInput","flexDirection","alignContent","justifyItems","field","j","className","size","FormHelperText","defaultMatrix","Array","fill","useMatrixState","initSize","setRows","setValue","rowNum","columnNum","resize","newWidth","newWidthNumber","clamp","require","modMatrix","matrix","newMatrix","data","getInvertedMatrix","keyMatrix","detModuloed","determinant","inverse","adjugate","scale","matrixFromString","matrixWidth","matrixHeight","Math","ceil","width","height","subArray","getZeroesMatrix","letters","floor","col","getArrayFromMatrix","from","Hill","wordMatrix","isKeyMatrixOk","isKeyMatrixInvertable","numRows","numColumns","multiply","invertedKey","resultMatrixBeforeMod","JSON","parse","stringify","resultMatrix","hillEncrypt","join","matrixArrayToString","showResultAfterMod","setShowResultAfterMod","FormControlLabel","control","Switch","checked","onClick","color","DisplayFormula","g","power","textAlign","useNumberInput","initialValue","val","setVal","numberValue","isNaN","getFastPowerMod","modulo","generator","reversedBinaryArray","reverse","steps","t","helperTextA","helperTextX","prevT","prevA","prevX","BinaryExplanator","binary","answerCss","calculationNumbersCss","TableCellHoverable","withStyles","root","backgroundColor","FastPowerTable","stepsObj","pow","hoveringXRow","setHoveringXRow","onStartHover","TableHead","isLast","shouldBeHighlighted","xCss","aCss","Tooltip","title","onMouseEnter","onMouseLeave","DiffieHellman","setP","setG","setA","setB","pIsPrime","solutionPowA","solutionPowB","solutionPowAMaster","solutionPowBMaster","pb","cellCss","noSelect","OdwrotnoscTable","given_a","given_b","r","u","prevRow","uprim","vprim","q","getValues","values","inverted","shift","el","index","py","Odwrotnosc","setN","PotegaMod","setPow","setModulo","justify","KluczeDisplay","d","RSAKlucze","setQ","setE","phi","RSASzyfrowanie","message","setMessage","setD","solutionPow","RSADeszyfrowanie","y","setY","RSAPodpis","setX","RSAPodpisWeryfikacja","s","setS","beta","ElGamal","setT","Mod","setNum","useLocalStorage","localStorage","getItem","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","ElGamalSzyfrowanie","alpha","setAlpha","setR","solutionPowY1","solutionPowY2","y1","y2","disabled","gutterBottom","ElGamalDeszyfrowanie","setY1","setY2","solutionPowX","ElGamalPodpis","h","setH","ElGamalPodpisWeryfikacja","setU","solutionPowF","solutionPowLeft","solutionPowRight","f","spacing","helpers","odwrotnosc","name","potegaMod","methods","cezar","afiniczny","vigener","hill","diffieHellman","divider","rsaKlucze","rsaSzyfrowanie","rsaDeszyfrowanie","rsaPodpis","rsaWeryfikacjaPodpisu","elGamalKlucze","elGamalSzyfrowanie","elGamalDeszyfrowanie","elGamalPodpis","elGamalWeryfikacjaPodpisu","drawerWidth","useStyles","makeStyles","theme","palette","background","paper","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","padding","App","method","setMethod","setTitle","classes","handleChange","Drawer","PaperProps","anchor","List","ListItem","Divider","Object","button","ListItemText","primary","href","ListItemIcon","secondary","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ebc5dfc.chunk.js","sourcesContent":["export function mod(n, m = 26) {\r\n\treturn ((n % m) + m) % m;\r\n}\r\n\r\n// odwrotnosc modularna\r\nexport const modInverse = (a, m = 26) => {\r\n\tfor (let x = 1; x < m; x++) if (((a % m) * (x % m)) % m == 1) return x;\r\n};\r\n\r\nexport const getCode = (letter) => letter.toLowerCase().charCodeAt(0) - 97;\r\nexport const getLetter = (code) => String.fromCharCode(mod(code, 26) + 97);\r\n\r\nexport function dec2bin(dec) {\r\n\treturn (dec >>> 0).toString(2);\r\n}\r\n\r\nexport function isPrime(num) {\r\n\tfor (var i = 2; i < num; i++) if (num % i === 0) return false;\r\n\treturn num > 1;\r\n}\r\n\r\nwindow.mod = mod;\r\nwindow.modInverse = modInverse;\r\nwindow.getCode = getCode;\r\nwindow.getLetter = getLetter;\r\nwindow.dec2bin = dec2bin;\r\nwindow.isPrime = isPrime;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction KryptoTable({ startStr = '', endStr = '', middleNumbersArr, isEncryption = true }) {\r\n\tconst startRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'PT' : 'CT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst startNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'x' : 'y'}\r\n\t\t\t</TableCell>\r\n\t\t\t{startStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endNumbers = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'y' : 'x'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{getCode(v)}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst endRow = (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\t{isEncryption ? 'CT' : 'PT'}\r\n\t\t\t</TableCell>\r\n\t\t\t{endStr.split('').map((v, i) => (\r\n\t\t\t\t<TableCell key={v + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\tconst middleRow = middleNumbersArr && (\r\n\t\t<TableRow>\r\n\t\t\t<TableCell component='th' scope='row'>\r\n\t\t\t\tk\r\n\t\t\t</TableCell>\r\n\t\t\t{middleNumbersArr.map((v, i) => (\r\n\t\t\t\t<TableCell key={v + '-' + i} align='center'>\r\n\t\t\t\t\t{v}\r\n\t\t\t\t</TableCell>\r\n\t\t\t))}\r\n\t\t</TableRow>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{startRow}\r\n\t\t\t\t\t{startNumbers}\r\n\t\t\t\t\t{middleRow}\r\n\t\t\t\t\t{endNumbers}\r\n\t\t\t\t\t{endRow}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nexport default KryptoTable;\r\n","import { useState } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tCard,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction WordAndSolution({ startStr = '', endStr = '' }) {\r\n\tconst boxCenterProps = { display: 'flex', justifyContent: 'space-around', alignItems: 'center' };\r\n\treturn (\r\n\t\t<Card variant='outlined'>\r\n\t\t\t<Box p={2} {...boxCenterProps}>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{startStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={1} {...boxCenterProps}>\r\n\t\t\t\t\t<ArrowForwardIcon />\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box flex={9} {...boxCenterProps}>\r\n\t\t\t\t\t<Typography variant='h5'>{endStr}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default WordAndSolution;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nfunction LineForLetter({ letter, resultLetter, children }) {\r\n\treturn (\r\n\t\t<Box display='flex' alignItems='center'>\r\n\t\t\t<Box m={2}>{letter}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{children}</Box>\r\n\t\t\t<ArrowForwardIcon fontSize='small' />\r\n\t\t\t<Box m={2}>{resultLetter}</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default LineForLetter;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Cezar() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState(0);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst cezarEncrypt = () => {\r\n\t\tlet crypted = '';\r\n\t\tlet newKey = parseInt(key * (isEncrypt ? 1 : -1)) || 0;\r\n\t\tfor (let c of word) {\r\n\t\t  crypted += getLetter(getCode(c) + newKey);\r\n\t\t}\r\n\t\treturn crypted;\r\n\t}\r\n\r\n\tlet result = cezarEncrypt();\r\n\t\r\n\tconst changeKey = (event) => setKey(Number(event.target.value));\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='key' type='number' onChange={changeKey} value={key} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Cezar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst keyCode = getCode(keyValue);\r\n\r\n\tconst letterAndKey = isEncr ? letterCode + keyCode : letterCode - keyCode;\r\n\r\n\tconst afterMod = mod(letterAndKey, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>({keyValue})</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {keyCode}) mod 26 ={' '}\r\n\t\t\t{letterAndKey} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState, useMemo } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\n\r\nfunction Vigener() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [key, setKey] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst vigenerEncrypt = () => {\r\n\t\tconst length = key?.length || 0;\r\n\t\tif (length) {\r\n\t\t\tlet crypted = '';\r\n\t\t\tfor (let i in word) {\r\n\t\t\t\tconst c = word[i];\r\n\t\t\t\tconst k = key[i % length];\r\n\t\t\t\tcrypted += getLetter(mod(getCode(c) + getCode(k) * (isEncrypt ? 1 : -1)));\r\n\t\t\t}\r\n\t\t\treturn crypted;\r\n\t\t} else return word;\r\n\t};\r\n\r\n\tlet result = vigenerEncrypt();\r\n\r\n\tconst changeKey = (event) => setKey(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\r\n\tconst middleTableRow = useMemo(() => {\r\n\t\tif (word && key) {\r\n\t\t\tconst arr = [];\r\n\t\t\tword.split('').forEach((v, i) => arr.push(key[i % key.length]));\r\n\t\t\treturn arr.map((v) => getCode(v));\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, [word, key]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='key' type='text' onChange={changeKey} value={key} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable\r\n\t\t\t\t\t\t\tstartStr={word}\r\n\t\t\t\t\t\t\tendStr={result}\r\n\t\t\t\t\t\t\tmiddleNumbersArr={middleTableRow}\r\n\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{key && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t\t<SolutionPerChar\r\n\t\t\t\t\t\t\t\t\tkey={c + i}\r\n\t\t\t\t\t\t\t\t\tletter={c}\r\n\t\t\t\t\t\t\t\t\tkeyValue={key[i % key.length]}\r\n\t\t\t\t\t\t\t\t\tisEncryption={isEncrypt}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Vigener;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, a, b, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\r\n\tlet code;\r\n\tlet invertedA = NaN;\r\n\tlet calculationJsx;\r\n\tif (!isEncr) {\r\n\t\tinvertedA = modInverse(a, 26);\r\n\t\tcode = invertedA * (letterCode - b);\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{invertedA} * ({letterCode} - {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tcode = letterCode * a + b;\r\n\t\tcalculationJsx = (\r\n\t\t\t<>\r\n\t\t\t\t{a} * ({letterCode} + {b})\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tconst afterMod = mod(code, 26);\r\n\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>\r\n\t\t\t\t({a},{b})\r\n\t\t\t</sub>\r\n\t\t\t({letterCode}) = ({calculationJsx}) mod 26 = {code} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode, mod, modInverse } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { methods } from 'App';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nconst getStepsForInverseKey = (num, n = 26) => {\r\n\tconst results = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tresults.push(`${num} * ${i} mod ${n} = ${mod(num * i, n)}`);\r\n\t\tif ((num * i) % n === 1) {\r\n\t\t\tresults.push('Found inverted key = ' + i);\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nfunction AfinicznyKluczLiczenie({ a, n }) {\r\n\tconst steps = getStepsForInverseKey(a, n);\r\n\treturn steps.map((step) => (\r\n\t\t<Box key={step}>\r\n\t\t\t<Typography>{step}</Typography>\r\n\t\t</Box>\r\n\t));\r\n}\r\n\r\nexport default AfinicznyKluczLiczenie;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport KryptoTable from '../utils/KryptoTable';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport AfinicznyKluczLiczenie from './AfinicznyKluczLiczenie';\r\n\r\nconst affine = (word, [a, b], isEncode = true) => {\r\n\tlet result = '';\r\n\tlet code = null;\r\n\r\n\tfor (let c of word) {\r\n\t\tif (!isEncode) {\r\n\t\t\tconst newA = modInverse(a, 26);\r\n\t\t\tcode = newA * (getCode(c) - b);\r\n\t\t} else code = getCode(c) * a + b;\r\n\r\n\t\tresult += getLetter(mod(code, 26));\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nfunction Afiniczny() {\r\n\tconst [word, setWord] = useState('kryptografia');\r\n\tconst [keys, setKeys] = useState('');\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst [a = 0, b = 0] = keys.replace(/\\s/, '').split(',').map(Number);\r\n\r\n\tconst result = word && a !== undefined && b !== undefined ? affine(word, [a, b], isEncrypt) : '';\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeKey = (event) => setKeys(event.target.value);\r\n\tconst changeIsEncryption = (e, v) => setIsEncrypt(e.target.value);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel='keys'\r\n\t\t\t\t\t\t\tplaceholder={'3,7'}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tonChange={changeKey}\r\n\t\t\t\t\t\t\tvalue={keys}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>Klucz odwrócony:</Typography>\r\n\t\t\t\t\t\t\t<AfinicznyKluczLiczenie a={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} a={a} b={b} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Afiniczny;\r\n","import { getLetter, getCode, mod } from 'utils/numHelpers';\r\n\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\n\r\nfunction SolutionPerChar({ letter, keyValue: key, isEncryption: isEncr }) {\r\n\tconst letterCode = getCode(letter);\r\n\tconst letterAndCode = isEncr ? letterCode + key : letterCode - key;\r\n\tconst afterMod = mod(letterAndCode, 26);\r\n\treturn (\r\n\t\t<LineForLetter letter={letter} resultLetter={getLetter(afterMod)}>\r\n\t\t\t{isEncr ? 'y' : 'x'} = {isEncr ? 'e' : 'd'}\r\n\t\t\t<sub>{key}</sub>({letterCode}) = ({letterCode} {isEncr ? '+' : '-'} {key}) mod 26 ={' '}\r\n\t\t\t{letterAndCode} mod 26 = {afterMod}\r\n\t\t</LineForLetter>\r\n\t);\r\n}\r\n\r\nexport default SolutionPerChar;\r\n","import { useState } from 'react';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport { css } from '@emotion/css';\r\n\r\nconst tdCss = css`\r\n\theight: 42px;\r\n\twidth: 4rem;\r\n`;\r\n\r\nconst centeredInputCss = css`\r\n\t* {\r\n\t\ttext-align: center; !important\r\n\t}\r\n`;\r\n\r\nfunction Matrix({ rows, changeValue, error, helperText }) {\r\n\tconst handleChangeField = (row, column) => (e) => {\r\n\t\tif (changeValue) {\r\n\t\t\tconst onlyNumbers = Number(e.target.value.replace(/\\D/g, ''));\r\n\t\t\tchangeValue(onlyNumbers, row, column);\r\n\t\t}\r\n\t};\r\n\r\n\tconst useInput = !!changeValue;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box\r\n\t\t\t\tmy={2}\r\n\t\t\t\tflexDirection='column'\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\talignContent='center'\r\n\t\t\t\tjustifyItems='center'\r\n\t\t\t\tjustifyContent='center'\r\n\t\t\t>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{rows.map((row, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t{row.map((field, j) => (\r\n\t\t\t\t\t\t\t\t\t<td className={tdCss} key={j}>\r\n\t\t\t\t\t\t\t\t\t\t{useInput ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={field}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={centeredInputCss}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeField(i, j)}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography align='center'>{field}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<FormHelperText error={!!helperText}>{helperText}</FormHelperText>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Matrix;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nconst defaultMatrix = (size) => Array(size).fill(Array(size).fill(0));\r\n\r\nconst useMatrixState = (initSize = 2) => {\r\n\tconst [rows, setRows] = useState(defaultMatrix(initSize));\r\n\tconst size = rows.length;\r\n\r\n\tconst setValue = (value, rowNum, columnNum) =>\r\n\t\tsetRows(\r\n\t\t\trows.map((row, i) => row.map((field, j) => (i === rowNum && columnNum === j ? value : field)))\r\n\t\t);\r\n\r\n\tconst resize = (newWidth) => {\r\n\t\t// W teorii 1 powinno działać, ale dekrypcja buguje się jak jest 1x1 klucz\r\n\t\tconst newWidthNumber = clamp(Number(newWidth), 2, 14);\r\n\t\tsetRows(defaultMatrix(newWidthNumber));\r\n\t};\r\n\r\n\treturn { rows, setValue, size, resize };\r\n};\r\n\r\nexport default useMatrixState;\r\n","import { useState } from 'react';\r\nimport clamp from 'clamp';\r\n\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\nvar Matrix = require('node-matrices');\r\n\r\nexport const getZeroesMatrix = (width, height) => {\r\n\tconst arr = [];\r\n\tfor (let i = 0; i < height; i++) {\r\n\t\tlet subArray = [];\r\n\t\tfor (let j = 0; j < width; j++) {\r\n\t\t\tsubArray.push(0);\r\n\t\t}\r\n\t\tarr.push(subArray);\r\n\t}\r\n\treturn new Matrix(arr);\r\n};\r\n\r\nexport const modMatrix = (matrix) => {\r\n\tconst newMatrix = new Matrix(matrix.data);\r\n\tfor (let i = 0; i < matrix.data.length; i++) {\r\n\t\tfor (let j = 0; j < matrix.data[i].length; j++) {\r\n\t\t\tmatrix.data[i][j] = mod(matrix.data[i][j], 26);\r\n\t\t}\r\n\t}\r\n\treturn newMatrix;\r\n};\r\n\r\nexport const isKeyMatrixInvertable = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\treturn !!inverse;\r\n};\r\n\r\nexport const getInvertedMatrix = (keyMatrix) => {\r\n\tconst det = keyMatrix.determinant();\r\n\tconst detModuloed = mod(det, 26);\r\n\tconst inverse = modInverse(detModuloed);\r\n\tconst adjugate = keyMatrix.adjugate();\r\n\r\n\tfor (let i = 0; i < adjugate.data.length; i++) {\r\n\t\tfor (let j = 0; j < adjugate.data[i].length; j++) {\r\n\t\t\tif (adjugate.data[i][j] < 0) {\r\n\t\t\t\tadjugate.data[i][j] += 26;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst result = modMatrix(adjugate.scale(inverse));\r\n\r\n\treturn result;\r\n};\r\n","import { useState, useMemo } from 'react';\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tSwitch,\r\n\tFormControlLabel,\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { getLetter, getCode } from 'utils/numHelpers';\r\nimport KryptoTable from 'utils/KryptoTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WordAndSolution from 'utils/WordAndSolution';\r\nimport LineForLetter from 'utils/line-for-letter/LineForLetter';\r\nimport SolutionPerChar from './SolutionPerChar';\r\nimport MatrixInput from './Matrix';\r\nimport useMatrixState from 'hill/useMatrixState';\r\n\r\nimport { getInvertedMatrix, modMatrix, getZeroesMatrix, isKeyMatrixInvertable } from './hillCipher';\r\nvar Matrix = require('node-matrices');\r\n\r\nconst hillEncrypt = (wordMatrix, keyMatrix, isEncrypt) => {\r\n\tif (\r\n\t\t!wordMatrix.numRows() ||\r\n\t\t!wordMatrix.numColumns() ||\r\n\t\t!keyMatrix.numRows() ||\r\n\t\t!keyMatrix.numColumns()\r\n\t) {\r\n\t\treturn wordMatrix;\r\n\t}\r\n\r\n\tlet result;\r\n\tif (isEncrypt) {\r\n\t\tresult = wordMatrix.multiply(keyMatrix);\r\n\t} else {\r\n\t\tconst invertedKey = getInvertedMatrix(keyMatrix);\r\n\t\tresult = wordMatrix.multiply(invertedKey);\r\n\t}\r\n\treturn {\r\n\t\tresultMatrixBeforeMod: JSON.parse(JSON.stringify(result)),\r\n\t\tresultMatrix: modMatrix(result, 26),\r\n\t};\r\n};\r\n\r\nconst matrixFromString = (word, matrixWidth) => {\r\n\tconst matrixHeight = Math.ceil(word.length / matrixWidth);\r\n\r\n\tlet newMatrix = getZeroesMatrix(matrixWidth, matrixHeight);\r\n\tconst letters = word.split('');\r\n\tif (letters) {\r\n\t\tletters.forEach((c, i) => {\r\n\t\t\tconst row = Math.floor(i / matrixWidth);\r\n\t\t\tconst col = i % matrixWidth;\r\n\t\t\tnewMatrix = newMatrix.replace(row, col, getCode(c));\r\n\t\t});\r\n\t\treturn newMatrix;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nconst getArrayFromMatrix = (matrix) => matrix.data.map((row) => Array.from(row));\r\n\r\nconst matrixArrayToString = (rows) =>\r\n\trows.map((row) => row.map((v) => getLetter(v)).join('')).join('');\r\n\r\nfunction Hill() {\r\n\tconst [word, setWord] = useState('telewizor');\r\n\tconst { rows, setValue, size, resize } = useMatrixState(3);\r\n\tconst [isEncrypt, setIsEncrypt] = useState(true);\r\n\r\n\tconst wordMatrix = useMemo(() => matrixFromString(word, size), [word, size]);\r\n\tconst keyMatrix = useMemo(() => new Matrix(rows), [rows]);\r\n\r\n\tconst isKeyMatrixOk = isKeyMatrixInvertable(keyMatrix);\r\n\r\n\tconst { resultMatrix, resultMatrixBeforeMod } = useMemo(\r\n\t\t() => hillEncrypt(wordMatrix, keyMatrix, isEncrypt),\r\n\t\t[wordMatrix, keyMatrix, isEncrypt]\r\n\t);\r\n\tconst result = matrixArrayToString(getArrayFromMatrix(resultMatrix));\r\n\r\n\tconst changeWord = (event) => setWord(event.target.value);\r\n\tconst changeIsEncryption = (event) => setIsEncrypt(event.target.value);\r\n\tconst handleResize = (e) => resize(e.target.value);\r\n\r\n\tconst [showResultAfterMod, setShowResultAfterMod] = useState(true);\r\n\tconst toggleShowResultAfterMod = () => setShowResultAfterMod((v) => !v);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField label='word' onChange={changeWord} value={word} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel>Which way</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select value={isEncrypt} onChange={changeIsEncryption}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={true}>Encrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={false}>Decrypt</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='Size of key matrix'\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tvalue={size}\r\n\t\t\t\t\t\t\t\t\tonChange={handleResize}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Word:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(wordMatrix)} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Key:</Typography>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\t\t\t\tchangeValue={setValue}\r\n\t\t\t\t\t\t\t\t\terror={!isKeyMatrixOk}\r\n\t\t\t\t\t\t\t\t\thelperText={!isKeyMatrixOk ? 'This key matrix can not be inverted' : ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!isEncrypt && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4'>Inverted Key:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<MatrixInput rows={getArrayFromMatrix(getInvertedMatrix(keyMatrix))} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}></Grid>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Multiplication result:</Typography>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={showResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleShowResultAfterMod}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel='After modulo'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MatrixInput\r\n\t\t\t\t\t\t\t\t\trows={getArrayFromMatrix(\r\n\t\t\t\t\t\t\t\t\t\tshowResultAfterMod ? resultMatrix : resultMatrixBeforeMod\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Solution:</Typography>\r\n\t\t\t\t\t\t<WordAndSolution startStr={word} endStr={result || ''} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Table:</Typography>\r\n\t\t\t\t\t\t<KryptoTable startStr={word} endStr={result} isEncryption={isEncrypt} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{/* <Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Letter by letter:</Typography>\r\n\t\t\t\t\t\t{word.split('').map((c, i) => (\r\n\t\t\t\t\t\t\t<SolutionPerChar key={c + i} letter={c} keyValue={key} isEncryption={isEncrypt} />\r\n\t\t\t\t\t\t))} \r\n\t\t\t\t\t</Box> */}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Hill;\r\n","import { Typography, Box } from '@material-ui/core';\r\n\r\nfunction DisplayFormula({ p, g, power, variant = 'body1' }) {\r\n\treturn (\r\n\t\t<Box textAlign='center' display='inline'>\r\n\t\t\t<Typography variant={variant} component='span'>\r\n\t\t\t\t{g} <sup>{power}</sup> mod {p}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DisplayFormula;\r\n","import { useState } from 'react';\r\n\r\nconst useNumberInput = (initialValue) => {\r\n\tconst [val, setVal] = useState(initialValue || 0);\r\n\r\n\tconst setValueWithEvent = (e) => {\r\n\t\tconst numberValue = Number(e.target.value);\r\n\t\tif (isNaN(numberValue)) {\r\n\t\t\t// do nothing\r\n\t\t} else {\r\n\t\t\tsetVal(numberValue);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [val, setValueWithEvent];\r\n};\r\n\r\nexport default useNumberInput;\r\n","import { mod } from 'utils/numHelpers';\r\nimport { dec2bin } from 'utils/numHelpers';\r\n\r\n/**\r\n *\r\n * @param {number} modulo - Modulo\r\n * @param {number} generator - Liczba generator, ta po lewej\r\n * @param {number} power potęga\r\n */\r\nconst getFastPowerMod = (modulo, generator, power) => {\r\n\t// np 011011101\r\n\tconst binaryString = dec2bin(power);\r\n\tconst reversedBinaryArray = binaryString.split('').reverse();\r\n\r\n\tif (!reversedBinaryArray.length) {\r\n\t\treturn 'rip, nie chce mi sie pisac error handlingu';\r\n\t}\r\n\r\n\tconst steps = [];\r\n\tsteps.push({\r\n\t\ti: 0,\r\n\t\tx: 1,\r\n\t\ta: generator,\r\n\t\tt: Number(reversedBinaryArray[0]),\r\n\t\thelperTextA: 'initial value is g = ' + generator,\r\n\t\thelperTextX: 'initial value is always 1 ',\r\n\t});\r\n\r\n\tfor (let i = 1; i < reversedBinaryArray.length + 1; i++) {\r\n\t\tconst t = Number(reversedBinaryArray[i]);\r\n\t\tconst prevT = steps[i - 1].t;\r\n\t\tconst prevA = steps[i - 1].a;\r\n\t\tconst prevX = steps[i - 1].x;\r\n\r\n\t\tlet helperTextX = '';\r\n\r\n\t\tlet a = mod(prevA * prevA, modulo);\r\n\t\tif (i === reversedBinaryArray.length) {\r\n\t\t\ta = '';\r\n\t\t}\r\n\t\tlet helperTextA = `${prevA} * ${prevA} mod ${modulo} =  ${a}`;\r\n\r\n\t\tlet x;\r\n\t\tif (prevT) {\r\n\t\t\tx = mod(prevX * prevA, modulo);\r\n\t\t\thelperTextX = `${prevX} * ${prevA} mod ${modulo} =  ${x}`;\r\n\t\t} else {\r\n\t\t\tx = prevX;\r\n\t\t\thelperTextX = `unchanged because previous t is 0 = ${x}`;\r\n\t\t}\r\n\t\tsteps.push({ i, x, a, t, helperTextA, helperTextX });\r\n\t}\r\n\r\n\tconst result = steps[steps.length - 1].x;\r\n\treturn {\r\n\t\tresult,\r\n\t\tsteps,\r\n\t};\r\n};\r\n\r\nexport default getFastPowerMod;\r\n","import { dec2bin } from 'utils/numHelpers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BinaryExplanator({ num }) {\r\n\tconst binary = dec2bin(num);\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t{num} to binary is {binary}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Box textAlign='center'>in reverse it's [{binary.split('').reverse().join(',')}] = t</Box>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default BinaryExplanator;\r\n","import { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BinaryExplanator from './BinaryExplanator';\r\n\r\nconst answerCss = css`\r\n\tbackground: #97ffa7;\r\n\ttext-decoration: underline;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst calculationNumbersCss = css`\r\n\tbackground: #ffd0ce;\r\n\tborder-radius: 5px;\r\n\ttransition: 0.3s;\r\n`;\r\n\r\nconst TableCellHoverable = withStyles({\r\n\troot: {\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'rgb(0 ,0, 0, 0.1)',\r\n\t\t},\r\n\t},\r\n})(TableCell);\r\n\r\nfunction FastPowerTable({ stepsObj, pow }) {\r\n\tconst [hoveringXRow, setHoveringXRow] = useState(null);\r\n\tconst onStartHover = (i) => () => {\r\n\t\tsetHoveringXRow(i);\r\n\t};\r\n\tconst onEndHover = (i) => () => {\r\n\t\tsetHoveringXRow(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BinaryExplanator num={pow} />\r\n\t\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell align='center'>i</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tx<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tt<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{stepsObj.steps.map(({ i, x, a, t, helperTextA, helperTextX }) => {\r\n\t\t\t\t\t\t\tconst isLast = i === stepsObj.steps.length - 1;\r\n\r\n\t\t\t\t\t\t\tconst shouldBeHighlighted = hoveringXRow === i + 1;\r\n\t\t\t\t\t\t\tconst xCss = isLast ? answerCss : shouldBeHighlighted ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\tconst aCss = shouldBeHighlighted && !!t ? calculationNumbersCss : '';\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow key={i}>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{i}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextX}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCellHoverable\r\n\t\t\t\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={xCss}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={onStartHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={onEndHover(i)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{x}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t{!isLast && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title={helperTextA}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCellHoverable align='center' className={aCss}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{a}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCellHoverable>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{!isLast && <TableCell align='center'>{t}</TableCell>}\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default FastPowerTable;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DisplayFormula from './DisplayFormula';\r\nimport useNumberInput from './useNumberInput';\r\nimport getFastPowerMod from './getFastPowerMod';\r\nimport FastPowerTable from './FastPowerTable';\r\nimport BinaryExplanator from './BinaryExplanator';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nfunction DiffieHellman() {\r\n\tconst [p, setP] = useNumberInput(1019);\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [a, setA] = useNumberInput(638);\r\n\tconst [b, setB] = useNumberInput(719);\r\n\r\n\tconst pIsPrime = useMemo(() => isPrime(p), [p]);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(p, g, a), [p, g, a]);\r\n\tconst solutionPowB = useMemo(() => getFastPowerMod(p, g, b), [p, g, b]);\r\n\r\n\tconst solutionPowAMaster = useMemo(() => getFastPowerMod(p, solutionPowA.result, b), [\r\n\t\tp,\r\n\t\tsolutionPowA.result,\r\n\t\tb,\r\n\t]);\r\n\tconst solutionPowBMaster = useMemo(() => getFastPowerMod(p, solutionPowB.result, a), [\r\n\t\tp,\r\n\t\tsolutionPowB.result,\r\n\t\tb,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<Box my={4}>\r\n\t\t\t<Paper elevation={3}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' helperText='public' />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText={pIsPrime ? 'public' : 'p has to be prime'}\r\n\t\t\t\t\t\t\t\terror={!pIsPrime}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='a'\r\n\t\t\t\t\t\t\t\tonChange={setA}\r\n\t\t\t\t\t\t\t\tvalue={a}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText='private for person 1'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='b'\r\n\t\t\t\t\t\t\t\tonChange={setB}\r\n\t\t\t\t\t\t\t\tvalue={b}\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\thelperText='private for person 2'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h3'>Calculating Public keys:</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tPerson 1 generates random private key a, Person 2 generates random private key b.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tThen they calculate public keys they can give eachother in a NOT secure way.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula p={p} g={g} power={a} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula p={p} g={g} power={b} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Fast modulo power method (!):</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowB} pow={b} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h3'>Calculating Master (private) key:</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tAfter Person 1 received Person 2 Public key, and vice versa, they can both calculate the\r\n\t\t\t\t\t\tsame private key.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\tThen they can use this key to encrypt their communication, without ever sending this\r\n\t\t\t\t\t\tprivate key.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box p={2} pb={0} textAlign='center'>\r\n\t\t\t\t\t<Typography variant='h4'>Formulae to calculate:</Typography>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 1 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula p={p} g={solutionPowB.result} power={a} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant='h5'>Person 2 calculates:</Typography>\r\n\t\t\t\t\t\t\t<DisplayFormula p={p} g={solutionPowA.result} power={b} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowBMaster} pow={a} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowAMaster} pow={b} />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DiffieHellman;\r\n","import { useState, useMemo } from 'react';\r\nimport { Paper, Box, Typography } from '@material-ui/core';\r\nimport { css } from '@emotion/css';\r\nimport {\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableCell,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport { mod } from '../utils/numHelpers';\r\n\r\n\r\nconst cellCss = css`\r\n\tbackground: #f0e98b;\r\n`;\r\n\r\nconst noSelect = css`\r\n\tuser-select: none;\r\n`;\r\n\r\n\r\nfunction OdwrotnoscTable({ a, b }) {\r\n\tconst getValues = (given_a, given_b) => {\r\n\t\tconst rows = [];\r\n\r\n\t\tlet i = 0;\r\n\t\tlet r, b, u, v;\r\n\t\twhile (r != 0) {\r\n\t\t\tconst prevRow = i === 0 ? null : rows[i - 1];\r\n\t\t\tconst a = prevRow ? prevRow['b'] : given_a;\r\n\t\t\tb = prevRow ? prevRow['r'] : given_b;\r\n\t\t\tu = prevRow\r\n\t\t\t\t? prevRow['uprim'] - (prevRow['q'] * prevRow['u'])\r\n\t\t\t\t: 0;\r\n\t\t\tconst uprim = prevRow ? prevRow['u'] : 1;\r\n\t\t\tv = prevRow\r\n\t\t\t\t? prevRow['vprim'] - (prevRow['q'] * prevRow['v'])\r\n\t\t\t\t: 1;\r\n\t\t\tconst vprim = prevRow ? prevRow['v'] : 0;\r\n\t\t\tconst q = Math.floor(a / b);\r\n\t\t\tr = mod(a, b)\r\n\r\n\t\t\trows.push({ u, uprim, v, vprim, a, b, q, r });\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn [rows, u];\r\n\t}\r\n\r\n\tconst [ values, inverted ] = getValues(a, b);\r\n\tvalues.shift() // dont ask\r\n\r\n\treturn b != 0 && (\r\n\t\t<>\r\n\t\t\t<TableContainer component={(props) => <Paper variant='outlined' {...props} />}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\ti\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tu<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tu<sub>i</sub>'\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tv<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tv<sub>i</sub>'\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tn<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\ta<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tq<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align='center'>\r\n\t\t\t\t\t\t\t\tr<sub>i</sub>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{values.map((el, index) => {\r\n\t\t\t\t\t\t\tconst { u, uprim, v, vprim, a, b, q, r } = el;\r\n\t\t\t\t\t\t\tconst isLast = values.length - 1 === index;\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{index}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{v}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{vprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center' className={isLast && cellCss}>{u}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{uprim}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{a}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{b}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{q}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align='center'>{r}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t\t<Box py={1}>\r\n\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\ta<sup>-1</sup> = {inverted} mod {b} = {mod(inverted, b)}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box>\r\n\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t<span className={noSelect}>Sprawdzenie: </span>{a} * {mod(inverted, b)} mod {b} = {mod(a * mod(inverted, b), b)}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default OdwrotnoscTable;\r\n","import { useState } from 'react';\r\n\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport { getLetter, getCode, modInverse, mod } from 'utils/numHelpers';\r\nimport AfinicznyKluczLiczenie from 'afiniczny/AfinicznyKluczLiczenie';\r\nimport OdwrotnoscTable from './OdwrotnoscTable';\r\n\r\nfunction Odwrotnosc() {\r\n\tconst [a, setA] = useNumberInput(215);\r\n\tconst [n, setN] = useNumberInput(25);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Liczba' type='number' onChange={setA} value={a} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<TextField label='modulo' placeholder={26} type='number' onChange={setN} value={n} />\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography variant='h4'>Odwrotność modularna:</Typography>\r\n\t\t\t\t\t\t{/* <AfinicznyKluczLiczenie a={a} n={n} /> */}\r\n\r\n\t\t\t\t\t\t<OdwrotnoscTable a={a} b={n} />\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Odwrotnosc;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\n\r\nfunction PotegaMod() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [pow, setPow] = useNumberInput(638);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(modulo, g, pow), [modulo, g, pow]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='g' onChange={setG} value={g} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Potęga' onChange={setPow} value={pow} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula p={modulo} g={g} power={pow} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={pow} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default PotegaMod;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ e, d, n }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h3'>Klucze:</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (e, n) = ({e}, {n}) - Publiczne\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (d, n) = ({d}, {n}) - Prywatne\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction RSAKlucze() {\r\n\tconst [p, setP] = useNumberInput(37);\r\n\tconst [q, setQ] = useNumberInput(47);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\r\n\tconst n = p * q;\r\n\tconst phi = (p - 1) * (q - 1);\r\n\tconst d = modInverse(e, phi);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='p'\r\n\t\t\t\t\t\t\t\t\tonChange={setP}\r\n\t\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='q'\r\n\t\t\t\t\t\t\t\t\tonChange={setQ}\r\n\t\t\t\t\t\t\t\t\tvalue={q}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość druga'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana liczba całkowita od 1 do Φ'\r\n\t\t\t\t\t\t\t\t\terror={e > phi || e <= 1 || e % 1 !== 0}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tn = {p} * {q} = {n}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tphi = Φ = ({p} - 1) * ({q}- 1)= {phi}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\td = <DisplayFormula p={phi} g={e} power={-1} variant={'body1'} /> = {d}\r\n\t\t\t\t\t\t\t\t<OdwrotnoscTable a={e} b={phi} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAKlucze;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSASzyfrowanie() {\r\n\t//Wiadomość x\r\n\tconst [message, setMessage] = useNumberInput(20);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(n, message, e), [n, message, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość, której wartość wynosi x={message} zaszyfrowaną\r\n\t\t\t\t\t\t\t\tprzy użyciu algorytmu RSA. Oblicz wartość szyfrogramu y.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setMessage}\r\n\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Szyfrowanie:</Typography>\r\n\t\t\t\t\t\t\t\ty = c =<DisplayFormula g={'x'} power={'e'} p={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula g={message} power={e} p={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tSzyfrogram y = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={e} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSASzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSADeszyfrowanie() {\r\n\t//Zaszyfrowana wiadomosc x, szyfrogram y\r\n\tconst [y, setY] = useNumberInput(1327);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// y^d mod n\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(n, y, d), [n, y, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram y={y}. Obliczyć przez Alicję wartość tekstu\r\n\t\t\t\t\t\t\t\tjawnego x.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setY}\r\n\t\t\t\t\t\t\t\t\tvalue={y}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Szyfrogram'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Deszyfrowanie:</Typography>\r\n\t\t\t\t\t\t\t\tx = wiadomość = <DisplayFormula\r\n\t\t\t\t\t\t\t\t\tg={'y'}\r\n\t\t\t\t\t\t\t\t\tpower={'d'}\r\n\t\t\t\t\t\t\t\t\tp={'n'}\r\n\t\t\t\t\t\t\t\t\tvariant={'body1'}\r\n\t\t\t\t\t\t\t\t/> = <DisplayFormula g={y} power={d} p={n} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t{solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tWiadomość x = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSADeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpis() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(n, x, d), [n, x, d]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={x}. Wygenerować przez\r\n\t\t\t\t\t\t\t\tAlicję podpis cyfrowy RSA dla tej wiadomości.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Generowanie podpisu:</Typography>\r\n\t\t\t\t\t\t\t\tpodpis s = <DisplayFormula g={'h'} power={'d'} p={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula g={x} power={d} p={n} variant={'body1'} /> = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tPodpis s = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpis;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction RSAPodpisWeryfikacja() {\r\n\t//Wiadomość x\r\n\tconst [x, setX] = useNumberInput(357);\r\n\tconst [s, setS] = useNumberInput(1630);\r\n\tconst [e, setE] = useNumberInput(1001);\r\n\tconst [d, setD] = useNumberInput(761);\r\n\tconst [n, setN] = useNumberInput(1739);\r\n\r\n\t// x^n mod e\r\n\tconst solutionPow = useMemo(() => getFastPowerMod(n, s, e), [n, s, e]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<KluczeDisplay e={e} n={n} d={d} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={x}, oraz jej podpis cyfrowy\r\n\t\t\t\t\t\t\t\tRSA s={s}. Zweryfikuj przez Boba otrzymany od Alicji podpis cyfrowy.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='n'\r\n\t\t\t\t\t\t\t\t\tonChange={setN}\r\n\t\t\t\t\t\t\t\t\tvalue={n}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Druga wartość obu kluczy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='e'\r\n\t\t\t\t\t\t\t\t\tonChange={setE}\r\n\t\t\t\t\t\t\t\t\tvalue={e}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 1 - publicznego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='d'\r\n\t\t\t\t\t\t\t\t\tonChange={setD}\r\n\t\t\t\t\t\t\t\t\tvalue={d}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Pierwsza wartość klucza 2 - prywatnego'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x albo h'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość lub skrót wiadomości'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='s'\r\n\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Podpis który weryfikujemy'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\th = <DisplayFormula g={'s'} power={'e'} p={'n'} variant={'body1'} /> ={' '}\r\n\t\t\t\t\t\t\t\t<DisplayFormula g={s} power={e} p={n} variant={'body1'} /> = {solutionPow.result}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\tWynik sprawdzenia = {solutionPow.result} = {x} = h\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2} pb={3} align='center'>\r\n\t\t\t\t\t\t\t\tPodpis {x === solutionPow.result ? 'jest' : 'nie jest'} poprawny, ponieważ wartość\r\n\t\t\t\t\t\t\t\tskrótu wysłana przez alicję {x === solutionPow.result ? 'jest' : 'nie jest'} taka\r\n\t\t\t\t\t\t\t\tsama jak wartość skrótu wiadomości odebranej przez boba.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPow} pow={d} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default RSAPodpisWeryfikacja;\r\n","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst KluczeDisplay = ({ p, g, beta, t }) => {\r\n\treturn (\r\n\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t<Typography variant='h4'>Klucze:</Typography>\r\n\t\t\t<Typography variant='caption'>zmiana oznaczeń: α ≡ g</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>1</sub> = (p, α, β) = ({p}, {g}, {beta}) - publiczny\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='body1'>\r\n\t\t\t\tk<sub>2</sub> = (p, t) = ({p}, {t}) - prywatny\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default KluczeDisplay;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\n\r\nfunction ElGamal() {\r\n\tconst [g, setG] = useNumberInput(2);\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(p, g, t), [p, g, t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h3'>Kryptosystem El Gamala</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\tAlicja chce wygenerować klucze asymetryczne ElGamala. W tym celu przyjęła wartość{' '}\r\n\t\t\t\t\t\t\t\t<b>p={p}</b> oraz generator <b>g={g}</b>.<br />\r\n\t\t\t\t\t\t\t\tWyznacz klucze asymetryczne Alicji dla jej wartości prywatnej <b>t={t}</b>.\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='g albo α'\r\n\t\t\t\t\t\t\t\t\tonChange={setG}\r\n\t\t\t\t\t\t\t\t\tvalue={g}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' helperText='p?' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula p={p} g={g} power={t} variant={'h4'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<KluczeDisplay p={p} g={g} beta={solutionPowA.result} t={t} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamal;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isPrime, mod } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\n\r\nfunction Mod() {\r\n\tconst [num, setNum] = useNumberInput(2);\r\n\tconst [modulo, setModulo] = useNumberInput(1019);\r\n\r\n\tconst result = mod(num, modulo);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Number' onChange={setNum} value={num} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='Modulo' onChange={setModulo} value={modulo} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t<DisplayFormula p={modulo} g={num} power={''} variant={'h4'} />\r\n\t\t\t\t\t\t<Typography variant={'h4'} display='inline'>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t= {result}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Mod;\r\n","// Hook\r\nimport { useState } from 'react';\r\nfunction useLocalStorage(key, initialValue) {\r\n\t// State to store our value\r\n\t// Pass initial state function to useState so logic is only executed once\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\t// Get from local storage by key\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t// Parse stored json or if none return initialValue\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\t// If error also return initialValue\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\t// Return a wrapped version of useState's setter function that ...\r\n\t// ... persists the new value to localStorage.\r\n\tconst setValue = (value) => {\r\n\t\ttry {\r\n\t\t\t// Allow value to be a function so we have same API as useState\r\n\t\t\tconst valueToStore = value instanceof Function ? value(storedValue) : value;\r\n\t\t\t// Save state\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t// Save to local storage\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\t// A more advanced implementation would handle the error case\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from './../diffie-hellman/FastPowerTable';\r\n\r\nfunction ElGamalSzyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [x, setX] = useNumberInput(20);\r\n\tconst [r, setR] = useNumberInput(320);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(p, alpha, t), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst solutionPowY1 = useMemo(() => getFastPowerMod(p, alpha, r), [p, alpha, r]);\r\n\tconst solutionPowY2 = useMemo(() => getFastPowerMod(p, beta, r), [p, beta, r]);\r\n\tconst y1 = solutionPowY1.result;\r\n\tconst y2 = mod(x * solutionPowY2.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tBob chce wysłać do Alicji wiadomość której wartość liczbowa wynosi x={x}.\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tOblicz wartość tekstu zaszyfrowanego y, wiedząc, że do zaszyfrowania wybrany\r\n\t\t\t\t\t\t\t\t\tzostał randomizer r={r}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='x'\r\n\t\t\t\t\t\t\t\t\tonChange={setX}\r\n\t\t\t\t\t\t\t\t\tvalue={x}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wiadomość'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Randomizer'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4' align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tC = (y<sub>1</sub>, y<sub>2</sub>) = E\r\n\t\t\t\t\t\t\t\t\t\t\t<sub>\r\n\t\t\t\t\t\t\t\t\t\t\t\tk<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t(r,x) = (α<sup>r</sup> mod p, x * β<sup>r</sup> mod p)\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<DisplayFormula g={alpha} power={r} p={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY1} pow={r} />{' '}\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\ty<sub>1</sub>= {y1}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie y<sub>2</sub>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{x} * <DisplayFormula g={alpha} power={r} p={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowY2} pow={r} />\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\ty<sub>2</sub> = {x} * {solutionPowY2.result} mod {p} = {y2}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\t\t\tWynik = (y<sub>1</sub>, y<sub>2</sub>) = ({y1}, {y2})\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalSzyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box, Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport { mod } from 'utils/numHelpers';\r\nimport FastPowerTable from './../diffie-hellman/FastPowerTable';\r\n\r\nfunction ElGamalDeszyfrowanie() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [y1, setY1] = useNumberInput(130);\r\n\tconst [y2, setY2] = useNumberInput(414);\r\n\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(p, alpha, t), [p, alpha, t]);\r\n\r\n\tconst beta = solutionPowA.result;\r\n\r\n\tconst power = p - 1 - t;\r\n\tconst error = power <= 0 || power % 1 !== 0;\r\n\tconst solutionPowX = useMemo(() => getFastPowerMod(p, y1, power), [p, y1, power]);\r\n\r\n\tconst x = mod(y2 * solutionPowX.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={beta} t={t} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4'>Opis zadania:</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\tAlicja otrzymała od Boba szyfrogram Y=({y1}, {y2})\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography> Obliczyć przez Alicję wartość tekstu jawnego x.</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='right'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\ty<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setY1}\r\n\t\t\t\t\t\t\t\t\tvalue={y1}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='left'>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\ty<sub>2</sub>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={setY2}\r\n\t\t\t\t\t\t\t\t\tvalue={y2}\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} align='center'>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4' align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tX = P = y<sub>2</sub>* y<sub>1</sub>\r\n\t\t\t\t\t\t\t\t\t\t\t<sup>p - 1 - t</sup> mod p\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box m={2} p={2} display='inline-block'>\r\n\t\t\t\t\t\t\t\t<Paper variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<Box m={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h4' align='center'>\r\n\t\t\t\t\t\t\t\t\t\t\tX = P = {y2} * {y1}\r\n\t\t\t\t\t\t\t\t\t\t\t<sup>{p - 1 - t}</sup> mod {p}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}></Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} align='center'>\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom>\r\n\t\t\t\t\t\t\t\t\tLiczenie x (wiadomości)\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{y2} * <DisplayFormula g={y1} power={power} p={p} />\r\n\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowX} pow={power} />{' '}\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\tx = {y2} * {solutionPowX.result} mod {p}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h4' gutterBottom align='center'>\r\n\t\t\t\t\t\t\t\t\tX = {x}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ElGamalDeszyfrowanie;\r\n","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpis() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\tconst [r, setR] = useNumberInput(515);\r\n\r\n\tconst inverted = modInverse(r, p - 1);\r\n\tconst solutionPowA = useMemo(() => getFastPowerMod(p, alpha, r), [p, alpha, r]);\r\n\r\n\tconst u = solutionPowA.result;\r\n\tconst s = mod(inverted * (h - t * u), p - 1);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3'>Kryptosystem El Gamala</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\tAlicja chce wysłać do Boba wiadomość, której skrót wynosi h={h}.\r\n\t\t\t\t\t\t\t\t\t\tWygenerować przez Alicję podpis cyfrowy ElGamala dla tej wiadomości,\r\n\t\t\t\t\t\t\t\t\t\twiedząc, że Alicja użyła randomizera r={r}.\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={u} t={t} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={solutionPowA.result}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='h'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='r'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setR}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={r}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='randomizer'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t<DisplayFormula p={p} g={alpha} power={r} variant={'h4'} />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowA} pow={p} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3' align='center' m={2}>Generowanie podpisu:</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<OdwrotnoscTable a={r} b={p - 1} />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\t\t\t\t<b>u</b> = \r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula g={'α'} power={'r'} p={'p'} variant={'body1'} /> = \r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula g={alpha} power={r} p={p} variant={'body1'} /> = {u}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\t\t\t\t\t\t<b>s</b> =\r\n\t\t\t\t\t\t\t\t\t\tα<sup>-1</sup> * (h - t * u) mod (p -1) =\r\n\t\t\t\t\t\t\t\t\t\t({inverted} * ({h} - {t} * {solutionPowA.result})) mod {p - 1} = {s}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">Podpis: <b>(u, s)</b> = <b>({u}, {s})</b></Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpis;","import { useMemo } from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { mod, modInverse } from 'utils/numHelpers';\r\n\r\nimport useNumberInput from 'diffie-hellman/useNumberInput';\r\nimport getFastPowerMod from 'diffie-hellman/getFastPowerMod';\r\nimport DisplayFormula from 'diffie-hellman/DisplayFormula';\r\nimport FastPowerTable from 'diffie-hellman/FastPowerTable';\r\nimport KluczeDisplay from './KluczeDisplay';\r\nimport OdwrotnoscTable from 'odwrotnosc/OdwrotnoscTable';\r\n\r\nfunction ElGamalPodpisWeryfikacja() {\r\n\tconst [p, setP] = useNumberInput(1619);\r\n\tconst [alpha, setAlpha] = useNumberInput(2);\r\n\tconst [beta, setBeta] = useNumberInput(1454);\r\n\tconst [t, setT] = useNumberInput(937);\r\n\tconst [h, setH] = useNumberInput(357);\r\n\r\n\tconst [u, setU] = useNumberInput(1310);\r\n\tconst [s, setS] = useNumberInput(1579);\r\n\r\n\tconst solutionPowF = useMemo(() => getFastPowerMod(p, alpha, h), [p, alpha, h]);\r\n\tconst solutionPowLeft = useMemo(() => getFastPowerMod(p, beta, u), [p, beta, u]);\r\n\tconst solutionPowRight = useMemo(() => getFastPowerMod(p, u, s), [p, u, s]);\r\n\r\n\tconst g = solutionPowF.result;\r\n\tconst f = mod(solutionPowLeft.result * solutionPowRight.result, p);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box my={4}>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3'>Kryptosystem El Gamala</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\tBob otrzymał od Alicji wiadomość, której skrót wynosi h={h}, oraz podpis cyfrowy ELGamala (u, s) = ({u}, {s}).\r\n\t\t\t\t\t\t\t\t\t\tZweryfikuj przez Boba otrzymany od Alicji podpis cyfrowy.\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<KluczeDisplay p={p} g={alpha} beta={u} t={t} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='α'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setAlpha}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={alpha}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Generator'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField label='p' onChange={setP} value={p} type='number' />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='β'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={beta}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wygenerowana liczba'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='t'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setT}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={t}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='Wylosowana wartość pierwsza'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"h'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setH}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={h}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='skrót wiadomości'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"u'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setU}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={u}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='pierwsza wartość z podpisu'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"s'\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={setS}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={s}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\thelperText='druga wartość z podpisu'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box p={2} pb={2} textAlign='center'>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} justify='center'>\r\n\t\t\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h3'>Weryfikacja podpisu:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">f = <DisplayFormula g={'α'} power={'h'} p={'p'} variant={'body1'} /> = {solutionPowF.result}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<DisplayFormula p={p} g={alpha} power={h} variant={'h5'} />\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowF} pow={p} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\r\n\t\t\t\t\t\t\t\t\t<b>wzór: (a * b) mod c = (a mod c * b mod c) mod c</b>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\r\n\t\t\t\t\t\t\t\t\tg = β<sup>u'</sup> * u'<sup>s'</sup> mod p = \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula g={'β'} power={'u\\''} p={'p'} variant={'body1'} /> * \r\n\t\t\t\t\t\t\t\t\t<DisplayFormula g={'u\\''} power={'s\\''} p={'p'} variant={'body1'} />\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Grid container justify='center' spacing={2}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowLeft} pow={p} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<FastPowerTable stepsObj={solutionPowRight} pow={p} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Box p={2} align='center'>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\r\n\t\t\t\t\t\t\t\t\tg = \r\n\t\t\t\t\t\t\t\t\t({solutionPowLeft.result} * {solutionPowRight.result}) mod {p} = \r\n\t\t\t\t\t\t\t\t\t{solutionPowLeft.result * solutionPowRight.result} mod {p} \r\n\t\t\t\t\t\t\t\t\t{g == f ? '=' : '≠'} {f}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\"><b>Podpis {g == f ? 'jest' : 'nie jest'} zgodny</b></Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default ElGamalPodpisWeryfikacja;","import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport Cezar from './cezar/Cezar';\r\nimport Vigener from './vigener/Vigener';\r\nimport Afiniczny from './afiniczny/Afiniczny';\r\nimport Hill from './hill/Hill';\r\nimport DiffieHellman from './diffie-hellman/DiffieHellman';\r\nimport Odwrotnosc from './odwrotnosc/Odwrotnosc';\r\nimport PotegaMod from './potega-mod/PotegaMod';\r\nimport RSAKlucze from './rsa/RSAKlucze';\r\nimport RSASzyfrowanie from 'rsa/RSASzyfrowanie';\r\nimport RSADeszyfrowanie from 'rsa/RSADeszyfrowanie';\r\nimport RSAPodpis from './rsa/RSAPodpis';\r\nimport RSAPodpisWeryfikacja from './rsa/RSAPodpisWeryfikacja';\r\nimport ElGamal from './elgamal/ElGamal';\r\nimport Mod from './mod/Mod';\r\n\r\nimport useLocalStorage from 'utils/useLocalStorage';\r\nimport ElGamalSzyfrowanie from './elgamal/ElGamalSzyfrowanie';\r\nimport ElGamalDeszyfrowanie from './elgamal/ElGamalDeszyfrowanie';\r\nimport ElGamalPodpis from './elgamal/ElGamalPodpis';\r\nimport ElGamalPodpisWeryfikacja from './elgamal/ElGamalPodpisWeryfikacja';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nexport const helpers = {\r\n\todwrotnosc: { key: 'odwrotnosc', name: 'Odwrotność multiplikatywna' },\r\n\tpotegaMod: { key: 'potegaMod', name: 'Potęgowanie modularne' },\r\n\tmod: { key: 'mod', name: 'Modulo' },\r\n};\r\n\r\nexport const methods = {\r\n\tcezar: { key: 'cezar', name: 'Cezar' },\r\n\tafiniczny: { key: 'afiniczny', name: 'Afiniczny' },\r\n\tvigener: { key: 'vigener', name: 'Vigener' },\r\n\thill: { key: 'hill', name: 'Hill' },\r\n\tdiffieHellman: { key: 'diffieHellman', name: 'Diffie Hellman', divider: true },\r\n\r\n\trsaKlucze: { key: 'rsaKlucze', name: 'RSA | Klucze' },\r\n\trsaSzyfrowanie: { key: 'rsaSzyfrowanie', name: 'RSA | Szyfrowanie' },\r\n\trsaDeszyfrowanie: { key: 'rsaDeszyfrowanie', name: 'RSA | Deszyfrowanie' },\r\n\trsaPodpis: { key: 'rsaPodpis', name: 'RSA | Podpis' },\r\n\trsaWeryfikacjaPodpisu: {\r\n\t\tkey: 'rsaWeryfikacjaPodpisu',\r\n\t\tname: 'RSA | Weryfikacja podpisu',\r\n\t\tdivider: true,\r\n\t},\r\n\telGamalKlucze: { key: 'elGamal keys', name: 'El Gamal | Klucze' },\r\n\telGamalSzyfrowanie: { key: 'elGamal szfr', name: 'El Gamal | Szyfrowanie' },\r\n\telGamalDeszyfrowanie: { key: 'elGamal deszfr', name: 'El Gamal | Deszyfrowanie' },\r\n\telGamalPodpis: { key: 'elGamal sign', name: 'El Gamal | Podpis' },\r\n\telGamalWeryfikacjaPodpisu: {\r\n\t\tkey: 'elGamal veryfsign',\r\n\t\tname: 'El Gamal | Weryfikacja podpisu',\r\n\t\tdivider: true,\r\n\t},\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t},\r\n\tappBar: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t},\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tbackgroundColor: 'whitesmoke',\r\n\t\t// backgroundColor: 'oldlace',\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction App() {\r\n\tconst [method, setMethod] = useLocalStorage('method', methods.diffieHellman.key);\r\n\tconst [title, setTitle] = useLocalStorage('title', methods.diffieHellman.name);\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleChange = (key, name) => {\r\n\t\tsetMethod(key);\r\n\t\tsetTitle(name);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Drawer\r\n\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\tvariant='permanent'\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\televation: 3,\r\n\t\t\t\t}}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t}}\r\n\t\t\t\tanchor='left'\r\n\t\t\t>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant='h5'>KryptoBreaker</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<ListItem disabled>Helpers</ListItem>\r\n\t\t\t\t\t{Object.values(helpers).map(({ key, name, divider }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<ListItem button key={key} onClick={() => handleChange(key, name)}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={name} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t{divider && <Divider />}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t{Object.values(methods).map(({ key, name, divider }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<ListItem button key={key} onClick={() => handleChange(key, name)}>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={name} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t{divider && <Divider />}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<ListItem component='a' href='https://github.com/Angael/KryptoBreaker' target='_blank'>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary='Github repository' secondary='source code' />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t\t<Divider />\r\n\t\t\t</Drawer>\r\n\r\n\t\t\t<Paper className={classes.content} elevation={0}>\r\n\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t<Typography variant='h2'>{title}</Typography>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box my={4}>{method === helpers.odwrotnosc.key && <Odwrotnosc />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === helpers.potegaMod.key && <PotegaMod />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === helpers.mod.key && <Mod />}</Box>\r\n\r\n\t\t\t\t\t<Box my={4}>{method === methods.cezar.key && <Cezar />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.afiniczny.key && <Afiniczny />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.vigener.key && <Vigener />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.hill.key && <Hill />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.diffieHellman.key && <DiffieHellman />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.rsaKlucze.key && <RSAKlucze />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.rsaSzyfrowanie.key && <RSASzyfrowanie />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.rsaDeszyfrowanie.key && <RSADeszyfrowanie />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.rsaPodpis.key && <RSAPodpis />}</Box>\r\n\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t{method === methods.rsaWeryfikacjaPodpisu.key && <RSAPodpisWeryfikacja />}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.elGamalKlucze.key && <ElGamal />}</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.elGamalSzyfrowanie.key && <ElGamalSzyfrowanie />}</Box>\r\n\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t{method === methods.elGamalDeszyfrowanie.key && <ElGamalDeszyfrowanie />}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box my={4}>{method === methods.elGamalPodpis.key && <ElGamalPodpis />}</Box>\r\n\t\t\t\t\t<Box my={4}>\r\n\t\t\t\t\t\t{method === methods.elGamalWeryfikacjaPodpisu.key && <ElGamalPodpisWeryfikacja />}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}